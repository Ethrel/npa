'use strict';

let dataurl = '';
let registered = null;

async function loadNPA() {
  if (registered) {
    await registered.unregister();
    registered = null;
  }

  registered = await browser.userScripts.register({
    matches: ["https://np.ironhelmet.com/*"],
    js: [{code: `
      const script = document.createElement('script');
      script.src = '${dataurl}';
      script.async = true;
      script.onerror = () => {
        console.log('Error loading NPA');
      };
      document.body.appendChild(script);
`}],
    scriptMetadata: {userScriptID: "NPA"},
  });
}

dataurl = 'data:text/javascript;base64,!function(){"use strict";var e="Error";function t(t){e=t}function r(){return e}var a={};function n(t,r,n){var i;n&&(r.help=n),a[t]=r,Mousetrap.bind(t,(i=r,function(){i(),navigator.clipboard.writeText(e)}))}var i=function(){return i=Object.assign||function(e){for(var t,r=1,a=arguments.length;r<a;r++)for(var n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},i.apply(this,arguments)};!function(){var e,o,s=(o=" M src/intel.ts".length>0?"⚠":"","Neptune's Pride Agent v".concat("2.0.3"," (").concat("03 Jan 2023 06:22"," ").concat(o).concat("25d0b56",")")),l=s.replace(/^.*v/,"v");function u(){var e=NeptunesPride.universe.galaxy.players,r=NeptunesPride.universe.galaxy.stars,a=[];for(var n in e)for(var i in a.push("[[{0}]]".format(n)),r){var o=r[i];o.puid==n&&o.shipsPerTick>=0&&a.push("  [[{0}]] {1}/{2}/{3} {4} ships".format(o.n,o.e,o.i,o.s,o.totalDefenses))}t(a.join("\n"))}console.log(s),String.prototype.format||(String.prototype.format=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.replace(/{(\d+)}/g,(function(t,r){return"number"==typeof e[r]?Math.trunc(1e3*e[r])/1e3:void 0!==e[r]?e[r]:t}))}),n("*",u,"Generate a report on all stars in your scanning range, and copy it to the clipboard.<p>This same report can also be viewed via the menu; enter the agent and choose it from the dropdown.");var c=function(e,t){return t<10&&(t="0".concat(t)),e<12?(0==e&&(e=12),"{0}:{1} AM".format(e,t)):"{0}:{1} PM".format(e>12?e-12:e,t)},p=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];function d(e){return NeptunesPride.universe.galaxy.tick+e}var f={},h=0,v=function(){var e,t=NeptunesPride.universe,r=NeptunesPride.universe.galaxy.players,a=NeptunesPride.universe.galaxy.fleets,n=NeptunesPride.universe.galaxy.stars,i=[];for(var o in f={},a)if((M=a[o]).o&&M.o.length>0){var s=M.o[0][1],l=M.etaFirst,u=null===(e=n[s])||void 0===e?void 0:e.n;if(!u)continue;i.push([l,"[[{0}]] [[{1}]] {2} → [[{3}]] [[Tick #{4}]]".format(M.puid,M.n,M.st,u,d(l)),M])}i=i.sort((function(e,t){return e[0]-t[0]}));var c={},p=[],v=[],g={};for(var y in i){if((M=i[y][2]).orbiting){var m=M.orbiting.uid;g[m]||(g[m]={last_updated:0,ships:n[m].totalDefenses,puid:n[m].puid,c:n[m].c}),g[m].ships-=M.st}0!==v.length&&v[v.length-1]===i[y][0]||v.push(i[y][0]);var x=[i[y][0],M.o[0][1]].toString();void 0!==c[x]?c[x].push(M):c[x]=[M]}for(var w in c){var P=c[w],b=w.split(","),S=parseInt(b[0]),_=b[1];if(g[_]||(g[_]={last_updated:0,ships:n[_].totalDefenses,puid:n[_].puid,c:n[_].c}),-1==g[_].puid){var k=1e4,T=-1;for(var y in P){var M=P[y],C=t.distance(n[_].x,n[_].y,M.lx,M.ly);(C<k||-1==T)&&(T=M.puid,k=C)}g[_].puid=T}p.push("[[Tick #{0}]]: [[{1}]] [[{2}]] {3} ships".format(d(S),g[_].puid,n[_].n,g[_].ships));var R=S-g[_].last_updated-1;if(R>0){var F=g[_].ships;if(g[_].last_updated=S-1,n[_].shipsPerTick){var D=g[_].c;g[_].ships+=n[_].shipsPerTick*R+D,g[_].c=g[_].ships-Math.trunc(g[_].ships),g[_].ships-=g[_].c,p.push("  {0}+{3} + {2}/h = {1}+{4}".format(F,g[_].ships,n[_].shipsPerTick,D,g[_].c))}}for(var y in P)if((M=P[y]).puid==g[_].puid||-1==g[_].puid){F=g[_].ships,-1==g[_].puid?g[_].ships=M.st:g[_].ships+=M.st;var H="  {0} + {2} on [[{3}]] = {1}".format(F,g[_].ships,M.st,M.n);p.push(H),H=H.substring(2)}for(var y in P)if((M=P[y]).puid==g[_].puid){var j="{0} ships on {1}".format(Math.floor(g[_].ships),n[_].n);f[M.uid]={eta:"[[Tick #".concat(d(M.etaFirst),"]]"),outcome:j}}var O=0,I=0,A={};for(var y in P)if((M=P[y]).puid!=g[_].puid){var U=I;I+=M.st,p.push("  [[{4}]]! {0} + {2} on [[{3}]] = {1}".format(U,I,M.st,M.n,M.puid)),A[[M.puid,M.uid].toString()]=M.st;var E=r[M.puid].tech.weapons.level;E>O&&(O=E)}for(var W=I;I>0;){var L=r[g[_].puid].tech.weapons.level,B=g[_].ships;for(p.push("  Combat! [[{0}]] defending".format(g[_].puid)),p.push("    Defenders {0} ships, WS {1}".format(B,L)),p.push("    Attackers {0} ships, WS {1}".format(I,O)),L+=1,g[_].puid!==t.galaxy.player_uid?h>0?(L+=h,p.push("    Defenders WS{0} = {1}".format(N(""),L))):(O-=h,p.push("    Attackers WS{0} = {1}".format(N(""),O))):h>0?(O+=h,p.push("    Attackers WS{0} = {1}".format(N(""),O))):(L-=h,p.push("    Defenders WS{0} = {1}".format(N(""),L))),t.galaxy.player_uid===g[_].puid&&(B=Math.trunc(B));B>0&&I>0&&!((I-=L)<=0);)B-=O;var G=0,$={},z=-1,Y=g[_].puid;if(I>0){for(var q in p.push("  Attackers win with {0} ships remaining".format(I)),A){var J=q.split(","),X=(M=a[J[1]],parseInt(J[0]));A[q]=I*A[q]/W,G+=A[q],$[X]?$[X]+=A[q]:$[X]=A[q],$[X]>z&&(z=$[X],Y=X),p.push("    [[{0}]] has {1} on [[{2}]]".format(M.puid,A[q],M.n)),j="Wins! {0} land.".format(A[q]),f[M.uid]={eta:"[[Tick #".concat(d(M.etaFirst),"]]"),outcome:j}}I=G-$[Y],g[_].puid=Y,g[_].ships=$[Y]}else{for(var y in g[_].ships=B,P)(M=P[y]).puid==g[_].puid&&(j="{0} ships on {1}".format(Math.floor(g[_].ships),n[_].n),f[M.uid]={eta:"[[Tick #".concat(d(M.etaFirst),"]]"),outcome:j});for(var Q in A)M=a[Q.split(",")[1]],j="Loses! {0} live.".format(B),f[M.uid]={eta:"[[Tick #".concat(d(M.etaFirst),"]]"),outcome:j}}W=I}p.push("  [[{0}]] [[{1}]] {2} ships".format(g[_].puid,n[_].n,g[_].ships))}return p};function g(){t(v().join("\n"))}function y(){var e,r=NeptunesPride.universe.galaxy.fleets,a=NeptunesPride.universe.galaxy.stars,n=[];for(var i in r){var o=r[i];if(o.o&&o.o.length>0){var s=o.o[0][1],l=o.etaFirst;if(!(null===(e=a[s])||void 0===e?void 0:e.n))continue;n.push([l,"[[{0}]] [[{1}]] {2} → [[{3}]] {4}".format(o.puid,o.n,o.st,a[s].n,"[[Tick #".concat(d(l),"]]"))])}}t((n=n.sort((function(e,t){return e[0]-t[0]}))).map((function(e){return e[1]})).join("\n"))}n(".",(function(){h+=1,NeptunesPride.np.trigger("map_rebuild")}),"Change combat calculation to credit your enemies with +1 weapons. Useful if you suspect they will have achieved the next level of tech before a battle you are investigating.<p>In the lower left of the HUD, an indicator will appear reminding you of the weapons adjustment. If the indicator already shows an advantage for defenders, this hotkey will reduce that advantage first before crediting weapons to your opponent."),n(",",(function(){h-=1,NeptunesPride.np.trigger("map_rebuild")}),"Change combat calculation to credit yourself with +1 weapons. Useful when you will have achieved the next level of tech before a battle you are investigating.<p>In the lower left of the HUD, an indicator will appear reminding you of the weapons adjustment. When indicator already shows an advantage for attackers, this hotkey will reduce that advantage first before crediting weapons to you."),n("&",g,"Generate a detailed fleet report on all carriers in your scanning range, and copy it to the clipboard.<p>This same report can also be viewed via the menu; enter the agent and choose it from the dropdown."),n("^",y,"Generate a summary fleet report on all carriers in your scanning range, and copy it to the clipboard.<p>This same report can also be viewed via the menu; enter the agent and choose it from the dropdown."),n("#",(function(){t(NeptunesPride.npui.map.canvas[0].toDataURL("image/webp",.05))}),"Create a data: URL of the current map. Paste it into a browser window to view. This is likely to be removed.");var m=function(){var e=NeptunesPride.universe.galaxy.players,r=[];for(var a in e){var n=e[a].home;n?r.push("Player #{0} is [[{0}]] home {2} [[{1}]]".format(a,n.n,a==n.puid?"is":"was")):r.push("Player #{0} is [[{0}]] home unknown".format(a))}t(r.join("\n"))};n("!",m,"Generate a player summary report and copy it to the clipboard.<p>This same report can also be viewed via the menu; enter the agent and choose it from the dropdown. It is most useful for discovering player numbers so that you can write [[#]] to reference a player in mail."),n("$",(function(){var e=NeptunesPride.universe.galaxy.players,r=[],a=["alias","total_stars","shipsPerTick","total_strength","total_economy","total_fleets","total_industry","total_science"];r.push(a.join(","));var n=function(t){var n=a.map((function(r){return e[t][r]}));r.push(n.join(","))};for(var i in e)n(i);t(r.join("\n"))}),"Generate a player summary mean to be made into a spreadsheet.<p>The clipboard should be pasted into a CSV and then imported.");var x=function(e,t,r,a,n){var i=Crux.format(t,{});e.fillStyle="#000000";for(var o=1;o<4;++o)e.fillText(i,r+o,a+o),e.fillText(i,r-o,a+o),e.fillText(i,r-o,a-o),e.fillText(i,r+o,a-o);e.fillStyle=n||"#00ff00",e.fillText(i,r,a)},w=function(e,t){var r=NeptunesPride.universe.galaxy.stars,a=NeptunesPride.universe,n=a.galaxy.players[e].tech.scanning.value;for(var i in r){var o=r[i];if(o.puid==e&&a.distance(o.x,o.y,t.x,t.y)<=n)return!0}return!1},P=!1,N=function(e){return(void 0!==e?e:h>0?"Enemy WS":"My WS")+(h>0?"+":"")+h},b=!0,S=function(){for(var e={},t=0;t<document.styleSheets.length;++t)try{for(var r=document.styleSheets[t].cssRules,a=0;a<r.length;++a)if(r[a].type===CSSRule.STYLE_RULE){var n=r[a];e[n.selectorText]=n}}catch(e){console.log(e)}return e}();function _(){return e=this,t=void 0,a=function(){var e,t,r,a,n,i,o,s,l,u,c,p,d,f,h,v,g,y,m;return function(e,t){var r,a,n,i,o={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(o=0)),o;)try{if(r=1,a&&(n=2&s[0]?a.return:s[0]?a.throw||((n=a.return)&&n.call(a),0):a.next)&&!(n=n.call(a,s[1])).done)return n;switch(a=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((n=(n=o.trys).length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){o.label=s[1];break}if(6===s[0]&&o.label<n[1]){o.label=n[1],n=s;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(s);break}n[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],a=0}finally{r=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}(this,(function(x){switch(x.label){case 0:for(o in e=NeptunesPride.npui.map,(t=document.createElement("canvas")).width=t.height=576,(r=t.getContext("2d")).drawImage(e.starSrc,0,0),a=NeptunesPride.universe.galaxy.players,i=[],n=a)i.push(o);s=0,x.label=1;case 1:return s<i.length?(o=i[s])in n?(f=a[d=o],l=f.color,S[".bgpc_".concat(f.uid)].style.backgroundColor=l,(u=document.createElement("canvas")).width=u.height=576,(c=u.getContext("2d")).drawImage(e.starSrc,0,0),c.globalCompositeOperation="source-in",c.fillStyle=l,h=f.uid,v=Math.floor(h/8),g=Math.floor(h%8)+1,y=64*v,m=64*g,c.fillRect(y,m,64,64),(p=new Image).src=u.toDataURL(),[4,p.decode()]):[3,3]:[3,4];case 2:x.sent(),r.clearRect(y,m,64,64),r.drawImage(p,0,0),x.label=3;case 3:return s++,[3,1];case 4:for(d in e.starSrc.src=t.toDataURL(),a)f=a[d],h=f.uid,v=Math.floor(h/8),g=Math.floor(h%8)+1,y=64*v,m=64*g,S[".pci_48_".concat(f.uid)].style.background='url("'.concat(e.starSrc.src,'") -').concat(y+8,"px -").concat(m+8,"px");return console.log("Recreating star and fleet sprites"),NeptunesPride.np.trigger("map_rebuild"),[2]}}))},new((r=void 0)||(r=Promise))((function(n,i){function o(e){try{l(a.next(e))}catch(e){i(e)}}function s(e){try{l(a.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,s)}l((a=a.apply(e,t||[])).next())}));var e,t,r,a}n(")",(function(){b=!b,NeptunesPride.np.trigger("map_rebuild")}),"Toggle the territory display. Range and scanning for all stars of the selected empire are shown."),n("w",(function(){var e=NeptunesPride.universe.player;if(void 0===NeptunesPride.universe.player.origColor)e.origColor=e.color,e.color="#ffffff";else{var t=e.origColor;e.origColor=e.color,e.color=t}_()}),"Toggle between my color and white on the map display.");var k=function(){var e;(null===(e=NeptunesPride.universe)||void 0===e?void 0:e.galaxy)&&NeptunesPride.npui.map?(function(){var e=NeptunesPride.universe,t=NeptunesPride.universe.galaxy.fleets;for(var r in t){var a=t[r],n='<a onClick=\'Crux.crux.trigger("show_fleet_uid", "'.concat(a.uid,"\")'>").concat(a.n,"</a>");e.hyperlinkedMessageInserts[a.n]=n}}(),console.log("Fleet linking complete."),P?console.log("HUD setup already done; skipping."):(function(){var e=NeptunesPride.npui.map,t=e.drawScanningRange;function a(t,r,a,n,i){var o=e.context;o.save(),o.fillStyle=i,o.translate(t,r),o.scale(a,a),o.moveTo(0,0),o.arc(0,0,n,0,2*Math.PI),o.restore()}function i(t,r){var n=e.worldToScreenX(t.x),i=e.worldToScreenY(t.y),o=h,s=t.player.tech.scanning.value/(t.player.tech.scanning.level+2),l=(t.player.tech.scanning.level+2+o)*s*e.scale*e.pixelRatio/250,u=.9*e.scanningRangeSprite.width/2,c=h,p=t.player.tech.propulsion.value/(t.player.tech.propulsion.level+3),d=(t.player.tech.propulsion.level+3+c)*p*e.scale*e.pixelRatio/250,f=.9*e.fleetRangeSprite.width/2,v="".concat(t.player.color,"35");r?a(n,i,l,u,v):a(n,i,d,f,v)}e.drawScanningRange=function(){var r,a;t();var n=NeptunesPride.universe;if((null===(r=n.selectedStar)||void 0===r?void 0:r.player)&&b){var o=e.context,s=n.selectedStar.player.uid,l=!1;do{for(var u in l=!l,o.beginPath(),n.galaxy.stars){var c=n.galaxy.stars[u];(null===(a=c.player)||void 0===a?void 0:a.uid)==s&&i(c,l)}var p="".concat(n.galaxy.players[s].color,"35");o.fillStyle=p,o.fill(),o.closePath()}while(l)}};var o=NeptunesPride.npui.map.drawText;NeptunesPride.npui.map.drawText=function(){var e=NeptunesPride.universe,t=NeptunesPride.npui.map;o(),t.context.font="".concat(14*t.pixelRatio,"px OpenSansRegular, sans-serif"),t.context.fillStyle="#FF0000",t.context.textAlign="right",t.context.textBaseline="middle";var r=l;if(0!==h&&(r="".concat(N()," ").concat(r)),x(t.context,r,t.viewportWidth-10,t.viewportHeight-16*t.pixelRatio),void 0===NeptunesPride.originalPlayer&&(NeptunesPride.originalPlayer=e.player.uid),NeptunesPride.originalPlayer!==e.player.uid){var a=e.galaxy.players[e.player.uid].alias;x(t.context,a,t.viewportWidth-100,t.viewportHeight-32*t.pixelRatio)}if(e.selectedFleet&&e.selectedFleet.path.length>0){t.context.font="".concat(14*t.pixelRatio,"px OpenSansRegular, sans-serif"),t.context.fillStyle="#FF0000",t.context.textAlign="left",t.context.textBaseline="middle";var n=e.selectedFleet.y-e.selectedFleet.ly,i=e.selectedFleet.x-e.selectedFleet.lx;n=e.selectedFleet.path[0].y-e.selectedFleet.y,i=e.selectedFleet.path[0].x-e.selectedFleet.x;var s=16*t.pixelRatio,u=.056*t.scale*t.pixelRatio,c=Math.atan(n/i);(T=u*Math.cos(c))>0&&i>0&&(T*=-1),(M=u*Math.sin(c))>0&&n>0&&(M*=-1),T<0&&i<0&&(T*=-1),M<0&&n<0&&(M*=-1),v();var p=f[e.selectedFleet.uid].eta,g=f[e.selectedFleet.uid].outcome,y=t.worldToScreenX(e.selectedFleet.x)+T,m=t.worldToScreenY(e.selectedFleet.y)+M;T<0&&(t.context.textAlign="right"),x(t.context,p,y,m),x(t.context,g,y,m+s)}if(!NeptunesPride.gameConfig.turnBased&&e.timeToTick(1).length<3&&(s=16*t.pixelRatio,t.context.font="".concat(14*t.pixelRatio,"px OpenSansRegular, sans-serif"),t.context.fillStyle="#FF0000",t.context.textAlign="left",t.context.textBaseline="middle",p="Tick < 10s away!","0s"===e.timeToTick(1)&&(p="Tick passed. Click production countdown to refresh."),x(t.context,p,1e3,s)),e.selectedStar&&e.selectedStar.puid!=e.player.uid&&-1!==e.selectedStar.puid){t.context.textAlign="left",t.context.textBaseline="middle";var P=26*t.pixelRatio,b=NeptunesPride.universe.galaxy.fleets;for(var S in b){var _=b[S];if(_.puid===e.player.uid){i=e.selectedStar.x-_.x,n=e.selectedStar.y-_.y;var k=Math.sqrt(i*i+n*n),T=P,M=0;if(y=t.worldToScreenX(_.x)+T,m=t.worldToScreenY(_.y)+M,k>e.galaxy.players[e.selectedStar.puid].tech.scanning.value&&_.path&&_.path.length>0&&(i=_.path[0].x-e.selectedStar.x,n=_.path[0].y-e.selectedStar.y,(k=Math.sqrt(i*i+n*n))<e.galaxy.players[e.selectedStar.puid].tech.scanning.value)){var C=NeptunesPride.universe.galaxy.fleet_speed;_.warpSpeed&&(C*=3),i=_.x-_.path[0].x,n=_.y-_.path[0].y,c=Math.atan(n/i);var R=C*Math.cos(c),F=C*Math.sin(c);R>0&&i>0&&(R*=-1),F>0&&n>0&&(F*=-1),R<0&&i<0&&(R*=-1),F<0&&n<0&&(F*=-1);var D=0;do{var H=D*R+Number(_.x),j=D*F+Number(_.y);i=H-e.selectedStar.x,n=j-e.selectedStar.y,k=Math.sqrt(i*i+n*n),D+=1}while(k>e.galaxy.players[e.selectedStar.puid].tech.scanning.value&&D<=_.etaFirst+1);D-=1;var O="#00ff00";w(e.selectedStar.puid,_)&&(O="#888888"),x(t.context,"Scan [[Tick #".concat(d(D),"]]"),y,m,O)}}}}2==e.ruler.stars.length&&(e.ruler.stars[0].puid,e.ruler.stars[1].puid)},Crux.format=function(e,t){if(!e)return"error";var r,a,n,i,o,s,l,u,c,p,d;for(r=0,a=0,n=0,i="",o="";a>=0&&r<1e3&&(r+=1,a=e.indexOf("[["),n=e.indexOf("]]"),-1!==a);)if(i=e.slice(a+2,n),o="[[".concat(i,"]]"),void 0!==t[i])e=e.replace(o,t[i]);else if(/^Tick #\d\d*$/.test(i)){var f=i.split("#"),h=parseInt(f[1])-NeptunesPride.universe.galaxy.tick,v=(s=h,l=!1,u=void 0,c=void 0,p=void 0,d=void 0,u=NeptunesPride.universe,c=0,p=u.galaxy.tick_fragment,d=u.locTimeCorrection,u.galaxy.paused||(c=(new Date).valueOf()-u.now.valueOf()),(l||u.galaxy.turn_based)&&(c=0,p=0,d=0),1e3*s*60*u.galaxy.tick_rate-1e3*p*60*u.galaxy.tick_rate-c-d);e=e.replace(o,Crux.formatTime(v,!0))}else if(/^https:&#x2F;&#x2F;(i\.ibb\.co|i\.imgur\.com)&#x2F;[-#;\.\w]{3,200}$/.test(i))e=e.replace(o,'<img width="100%" src=\''.concat(i,"' />"));else if(/^api:\w{6}$/.test(i)){var g='<a onClick=\'Crux.crux.trigger("switch_user_api", "'.concat(i,"\")'> View as ").concat(i,"</a>");g+=' or <a onClick=\'Crux.crux.trigger("merge_user_api", "'.concat(i,"\")'> Merge ").concat(i,"</a>"),e=e.replace(o,g)}else e=i.startsWith("data:")?e.replace(o,'<div width="100%" class="screenshot"><img class="screenshot" src="'.concat(i,'"/></div>')):e.replace(o,"(".concat(i,")"));return e};var S=NeptunesPride.npui;NeptunesPride.templates.n_p_a="NP Agent",NeptunesPride.templates.npa_report_type="Report Type:",NeptunesPride.templates.npa_paste="Intel";var _=S.NewMessageCommentBox;NeptunesPride.np.on("paste_report",(function(e,t){var a=NeptunesPride.inbox;a.commentDrafts[a.selectedMessage.key]+="\n"+r(),a.trigger("show_screen","diplomacy_detail")})),S.NewMessageCommentBox=function(){var e=_();return Crux.Button("npa_paste","paste_report","intel").grid(10,12,4,3).roost(e),e},NeptunesPride.np.on("trigger_npa",(function(e){S.onHideScreen(null,!0),S.onHideSelectionMenu(),S.trigger("hide_side_menu"),S.trigger("reset_edit_mode");var t=S.Screen("n_p_a");Crux.Text("","rel pad12 txt_center col_black  section_title").rawHTML(s).roost(t);var a=Crux.Widget("rel  col_accent").size(480,48),n=Crux.Widget("rel");Crux.Text("npa_report_type","pad12").roost(a),Crux.DropDown("",{planets:"Home Planets",fleets:"Fleets (short)",combats:"Fleets (long)",stars:"Stars"},"exec_report").grid(15,0,15,3).roost(a);var i=Crux.Text("","pad12 rel txt_selectable").size(432).pos(48).rawHTML("Choose a report from the dropdown.");i.roost(n),a.roost(t),n.roost(t);var o=function(e,t){console.log("Execute report",e,t),"planets"===t?m():"fleets"===t?y():"combats"===t?g():"stars"===t&&u();var a=r().replace(/\n/g,"<br>");a=NeptunesPride.inbox.hyperlinkMessage(a),i.rawHTML(a)};o(0,"planets"),NeptunesPride.np.on("exec_report",o),S.activeScreen=t,t.roost(S.screenContainer),S.layoutElement(t)})),S.SideMenuItem("icon-eye","n_p_a","trigger_npa").roost(S.sideMenu);var k=Crux.formatTime,T=["relative","eta","tickrel","tick"],M="eta";Crux.formatTime=function(e,t,r){if("relative"===M)return k(e,t,r);if("eta"===M)return a=e,n="",i=new Date,o=new Date(i.getTime()+a),l=(s=void 0!==n?n:"ETA ")+c(o.getHours(),o.getMinutes()),o.getDay()!=i.getDay()&&(l="".concat(s).concat(p[o.getDay()]," @ ").concat(c(o.getHours(),o.getMinutes()))),l;var a,n,i,o,s,l;if("tick"===M){var u=e/(60*NeptunesPride.universe.galaxy.tick_rate*1e3);return"Tick #".concat(Math.ceil(u)+NeptunesPride.universe.galaxy.tick)}return"tickrel"===M?(u=e/(60*NeptunesPride.universe.galaxy.tick_rate*1e3),"".concat(Math.ceil(u)," ticks")):void 0},n("%",(function(){var e=(T.indexOf(M)+1)%T.length;M=T[e],NeptunesPride.np.trigger("refresh_interface"),NeptunesPride.np.trigger("map_rebuild")}),"Change the display of ETAs from relative times to absolute clock times. Makes predicting important times of day to sign in and check much easier especially for multi-leg fleet movements. Sometimes you will need to refresh the display to see the different times."),window.chrome&&(Object.defineProperty(Crux,"touchEnabled",{get:function(){return!1}}),Object.defineProperty(NeptunesPride.npui.map,"ignoreMouseEvents",{get:function(){return!1}})),P=!0}(),console.log("HUD setup complete.")),_(),m()):console.log("Game not fully initialized yet; wait.",NeptunesPride.universe)};if(n("@",k,"Reinitialize Neptune's Pride Agent. Use the @ hotkey if the version is not being shown on the map after dragging."),(null===(e=NeptunesPride.universe)||void 0===e?void 0:e.galaxy)&&NeptunesPride.npui.map)console.log("Universe already loaded. Hyperlink fleets & load hooks."),k();else{console.log("Universe not loaded. Hook onServerResponse.");var T=NeptunesPride.np.onServerResponse;NeptunesPride.np.onServerResponse=function(e){T(e),"order:player_achievements"===e.event?(console.log("Initial load complete. Reinstall."),k()):"order:full_universe"===e.event?(console.log("Universe received. Reinstall."),NeptunesPride.originalPlayer=NeptunesPride.universe.player.uid,k()):!P&&NeptunesPride.npui.map&&(console.log("Hooks need loading and map is ready. Reinstall."),k())}}var M=void 0,C=NeptunesPride.gameNumber,R=function(e,t){void 0===NeptunesPride.originalPlayer&&(NeptunesPride.originalPlayer=NeptunesPride.universe.player.uid);var r=(null==t?void 0:t.split(":")[1])||M;if(M=r){var a={game_number:C,api_version:"0.1",code:M},n=jQuery.ajax({type:"POST",url:"https://np.ironhelmet.com/api",async:!1,data:a,dataType:"json"});NeptunesPride.np.onFullUniverse(null,n.responseJSON.scanning_data),NeptunesPride.npui.onHideScreen(null,!0),NeptunesPride.np.trigger("select_player",[NeptunesPride.universe.player.uid,!0]),k()}},F=function(e,t){void 0===NeptunesPride.originalPlayer&&(NeptunesPride.originalPlayer=NeptunesPride.universe.player.uid);var r=(null==t?void 0:t.split(":")[1])||M;if(M=r){var a={game_number:C,api_version:"0.1",code:M},n=jQuery.ajax({type:"POST",url:"https://np.ironhelmet.com/api",async:!1,data:a,dataType:"json"}),o=NeptunesPride.universe,s=n.responseJSON.scanning_data;for(var l in o.galaxy.stars=i(i({},s.stars),o.galaxy.stars),s.stars){var u=s.stars[l];"0"!==u.v&&(o.galaxy.stars[l]=i(i({},o.galaxy.stars[l]),u))}o.galaxy.fleets=i(i({},s.fleets),o.galaxy.fleets),NeptunesPride.np.onFullUniverse(null,o.galaxy),NeptunesPride.npui.onHideScreen(null,!0),k()}};n(">",R,"Switch views to the last user whose API key was used to load data. The HUD shows the current user when it is not your own alias to help remind you that you aren't in control of this user."),n("|",F,"Merge the latest data from the last user whose API key was used to load data. This is useful after a tick passes and you've reloaded, but you still want the merged scan data from two players onscreen."),NeptunesPride.np.on("switch_user_api",R),NeptunesPride.np.on("merge_user_api",F),n("?",(function(){var e=["<H1>".concat(s,"</H1>")];Object.keys(a).forEach((function(t){var r=function(e){return a[e]}(t);e.push("<h2>Hotkey: ".concat(t,"</h2>")),r.help?e.push(r.help):e.push("<p>No documentation yet.<p><code>".concat(r.toLocaleString(),"</code>"))})),NeptunesPride.universe.helpHTML=e.join(""),NeptunesPride.np.trigger("show_screen","help")}),"Display this help screen.");var D=0;document.body.addEventListener("keyup",(function(e){var t=e.target;if("textarea"===t.type)if("]"===e.key){if(D<=0){if((D=t.value.lastIndexOf("[[")+2)<=1)return void(D=0);if(t.value.indexOf("]]",D)>-1)return void(D=0)}var r=D,a=t.value.indexOf("]",r);-1===a&&(a=t.value.length);var n=t.value.substring(r,a);D=0;var i=n.match(/^[0-9][0-9]*$/);if(null==i?void 0:i.length){var o=Number(n),s=t.selectionEnd,l="".concat(o,"]] ").concat(NeptunesPride.universe.galaxy.players[o].alias);t.value=t.value.substring(0,r)+l+t.value.substring(s,t.value.length),t.selectionStart=r+l.length,t.selectionEnd=r+l.length}}else if(t.selectionStart>1){r=t.selectionStart-2;var u=t.value.substring(r,r+2);D="[["===u?t.selectionStart:0}})),console.log("Neptune's Pride Agent injection fini.")}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWwuanMiLCJtYXBwaW5ncyI6InlCQUFPLElDQUhBLEVBQVcsUUFDUixTQUFTQyxFQUFRQyxHQUNwQkYsRUFBV0UsQ0FDZixDQUNPLFNBQVNDLElBQ1osT0FBT0gsQ0FDWCxDQUNBLElBTUlJLEVBQVUsQ0FBQyxFQUNSLFNBQVNDLEVBQWFDLEVBQUtDLEVBQVFDLEdBUC9CLElBQVVDLEVBUWJELElBQ0FELEVBQU9DLEtBQU9BLEdBRWxCSixFQUFRRSxHQUFPQyxFQUNmRyxVQUFVQyxLQUFLTCxHQVpFRyxFQVlRRixFQVhsQixXQUNIRSxJQUNBRyxVQUFVQyxVQUFVQyxVQUFVZCxFQUNsQyxHQVNKLENDYkEsSUFBSWUsRUFBc0MsV0FTdEMsT0FSQUEsRUFBV0MsT0FBT0MsUUFBVSxTQUFTQyxHQUNqQyxJQUFLLElBQUlDLEVBQUdDLEVBQUksRUFBR0MsRUFBSUMsVUFBVUMsT0FBUUgsRUFBSUMsRUFBR0QsSUFFNUMsSUFBSyxJQUFJSSxLQURUTCxFQUFJRyxVQUFVRixHQUNPSixPQUFPUyxVQUFVQyxlQUFlQyxLQUFLUixFQUFHSyxLQUN6RE4sRUFBRU0sR0FBS0wsRUFBRUssSUFFakIsT0FBT04sQ0FDWCxFQUNPSCxFQUFTYSxNQUFNQyxLQUFNUCxVQUNoQyxHQXlDQSxXQUNJLElBQUlRLEVGbkRBQyxFRW9EQUMsR0ZwREFELEVBTEksa0JBSzBCUixPQUFTLEVBQUksSUFBTSxHQUM5QywwQkFBMEJVLE9BTHhCLFFBS3FELE1BQU1BLE9BUDlELG9CQU93RixLQUFLQSxPQUFPRixHQUFTRSxPQVI3RyxVQVF1SSxNRW9EeklDLEVBQVVGLEVBQU1HLFFBQVEsT0FBUSxLQXlCcEMsU0FBU0MsSUFDTCxJQUFJQyxFQUFVQyxjQUFjQyxTQUFTQyxPQUFPSCxRQUN4Q0ksRUFBUUgsY0FBY0MsU0FBU0MsT0FBT0MsTUFDdENDLEVBQVMsR0FDYixJQUFLLElBQUlsQixLQUFLYSxFQUVWLElBQUssSUFBSWxCLEtBRFR1QixFQUFPQyxLQUFLLFVBQVVDLE9BQU9wQixJQUNmaUIsRUFBTyxDQUNqQixJQUFJSSxFQUFPSixFQUFNdEIsR0FDYjBCLEVBQUtDLE1BQVF0QixHQUFLcUIsRUFBS0UsY0FBZ0IsR0FDdkNMLEVBQU9DLEtBQUssa0NBQWtDQyxPQUFPQyxFQUFLeEIsRUFBR3dCLEVBQUtHLEVBQUdILEVBQUt6QixFQUFHeUIsRUFBSzFCLEVBQUcwQixFQUFLSSxlQUVsRyxDQUVKaEQsRUFBUXlDLEVBQU9RLEtBQUssTUFDeEIsQ0F0Q0FDLFFBQVFDLElBQUlwQixHQUNQcUIsT0FBTzVCLFVBQVVtQixTQUNsQlMsT0FBTzVCLFVBQVVtQixPQUFTLFdBRXRCLElBREEsSUFBSVUsRUFBTyxHQUNGQyxFQUFLLEVBQUdBLEVBQUtqQyxVQUFVQyxPQUFRZ0MsSUFDcENELEVBQUtDLEdBQU1qQyxVQUFVaUMsR0FFekIsT0FBTzFCLEtBQUtNLFFBQVEsWUFBWSxTQUFVcUIsRUFBT0MsR0FDN0MsTUFBMkIsaUJBQWhCSCxFQUFLRyxHQUNMQyxLQUFLQyxNQUFvQixJQUFkTCxFQUFLRyxJQUFpQixTQUVmLElBQWZILEVBQUtHLEdBQXdCSCxFQUFLRyxHQUFTRCxDQUM3RCxHQUNKLEdBMEJKbkQsRUFBYSxJQUFLK0IsRUFBWSw2TEFFOUIsSUFBSXdCLEVBQU8sU0FBVUMsRUFBR0MsR0FHcEIsT0FGSUEsRUFBSSxLQUNKQSxFQUFJLElBQUk3QixPQUFPNkIsSUFDZkQsRUFBSSxJQUNLLEdBQUxBLElBQ0FBLEVBQUksSUFDRCxhQUFhakIsT0FBT2lCLEVBQUdDLElBR3ZCLGFBQWFsQixPQURmaUIsRUFBSSxHQUNrQkEsRUFBSSxHQUVSQSxFQUZZQyxFQUczQyxFQW9CSUMsRUFBTyxDQUFDLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE9BY3RELFNBQVNDLEVBQVdDLEdBQ2hCLE9BQU8zQixjQUFjQyxTQUFTQyxPQUFPMEIsS0FBT0QsQ0FDaEQsQ0FDQSxJQUFJRSxFQUFnQixDQUFDLEVBQ2pCQyxFQUFpQixFQUNqQkMsRUFBaUIsV0FDakIsSUFBSXZDLEVBQ0FTLEVBQVdELGNBQWNDLFNBQ3pCRixFQUFVQyxjQUFjQyxTQUFTQyxPQUFPSCxRQUN4Q2lDLEVBQVNoQyxjQUFjQyxTQUFTQyxPQUFPOEIsT0FDdkM3QixFQUFRSCxjQUFjQyxTQUFTQyxPQUFPQyxNQUN0QzhCLEVBQVUsR0FFZCxJQUFLLElBQUlDLEtBRFRMLEVBQWdCLENBQUMsRUFDSEcsRUFFVixJQURJRyxFQUFRSCxFQUFPRSxJQUNURSxHQUFLRCxFQUFNQyxFQUFFbkQsT0FBUyxFQUFHLENBQy9CLElBQUlvRCxFQUFTRixFQUFNQyxFQUFFLEdBQUcsR0FDcEJULEVBQVFRLEVBQU1HLFNBQ2RDLEVBQW9DLFFBQXhCL0MsRUFBS1csRUFBTWtDLFVBQTRCLElBQVA3QyxPQUFnQixFQUFTQSxFQUFHVCxFQUM1RSxJQUFLd0QsRUFDRCxTQUVKTixFQUFRNUIsS0FBSyxDQUNUc0IsRUFDQSw4Q0FBOENyQixPQUFPNkIsRUFBTTNCLEtBQU0yQixFQUFNcEQsRUFBR29ELEVBQU1LLEdBQUlELEVBQVViLEVBQVdDLElBQ3pHUSxHQUVSLENBRUpGLEVBQVVBLEVBQVFRLE1BQUssU0FBVUMsRUFBR0MsR0FDaEMsT0FBT0QsRUFBRSxHQUFLQyxFQUFFLEVBQ3BCLElBQ0EsSUFBSUMsRUFBVyxDQUFDLEVBQ1p4QyxFQUFTLEdBQ1R5QyxFQUFlLEdBQ2ZDLEVBQVksQ0FBQyxFQUNqQixJQUFLLElBQUloRSxLQUFLbUQsRUFBUyxDQUVuQixJQURJRSxFQUFRRixFQUFRbkQsR0FBRyxJQUNiaUUsU0FBVSxDQUNoQixJQUFJQyxFQUFRYixFQUFNWSxTQUFTRSxJQUN0QkgsRUFBVUUsS0FDWEYsRUFBVUUsR0FBUyxDQUNmRSxhQUFjLEVBQ2RDLE1BQU9oRCxFQUFNNkMsR0FBT3JDLGNBQ3BCSCxLQUFNTCxFQUFNNkMsR0FBT3hDLEtBQ25CNEMsRUFBR2pELEVBQU02QyxHQUFPSSxJQUl4Qk4sRUFBVUUsR0FBT0csT0FBU2hCLEVBQU1LLEVBQ3BDLENBQzRCLElBQXhCSyxFQUFhNUQsUUFDYjRELEVBQWFBLEVBQWE1RCxPQUFTLEtBQU9nRCxFQUFRbkQsR0FBRyxJQUNyRCtELEVBQWF4QyxLQUFLNEIsRUFBUW5ELEdBQUcsSUFFakMsSUFBSXVFLEVBQWEsQ0FBQ3BCLEVBQVFuRCxHQUFHLEdBQUlxRCxFQUFNQyxFQUFFLEdBQUcsSUFBSWtCLGdCQUNuQkMsSUFBekJYLEVBQVNTLEdBQ1RULEVBQVNTLEdBQVloRCxLQUFLOEIsR0FHMUJTLEVBQVNTLEdBQWMsQ0FBQ2xCLEVBRWhDLENBQ0EsSUFBSyxJQUFJcUIsS0FBS1osRUFBVSxDQUNwQixJQUFJYSxFQUFVYixFQUFTWSxHQUNuQkUsRUFBS0YsRUFBRUcsTUFBTSxLQUNiL0IsRUFBT2dDLFNBQVNGLEVBQUcsSUFDbkJHLEVBQVNILEVBQUcsR0FTaEIsR0FSS1osRUFBVWUsS0FDWGYsRUFBVWUsR0FBVSxDQUNoQlgsYUFBYyxFQUNkQyxNQUFPaEQsRUFBTTBELEdBQVFsRCxjQUNyQkgsS0FBTUwsRUFBTTBELEdBQVFyRCxLQUNwQjRDLEVBQUdqRCxFQUFNMEQsR0FBUVQsS0FHTSxHQUEzQk4sRUFBVWUsR0FBUXJELEtBQVksQ0FFOUIsSUFBSXNELEVBQWMsSUFDZEMsR0FBUyxFQUNiLElBQUssSUFBSWpGLEtBQUsyRSxFQUFTLENBQ25CLElBQUl0QixFQUFRc0IsRUFBUTNFLEdBQ2hCa0YsRUFBSS9ELEVBQVNnRSxTQUFTOUQsRUFBTTBELEdBQVFLLEVBQUcvRCxFQUFNMEQsR0FBUU0sRUFBR2hDLEVBQU1pQyxHQUFJakMsRUFBTWtDLEtBQ3hFTCxFQUFJRixJQUF5QixHQUFWQyxLQUNuQkEsRUFBUTVCLEVBQU0zQixLQUNkc0QsRUFBY0UsRUFFdEIsQ0FDQWxCLEVBQVVlLEdBQVFyRCxLQUFPdUQsQ0FDN0IsQ0FDQTNELEVBQU9DLEtBQUssMkNBQTJDQyxPQUFPb0IsRUFBV0UsR0FBT2tCLEVBQVVlLEdBQVFyRCxLQUFNTCxFQUFNMEQsR0FBUTlFLEVBQUcrRCxFQUFVZSxHQUFRVixRQUMzSSxJQUFJbUIsRUFBWTFDLEVBQU9rQixFQUFVZSxHQUFRWCxhQUFlLEVBQ3hELEdBQUlvQixFQUFZLEVBQUcsQ0FDZixJQUFJQyxFQUFXekIsRUFBVWUsR0FBUVYsTUFFakMsR0FEQUwsRUFBVWUsR0FBUVgsYUFBZXRCLEVBQU8sRUFDcEN6QixFQUFNMEQsR0FBUXBELGFBQWMsQ0FDNUIsSUFBSStELEVBQU8xQixFQUFVZSxHQUFRVCxFQUM3Qk4sRUFBVWUsR0FBUVYsT0FDZGhELEVBQU0wRCxHQUFRcEQsYUFBZTZELEVBQVlFLEVBQzdDMUIsRUFBVWUsR0FBUVQsRUFDZE4sRUFBVWUsR0FBUVYsTUFBUS9CLEtBQUtDLE1BQU15QixFQUFVZSxHQUFRVixPQUMzREwsRUFBVWUsR0FBUVYsT0FBU0wsRUFBVWUsR0FBUVQsRUFDN0NoRCxFQUFPQyxLQUFLLDhCQUE4QkMsT0FBT2lFLEVBQVV6QixFQUFVZSxHQUFRVixNQUFPaEQsRUFBTTBELEdBQVFwRCxhQUFjK0QsRUFBTTFCLEVBQVVlLEdBQVFULEdBQzVJLENBQ0osQ0FDQSxJQUFLLElBQUl0RSxLQUFLMkUsRUFFVixJQURJdEIsRUFBUXNCLEVBQVEzRSxJQUNWMEIsTUFBUXNDLEVBQVVlLEdBQVFyRCxPQUNMLEdBQTNCc0MsRUFBVWUsR0FBUXJELEtBQVksQ0FDMUIrRCxFQUFXekIsRUFBVWUsR0FBUVYsT0FDRixHQUEzQkwsRUFBVWUsR0FBUXJELEtBQ2xCc0MsRUFBVWUsR0FBUVYsTUFBUWhCLEVBQU1LLEdBR2hDTSxFQUFVZSxHQUFRVixPQUFTaEIsRUFBTUssR0FFckMsSUFBSWlDLEVBQWdCLCtCQUErQm5FLE9BQU9pRSxFQUFVekIsRUFBVWUsR0FBUVYsTUFBT2hCLEVBQU1LLEdBQUlMLEVBQU1wRCxHQUM3R3FCLEVBQU9DLEtBQUtvRSxHQUNaQSxFQUFnQkEsRUFBY0MsVUFBVSxFQUM1QyxDQUVKLElBQUssSUFBSTVGLEtBQUsyRSxFQUVWLElBREl0QixFQUFRc0IsRUFBUTNFLElBQ1YwQixNQUFRc0MsRUFBVWUsR0FBUXJELEtBQU0sQ0FDdEMsSUFBSW1FLEVBQWdCLG1CQUFtQnJFLE9BQU9jLEtBQUt3RCxNQUFNOUIsRUFBVWUsR0FBUVYsT0FBUWhELEVBQU0wRCxHQUFROUUsR0FDakc4QyxFQUFjTSxFQUFNYyxLQUFPLENBQ3ZCNEIsSUFBSyxXQUFXbEYsT0FBTytCLEVBQVdTLEVBQU1HLFVBQVcsTUFDbkR3QyxRQUFTSCxFQUVqQixDQUVKLElBQUlJLEVBQU0sRUFDTkMsRUFBVSxFQUNWQyxFQUFlLENBQUMsRUFDcEIsSUFBSyxJQUFJbkcsS0FBSzJFLEVBRVYsSUFESXRCLEVBQVFzQixFQUFRM0UsSUFDVjBCLE1BQVFzQyxFQUFVZSxHQUFRckQsS0FBTSxDQUN0QyxJQUFJMEUsRUFBT0YsRUFDWEEsR0FBVzdDLEVBQU1LLEdBQ2pCcEMsRUFBT0MsS0FBSyx3Q0FBd0NDLE9BQU80RSxFQUFNRixFQUFTN0MsRUFBTUssR0FBSUwsRUFBTXBELEVBQUdvRCxFQUFNM0IsT0FDbkd5RSxFQUFhLENBQUM5QyxFQUFNM0IsS0FBTTJCLEVBQU1jLEtBQUtLLFlBQWNuQixFQUFNSyxHQUN6RCxJQUFJMkMsRUFBS3BGLEVBQVFvQyxFQUFNM0IsTUFBTTRFLEtBQUtDLFFBQVFDLE1BQ3RDSCxFQUFLSixJQUNMQSxFQUFNSSxFQUVkLENBR0osSUFEQSxJQUFJSSxFQUFxQlAsRUFDbEJBLEVBQVUsR0FBRyxDQUNoQixJQUFJUSxFQUFNekYsRUFBUStDLEVBQVVlLEdBQVFyRCxNQUFNNEUsS0FBS0MsUUFBUUMsTUFDbkRHLEVBQVUzQyxFQUFVZSxHQUFRVixNQThCaEMsSUE3QkEvQyxFQUFPQyxLQUFLLDhCQUE4QkMsT0FBT3dDLEVBQVVlLEdBQVFyRCxPQUNuRUosRUFBT0MsS0FBSyxrQ0FBa0NDLE9BQU9tRixFQUFTRCxJQUM5RHBGLEVBQU9DLEtBQUssa0NBQWtDQyxPQUFPMEUsRUFBU0QsSUFDOURTLEdBQU8sRUFDSDFDLEVBQVVlLEdBQVFyRCxPQUFTUCxFQUFTQyxPQUFPd0YsV0FDdkM1RCxFQUFpQixHQUNqQjBELEdBQU8xRCxFQUNQMUIsRUFBT0MsS0FBSyw0QkFBNEJDLE9BQU9xRixFQUFlLElBQUtILE1BR25FVCxHQUFPakQsRUFDUDFCLEVBQU9DLEtBQUssNEJBQTRCQyxPQUFPcUYsRUFBZSxJQUFLWixLQUluRWpELEVBQWlCLEdBQ2pCaUQsR0FBT2pELEVBQ1AxQixFQUFPQyxLQUFLLDRCQUE0QkMsT0FBT3FGLEVBQWUsSUFBS1osTUFHbkVTLEdBQU8xRCxFQUNQMUIsRUFBT0MsS0FBSyw0QkFBNEJDLE9BQU9xRixFQUFlLElBQUtILEtBR3ZFdkYsRUFBU0MsT0FBT3dGLGFBQWU1QyxFQUFVZSxHQUFRckQsT0FHakRpRixFQUFVckUsS0FBS0MsTUFBTW9FLElBRWxCQSxFQUFVLEdBQUtULEVBQVUsTUFDNUJBLEdBQVdRLElBQ0ksSUFFZkMsR0FBV1YsRUFFZixJQUFJYSxFQUFlLEVBQ2ZDLEVBQXFCLENBQUMsRUFDdEJDLEdBQWlCLEVBQ2pCQyxFQUFrQmpELEVBQVVlLEdBQVFyRCxLQUN4QyxHQUFJd0UsRUFBVSxFQUFHLENBRWIsSUFBSyxJQUFJZ0IsS0FEVDVGLEVBQU9DLEtBQUssMkNBQTJDQyxPQUFPMEUsSUFDOUNDLEVBQWMsQ0FDMUIsSUFBSWdCLEVBQU9ELEVBQUlyQyxNQUFNLEtBRWpCdUMsR0FEQS9ELEVBQVFILEVBQU9pRSxFQUFLLElBQ1RyQyxTQUFTcUMsRUFBSyxLQUM3QmhCLEVBQWFlLEdBQVFoQixFQUFVQyxFQUFhZSxHQUFRVCxFQUNwREssR0FBZ0JYLEVBQWFlLEdBQ3pCSCxFQUFtQkssR0FDbkJMLEVBQW1CSyxJQUFhakIsRUFBYWUsR0FHN0NILEVBQW1CSyxHQUFZakIsRUFBYWUsR0FFNUNILEVBQW1CSyxHQUFZSixJQUMvQkEsRUFBZ0JELEVBQW1CSyxHQUNuQ0gsRUFBa0JHLEdBRXRCOUYsRUFBT0MsS0FBSyxpQ0FBaUNDLE9BQU82QixFQUFNM0IsS0FBTXlFLEVBQWFlLEdBQU03RCxFQUFNcEQsSUFDckY0RixFQUFnQixrQkFBa0JyRSxPQUFPMkUsRUFBYWUsSUFDMURuRSxFQUFjTSxFQUFNYyxLQUFPLENBQ3ZCNEIsSUFBSyxXQUFXbEYsT0FBTytCLEVBQVdTLEVBQU1HLFVBQVcsTUFDbkR3QyxRQUFTSCxFQUVqQixDQUNBSyxFQUFVWSxFQUFlQyxFQUFtQkUsR0FDNUNqRCxFQUFVZSxHQUFRckQsS0FBT3VGLEVBQ3pCakQsRUFBVWUsR0FBUVYsTUFBUTBDLEVBQW1CRSxFQUNqRCxLQUNLLENBRUQsSUFBSyxJQUFJakgsS0FEVGdFLEVBQVVlLEdBQVFWLE1BQVFzQyxFQUNaaEMsR0FDTnRCLEVBQVFzQixFQUFRM0UsSUFDVjBCLE1BQVFzQyxFQUFVZSxHQUFRckQsT0FDNUJtRSxFQUFnQixtQkFBbUJyRSxPQUFPYyxLQUFLd0QsTUFBTTlCLEVBQVVlLEdBQVFWLE9BQVFoRCxFQUFNMEQsR0FBUTlFLEdBQ2pHOEMsRUFBY00sRUFBTWMsS0FBTyxDQUN2QjRCLElBQUssV0FBV2xGLE9BQU8rQixFQUFXUyxFQUFNRyxVQUFXLE1BQ25Ed0MsUUFBU0gsSUFJckIsSUFBSyxJQUFJd0IsS0FBT2xCLEVBRVI5QyxFQUFRSCxFQUREbUUsRUFBSXhDLE1BQU0sS0FDRyxJQUNwQmdCLEVBQWdCLG1CQUFtQnJFLE9BQU9tRixHQUM5QzVELEVBQWNNLEVBQU1jLEtBQU8sQ0FDdkI0QixJQUFLLFdBQVdsRixPQUFPK0IsRUFBV1MsRUFBTUcsVUFBVyxNQUNuRHdDLFFBQVNILEVBR3JCLENBQ0FZLEVBQXFCUCxDQUN6QixDQUNBNUUsRUFBT0MsS0FBSyw4QkFBOEJDLE9BQU93QyxFQUFVZSxHQUFRckQsS0FBTUwsRUFBTTBELEdBQVE5RSxFQUFHK0QsRUFBVWUsR0FBUVYsT0FDaEgsQ0FDQSxPQUFPL0MsQ0FDWCxFQW1CQSxTQUFTZ0csSUFDTHpJLEVBQVFvRSxJQUFpQm5CLEtBQUssTUFDbEMsQ0FHQSxTQUFTeUYsSUFDTCxJQUFJN0csRUFDQXdDLEVBQVNoQyxjQUFjQyxTQUFTQyxPQUFPOEIsT0FDdkM3QixFQUFRSCxjQUFjQyxTQUFTQyxPQUFPQyxNQUN0QzhCLEVBQVUsR0FDZCxJQUFLLElBQUlDLEtBQUtGLEVBQVEsQ0FDbEIsSUFBSUcsRUFBUUgsRUFBT0UsR0FDbkIsR0FBSUMsRUFBTUMsR0FBS0QsRUFBTUMsRUFBRW5ELE9BQVMsRUFBRyxDQUMvQixJQUFJcUgsRUFBU25FLEVBQU1DLEVBQUUsR0FBRyxHQUNwQlQsRUFBUVEsRUFBTUcsU0FFbEIsS0FEd0MsUUFBeEI5QyxFQUFLVyxFQUFNbUcsVUFBNEIsSUFBUDlHLE9BQWdCLEVBQVNBLEVBQUdULEdBRXhFLFNBQ0prRCxFQUFRNUIsS0FBSyxDQUNUc0IsRUFDQSxvQ0FBb0NyQixPQUFPNkIsRUFBTTNCLEtBQU0yQixFQUFNcEQsRUFBR29ELEVBQU1LLEdBQUlyQyxFQUFNbUcsR0FBUXZILEVBQUcsV0FBV1ksT0FBTytCLEVBQVdDLEdBQVEsUUFFeEksQ0FDSixDQUlBaEUsR0FIQXNFLEVBQVVBLEVBQVFRLE1BQUssU0FBVUMsRUFBR0MsR0FDaEMsT0FBT0QsRUFBRSxHQUFLQyxFQUFFLEVBQ3BCLEtBQ2dCNEQsS0FBSSxTQUFVckMsR0FBSyxPQUFPQSxFQUFFLEVBQUksSUFBR3RELEtBQUssTUFDNUQsQ0F0Q0E3QyxFQUFhLEtBUmIsV0FDSStELEdBQWtCLEVBQ2xCOUIsY0FBY3dHLEdBQUdDLFFBQVEsY0FDN0IsR0FLcUMsc2FBS3JDMUksRUFBYSxLQVRiLFdBQ0krRCxHQUFrQixFQUNsQjlCLGNBQWN3RyxHQUFHQyxRQUFRLGNBQzdCLEdBTXFDLDJZQVFyQzFJLEVBQWEsSUFBS3FJLEVBQWlCLCtNQTBCbkNySSxFQUFhLElBQUtzSSxFQUFrQiw4TUFNcEN0SSxFQUFhLEtBSmIsV0FFSUosRUFEVXFDLGNBQWMwRyxLQUFLSCxJQUNqQkksT0FBTyxHQUFHQyxVQUFVLGFBQWMsS0FDbEQsR0FDOEIsZ0hBQzlCLElBQUlDLEVBQWMsV0FDZCxJQUFJM0gsRUFBSWMsY0FBY0MsU0FBU0MsT0FBT0gsUUFDbENLLEVBQVMsR0FDYixJQUFLLElBQUl0QixLQUFLSSxFQUFHLENBQ2IsSUFBSTRILEVBQU81SCxFQUFFSixHQUFHZ0ksS0FDWkEsRUFDQTFHLEVBQU9DLEtBQUssMENBQTBDQyxPQUFPeEIsRUFBR2dJLEVBQUsvSCxFQUFHRCxHQUFLZ0ksRUFBS3RHLEtBQU8sS0FBTyxRQUdoR0osRUFBT0MsS0FBSyxzQ0FBc0NDLE9BQU94QixHQUVqRSxDQUNBbkIsRUFBUXlDLEVBQU9RLEtBQUssTUFDeEIsRUFDQTdDLEVBQWEsSUFBSzhJLEVBQWEsbVJBMEIvQjlJLEVBQWEsS0F2QkssV0FDZCxJQUFJbUIsRUFBSWMsY0FBY0MsU0FBU0MsT0FBT0gsUUFDbENLLEVBQVMsR0FDVDJHLEVBQVMsQ0FDVCxRQUNBLGNBQ0EsZUFDQSxpQkFDQSxnQkFDQSxlQUNBLGlCQUNBLGlCQUVKM0csRUFBT0MsS0FBSzBHLEVBQU9uRyxLQUFLLE1BQ3hCLElBQUlvRyxFQUFVLFNBQVVsSSxHQUNwQixJQUFJbUksRUFBU0YsRUFBT1IsS0FBSSxTQUFVckUsR0FBSyxPQUFPaEQsRUFBRUosR0FBR29ELEVBQUksSUFDdkQ5QixFQUFPQyxLQUFLNEcsRUFBT3JHLEtBQUssS0FDNUIsRUFDQSxJQUFLLElBQUk5QixLQUFLSSxFQUNWOEgsRUFBUWxJLEdBRVpuQixFQUFReUMsRUFBT1EsS0FBSyxNQUN4QixHQUMrQixnSUFFL0IsSUFBSXNHLEVBQW9CLFNBQVVDLEVBQVN0SSxFQUFHcUYsRUFBR0MsRUFBR2lELEdBQ2hELElBQUlDLEVBQU1DLEtBQUtoSCxPQUFPekIsRUFBRyxDQUFDLEdBQzFCc0ksRUFBUUksVUFBWSxVQUNwQixJQUFLLElBQUlDLEVBQVEsRUFBR0EsRUFBUSxJQUFLQSxFQUM3QkwsRUFBUU0sU0FBU0osRUFBS25ELEVBQUlzRCxFQUFPckQsRUFBSXFELEdBQ3JDTCxFQUFRTSxTQUFTSixFQUFLbkQsRUFBSXNELEVBQU9yRCxFQUFJcUQsR0FDckNMLEVBQVFNLFNBQVNKLEVBQUtuRCxFQUFJc0QsRUFBT3JELEVBQUlxRCxHQUNyQ0wsRUFBUU0sU0FBU0osRUFBS25ELEVBQUlzRCxFQUFPckQsRUFBSXFELEdBRXpDTCxFQUFRSSxVQUFZSCxHQUFXLFVBQy9CRCxFQUFRTSxTQUFTSixFQUFLbkQsRUFBR0MsRUFDN0IsRUFDSXVELEVBQWdCLFNBQVUzRCxFQUFPNUIsR0FDakMsSUFBSWhDLEVBQVFILGNBQWNDLFNBQVNDLE9BQU9DLE1BQ3RDRixFQUFXRCxjQUFjQyxTQUN6QjBILEVBQVkxSCxFQUFTQyxPQUFPSCxRQUFRZ0UsR0FBT3FCLEtBQUt3QyxTQUFTQyxNQUM3RCxJQUFLLElBQUloSixLQUFLc0IsRUFBTyxDQUNqQixJQUFJSSxFQUFPSixFQUFNdEIsR0FDakIsR0FBSTBCLEVBQUtDLE1BQVF1RCxHQUNFOUQsRUFBU2dFLFNBQVMxRCxFQUFLMkQsRUFBRzNELEVBQUs0RCxFQUFHaEMsRUFBTStCLEVBQUcvQixFQUFNZ0MsSUFDaER3RCxFQUNaLE9BQU8sQ0FHbkIsQ0FDQSxPQUFPLENBQ1gsRUFDSUcsR0FBYyxFQUNkbkMsRUFBaUIsU0FBVW9DLEdBRTNCLFlBRG1CeEUsSUFBWHdFLEVBQXVCQSxFQUFTakcsRUFBaUIsRUFBSSxXQUFhLFVBQzlEQSxFQUFpQixFQUFJLElBQU0sSUFBTUEsQ0FDakQsRUFDSWtHLEdBQWMsRUFtQmRDLEVBbEJKLFdBRUksSUFEQSxJQUFJQyxFQUFRLENBQUMsRUFDSnBKLEVBQUksRUFBR0EsRUFBSXFKLFNBQVNDLFlBQVluSixTQUFVSCxFQUMvQyxJQUVJLElBREEsSUFBSXVKLEVBQVdGLFNBQVNDLFlBQVl0SixHQUFHdUosU0FDOUJDLEVBQUksRUFBR0EsRUFBSUQsRUFBU3BKLFNBQVVxSixFQUNuQyxHQUFJRCxFQUFTQyxHQUFHQyxPQUFTQyxRQUFRQyxXQUFZLENBQ3pDLElBQUlDLEVBQVFMLEVBQVNDLEdBQ3JCSixFQUFNUSxFQUFNQyxjQUFnQkQsQ0FDaEMsQ0FLUixDQUZBLE1BQU9FLEdBQ0gvSCxRQUFRQyxJQUFJOEgsRUFDaEIsQ0FFSixPQUFPVixDQUNYLENBQ1VXLEdBQ1YsU0FBU0MsSUFDTCxPQS9nQjhDQyxFQStnQjdCeEosS0EvZ0JzQ3lKLE9BK2dCaEMsRUEvZ0IrQ0MsRUErZ0IvQixXQUNuQyxJQUFJMUMsRUFBSzJDLEVBQWtCQyxFQUFlcEosRUFBU1AsRUFBSTRKLEVBQUlDLEVBQUlwSSxFQUFnQnFJLEVBQU9DLEVBQWNDLEVBQW9DQyxFQUFhQyxFQUFJQyxFQUFRMUcsRUFBSzJHLEVBQUtDLEVBQUszRixFQUFHQyxFQUNuTCxPQXhnQm9DLFNBQVU0RSxFQUFTZSxHQUMvRCxJQUFzRzVILEVBQUdpQyxFQUFHdkYsRUFBR21MLEVBQTNHQyxFQUFJLENBQUVDLE1BQU8sRUFBR0MsS0FBTSxXQUFhLEdBQVcsRUFBUHRMLEVBQUUsR0FBUSxNQUFNQSxFQUFFLEdBQUksT0FBT0EsRUFBRSxFQUFJLEVBQUd1TCxLQUFNLEdBQUlDLElBQUssSUFDaEcsT0FBT0wsRUFBSSxDQUFFTSxLQUFNQyxFQUFLLEdBQUksTUFBU0EsRUFBSyxHQUFJLE9BQVVBLEVBQUssSUFBd0IsbUJBQVhDLFNBQTBCUixFQUFFUSxPQUFPQyxVQUFZLFdBQWEsT0FBT2pMLElBQU0sR0FBSXdLLEVBQ3ZKLFNBQVNPLEVBQUt2TCxHQUFLLE9BQU8sU0FBVTBMLEdBQUssT0FDekMsU0FBY0MsR0FDVixHQUFJeEksRUFBRyxNQUFNLElBQUl5SSxVQUFVLG1DQUMzQixLQUFPWixJQUFNQSxFQUFJLEVBQUdXLEVBQUcsS0FBT1YsRUFBSSxJQUFLQSxPQUNuQyxHQUFJOUgsRUFBSSxFQUFHaUMsSUFBTXZGLEVBQVksRUFBUjhMLEVBQUcsR0FBU3ZHLEVBQVUsT0FBSXVHLEVBQUcsR0FBS3ZHLEVBQVMsU0FBT3ZGLEVBQUl1RixFQUFVLFNBQU12RixFQUFFUyxLQUFLOEUsR0FBSSxHQUFLQSxFQUFFa0csU0FBV3pMLEVBQUlBLEVBQUVTLEtBQUs4RSxFQUFHdUcsRUFBRyxLQUFLRSxLQUFNLE9BQU9oTSxFQUUzSixPQURJdUYsRUFBSSxFQUFHdkYsSUFBRzhMLEVBQUssQ0FBUyxFQUFSQSxFQUFHLEdBQVE5TCxFQUFFaUosUUFDekI2QyxFQUFHLElBQ1AsS0FBSyxFQUFHLEtBQUssRUFBRzlMLEVBQUk4TCxFQUFJLE1BQ3hCLEtBQUssRUFBYyxPQUFYVixFQUFFQyxRQUFnQixDQUFFcEMsTUFBTzZDLEVBQUcsR0FBSUUsTUFBTSxHQUNoRCxLQUFLLEVBQUdaLEVBQUVDLFFBQVM5RixFQUFJdUcsRUFBRyxHQUFJQSxFQUFLLENBQUMsR0FBSSxTQUN4QyxLQUFLLEVBQUdBLEVBQUtWLEVBQUVJLElBQUlTLE1BQU9iLEVBQUVHLEtBQUtVLE1BQU8sU0FDeEMsUUFDSSxNQUFrQmpNLEdBQVpBLEVBQUlvTCxFQUFFRyxNQUFZbEwsT0FBUyxHQUFLTCxFQUFFQSxFQUFFSyxPQUFTLEtBQWtCLElBQVZ5TCxFQUFHLElBQXNCLElBQVZBLEVBQUcsSUFBVyxDQUFFVixFQUFJLEVBQUcsUUFBVSxDQUMzRyxHQUFjLElBQVZVLEVBQUcsTUFBYzlMLEdBQU04TCxFQUFHLEdBQUs5TCxFQUFFLElBQU04TCxFQUFHLEdBQUs5TCxFQUFFLElBQU0sQ0FBRW9MLEVBQUVDLE1BQVFTLEVBQUcsR0FBSSxLQUFPLENBQ3JGLEdBQWMsSUFBVkEsRUFBRyxJQUFZVixFQUFFQyxNQUFRckwsRUFBRSxHQUFJLENBQUVvTCxFQUFFQyxNQUFRckwsRUFBRSxHQUFJQSxFQUFJOEwsRUFBSSxLQUFPLENBQ3BFLEdBQUk5TCxHQUFLb0wsRUFBRUMsTUFBUXJMLEVBQUUsR0FBSSxDQUFFb0wsRUFBRUMsTUFBUXJMLEVBQUUsR0FBSW9MLEVBQUVJLElBQUkvSixLQUFLcUssR0FBSyxLQUFPLENBQzlEOUwsRUFBRSxJQUFJb0wsRUFBRUksSUFBSVMsTUFDaEJiLEVBQUVHLEtBQUtVLE1BQU8sU0FFdEJILEVBQUtaLEVBQUt6SyxLQUFLMEosRUFBU2lCLEdBQzFCLE1BQU90SixHQUFLZ0ssRUFBSyxDQUFDLEVBQUdoSyxHQUFJeUQsRUFBSSxDQUFHLENBQUUsUUFBVWpDLEVBQUl0RCxFQUFJLENBQUcsQ0FDekQsR0FBWSxFQUFSOEwsRUFBRyxHQUFRLE1BQU1BLEVBQUcsR0FBSSxNQUFPLENBQUU3QyxNQUFPNkMsRUFBRyxHQUFLQSxFQUFHLFFBQUssRUFBUUUsTUFBTSxFQUM5RSxDQXRCZ0RFLENBQUssQ0FBQy9MLEVBQUcwTCxHQUFLLENBQUcsQ0F1QnJFLENBOGVtQk0sQ0FBWXhMLE1BQU0sU0FBVXlMLEdBQy9CLE9BQVFBLEVBQUdmLE9BQ1AsS0FBSyxFQVNELElBQUtaLEtBUkw5QyxFQUFNdkcsY0FBYzBHLEtBQUtILEtBQ3pCMkMsRUFBbUJmLFNBQVM4QyxjQUFjLFdBQ3pCQyxNQUFRaEMsRUFBaUJpQyxPQUFTLEtBQ25EaEMsRUFBZ0JELEVBQWlCa0MsV0FBVyxPQUM5QkMsVUFBVTlFLEVBQUkrRSxRQUFTLEVBQUcsR0FDeEN2TCxFQUFVQyxjQUFjQyxTQUFTQyxPQUFPSCxRQUV4Q3FKLEVBQUssR0FETDVKLEVBQUtPLEVBR0RxSixFQUFHL0ksS0FBS2dKLEdBQ1pwSSxFQUFLLEVBQ0wrSixFQUFHZixNQUFRLEVBQ2YsS0FBSyxFQUNELE9BQU1oSixFQUFLbUksRUFBR25LLFFBQ2RvSyxFQUFLRCxFQUFHbkksTUFDSXpCLEdBRVptSyxFQUFTNUosRUFEVDJKLEVBQUtMLEdBRUxDLEVBQVFLLEVBQU9MLE1BRWZyQixFQUFJLFNBQVN0SSxPQUFPZ0ssRUFBTzFHLE1BQU15RixNQUFNNkMsZ0JBQWtCakMsR0FDekRDLEVBQWVwQixTQUFTOEMsY0FBYyxXQUN6QkMsTUFBUTNCLEVBQWE0QixPQUFTLEtBQzNDM0IsRUFBZ0JELEVBQWE2QixXQUFXLE9BQzFCQyxVQUFVOUUsRUFBSStFLFFBQVMsRUFBRyxHQUN4QzlCLEVBQWNnQyx5QkFBMkIsWUFDekNoQyxFQUFjakMsVUFBWStCLEVBQzFCckcsRUFBTTBHLEVBQU8xRyxJQUNiMkcsRUFBTXhJLEtBQUt3RCxNQUFNM0IsRUFBTSxHQUN2QjRHLEVBQU16SSxLQUFLd0QsTUFBTTNCLEVBQU0sR0FBSyxFQUM1QmlCLEVBQVUsR0FBTjBGLEVBQ0p6RixFQUFVLEdBQU4wRixFQUNKTCxFQUFjaUMsU0FBU3ZILEVBQUdDLEVBQUcsR0FBSSxLQUNqQ3NGLEVBQWMsSUFBSWlDLE9BQ05DLElBQU1wQyxFQUFhM0MsWUFDeEIsQ0FBQyxFQUFhNkMsRUFBWW1DLFdBcEJULENBQUMsRUFBYSxHQUZSLENBQUMsRUFBYSxHQXVCaEQsS0FBSyxFQUNEWixFQUFHZCxPQUNIZixFQUFjMEMsVUFBVTNILEVBQUdDLEVBQUcsR0FBSSxJQUNsQ2dGLEVBQWNrQyxVQUFVNUIsRUFBYSxFQUFHLEdBQ3hDdUIsRUFBR2YsTUFBUSxFQUNmLEtBQUssRUFFRCxPQURBaEosSUFDTyxDQUFDLEVBQWEsR0FDekIsS0FBSyxFQUVELElBQUt5SSxLQURMbkQsRUFBSStFLFFBQVFLLElBQU16QyxFQUFpQnRDLFlBQ3hCN0csRUFDUDRKLEVBQVM1SixFQUFRMkosR0FDakJ6RyxFQUFNMEcsRUFBTzFHLElBQ2IyRyxFQUFNeEksS0FBS3dELE1BQU0zQixFQUFNLEdBQ3ZCNEcsRUFBTXpJLEtBQUt3RCxNQUFNM0IsRUFBTSxHQUFLLEVBQzVCaUIsRUFBVSxHQUFOMEYsRUFDSnpGLEVBQVUsR0FBTjBGLEVBRUo1QixFQUFJLFdBQVd0SSxPQUFPZ0ssRUFBTzFHLE1BQU15RixNQUFNb0QsV0FBYSxRQUFTbk0sT0FBTzRHLEVBQUkrRSxRQUFRSyxJQUFLLFFBQVNoTSxPQUFPdUUsRUFBSSxFQUFHLFFBQVF2RSxPQUFPd0UsRUFBSSxFQUFHLE1BSXhJLE9BRkF0RCxRQUFRQyxJQUFJLHFDQUNaZCxjQUFjd0csR0FBR0MsUUFBUSxlQUNsQixDQUFDLEdBRXBCLEdBQ0osRUEva0JHLEtBRmdFc0YsT0ErZ0JwQyxLQTdnQmpCQSxFQUFJQyxXQUFVLFNBQVVDLEVBQVNDLEdBQy9DLFNBQVNDLEVBQVV0RSxHQUFTLElBQU1pRCxFQUFLN0IsRUFBVW9CLEtBQUt4QyxHQUFrQyxDQUF2QixNQUFPbkgsR0FBS3dMLEVBQU94TCxFQUFJLENBQUUsQ0FDMUYsU0FBUzBMLEVBQVN2RSxHQUFTLElBQU1pRCxFQUFLN0IsRUFBaUIsTUFBRXBCLEdBQWtDLENBQXZCLE1BQU9uSCxHQUFLd0wsRUFBT3hMLEVBQUksQ0FBRSxDQUM3RixTQUFTb0ssRUFBS3VCLEdBSmxCLElBQWV4RSxFQUlhd0UsRUFBT3pCLEtBQU9xQixFQUFRSSxFQUFPeEUsUUFKMUNBLEVBSXlEd0UsRUFBT3hFLE1BSmhEQSxhQUFpQmtFLEVBQUlsRSxFQUFRLElBQUlrRSxHQUFFLFNBQVVFLEdBQVdBLEVBQVFwRSxFQUFRLEtBSWpCeUUsS0FBS0gsRUFBV0MsRUFBVyxDQUM3R3RCLEdBQU03QixFQUFZQSxFQUFVM0osTUFBTXlKLEVBQVNDLEdBQWMsS0FBS3FCLE9BQ2xFLElBUHdDLElBQVV0QixFQUFTQyxFQUFZK0MsRUFBRzlDLENBa2xCMUUsQ0E2WEFsTCxFQUFhLEtBSlMsV0FDbEJpSyxHQUFlQSxFQUNmaEksY0FBY3dHLEdBQUdDLFFBQVEsY0FDN0IsR0FDbUMsb0dBY25DMUksRUFBYSxLQWJXLFdBQ3BCLElBQUk0TCxFQUFTM0osY0FBY0MsU0FBUzBKLE9BQ3BDLFFBQWdEcEcsSUFBNUN2RCxjQUFjQyxTQUFTMEosT0FBTzRDLFVBQzlCNUMsRUFBTzRDLFVBQVk1QyxFQUFPTCxNQUMxQkssRUFBT0wsTUFBUSxjQUVkLENBQ0QsSUFBSWtELEVBQU03QyxFQUFPNEMsVUFDakI1QyxFQUFPNEMsVUFBWTVDLEVBQU9MLE1BQzFCSyxFQUFPTCxNQUFRa0QsQ0FDbkIsQ0FDQTFELEdBQ0osR0FDcUMseURBQ3JDLElBQUkyRCxFQUFPLFdBQ1AsSUFBSWpOLEdBQ21DLFFBQWpDQSxFQUFLUSxjQUFjQyxnQkFBNkIsSUFBUFQsT0FBZ0IsRUFBU0EsRUFBR1UsU0FBV0YsY0FBYzBHLEtBQUtILEtBcjZCNUYsV0FDYixJQUFJdEcsRUFBV0QsY0FBY0MsU0FDekIrQixFQUFTaEMsY0FBY0MsU0FBU0MsT0FBTzhCLE9BQzNDLElBQUssSUFBSUUsS0FBS0YsRUFBUSxDQUNsQixJQUFJRyxFQUFRSCxFQUFPRSxHQUNmd0ssRUFBWSxxREFBdUQvTSxPQUFPd0MsRUFBTWMsSUFBSyxTQUFTdEQsT0FBT3dDLEVBQU1wRCxFQUFHLFFBQ2xIa0IsRUFBUzBNLDBCQUEwQnhLLEVBQU1wRCxHQUFLMk4sQ0FDbEQsQ0FDSixDQTg1QlFFLEdBQ0EvTCxRQUFRQyxJQUFJLDJCQUNQZ0gsRUFLRGpILFFBQVFDLElBQUksc0NBclpSLFdBQ1osSUFBSXlGLEVBQU12RyxjQUFjMEcsS0FBS0gsSUFDekJzRyxFQUFvQnRHLEVBQUl1RyxrQkFDNUIsU0FBU0MsRUFBUzdJLEVBQUdDLEVBQUc2SSxFQUFPQyxFQUFHM0QsR0FDOUIsSUFBSW5DLEVBQVVaLEVBQUlZLFFBQ2xCQSxFQUFRK0YsT0FDUi9GLEVBQVFJLFVBQVkrQixFQUNwQm5DLEVBQVFnRyxVQUFVakosRUFBR0MsR0FDckJnRCxFQUFRNkYsTUFBTUEsRUFBT0EsR0FDckI3RixFQUFRaUcsT0FBTyxFQUFHLEdBQ2xCakcsRUFBUWtHLElBQUksRUFBRyxFQUFHSixFQUFHLEVBQWEsRUFBVjdMLEtBQUtrTSxJQUM3Qm5HLEVBQVFvRyxTQUNaLENBQ0EsU0FBU0MsRUFBa0JqTixFQUFNcUgsR0FDN0IsSUFBSTFELEVBQUlxQyxFQUFJa0gsZUFBZWxOLEVBQUsyRCxHQUM1QkMsRUFBSW9DLEVBQUltSCxlQUFlbk4sRUFBSzRELEdBQzVCd0osRUFBSzdMLEVBQ0w4TCxFQUFVck4sRUFBS29KLE9BQU92RSxLQUFLd0MsU0FBU0MsT0FBU3RILEVBQUtvSixPQUFPdkUsS0FBS3dDLFNBQVN0QyxNQUFRLEdBRS9FMEgsR0FEYXpNLEVBQUtvSixPQUFPdkUsS0FBS3dDLFNBQVN0QyxNQUFRLEVBQUlxSSxHQUFNQyxFQUNwQ3JILEVBQUl5RyxNQUFRekcsRUFBSXNILFdBQWMsSUFDbkRaLEVBQXFDLEdBQWhDMUcsRUFBSXVILG9CQUFvQjVDLE1BQWUsRUFDNUM2QyxFQUFLak0sRUFDTGtNLEVBQVd6TixFQUFLb0osT0FBT3ZFLEtBQUs2SSxXQUFXcEcsT0FDdEN0SCxFQUFLb0osT0FBT3ZFLEtBQUs2SSxXQUFXM0ksTUFBUSxHQUVyQzRJLEdBRGMzTixFQUFLb0osT0FBT3ZFLEtBQUs2SSxXQUFXM0ksTUFBUSxFQUFJeUksR0FBTUMsRUFDckN6SCxFQUFJeUcsTUFBUXpHLEVBQUlzSCxXQUFjLElBQ3JETSxFQUFtQyxHQUE3QjVILEVBQUk2SCxpQkFBaUJsRCxNQUFlLEVBQzFDNUIsRUFBUSxHQUFHM0osT0FBT1ksRUFBS29KLE9BQU9MLE1BQU8sTUFDckMxQixFQUNBbUYsRUFBUzdJLEVBQUdDLEVBQUc2SSxFQUFPQyxFQUFHM0QsR0FHekJ5RCxFQUFTN0ksRUFBR0MsRUFBRytKLEVBQVFDLEVBQUk3RSxFQUVuQyxDQUNBL0MsRUFBSXVHLGtCQUFvQixXQUNwQixJQUFJdE4sRUFBSTRKLEVBQ1J5RCxJQUNBLElBQUk1TSxFQUFXRCxjQUFjQyxTQUM3QixJQUFzQyxRQUFoQ1QsRUFBS1MsRUFBU29PLG9CQUFpQyxJQUFQN08sT0FBZ0IsRUFBU0EsRUFBR21LLFNBQVczQixFQUFhLENBQzlGLElBQUliLEVBQVVaLEVBQUlZLFFBQ2RqSSxFQUFJZSxFQUFTb08sYUFBYTFFLE9BQU8xRyxJQUU3QjJFLEdBQVcsRUFDZixFQUFHLENBR0MsSUFBSyxJQUFJNUosS0FGVDRKLEdBQVlBLEVBQ1pULEVBQVFtSCxZQUNRck8sRUFBU0MsT0FBT0MsTUFBTyxDQUNuQyxJQUFJSSxFQUFPTixFQUFTQyxPQUFPQyxNQUFNbkMsSUFDTCxRQUF0Qm9MLEVBQUs3SSxFQUFLb0osY0FBMkIsSUFBUFAsT0FBZ0IsRUFBU0EsRUFBR25HLE1BQVEvRCxHQUNwRXNPLEVBQWtCak4sRUFBTXFILEVBRWhDLENBQ0EsSUFBSTBCLEVBQVEsR0FBRzNKLE9BQU9NLEVBQVNDLE9BQU9ILFFBQVFiLEdBQUdvSyxNQUFPLE1BQ3hEbkMsRUFBUUksVUFBWStCLEVBQ3BCbkMsRUFBUW9ILE9BQ1JwSCxFQUFRcUgsV0FDWixPQUFTNUcsRUFFakIsQ0FDSixFQUNBLElBQUk2RyxFQUFnQnpPLGNBQWMwRyxLQUFLSCxJQUFJbUksU0FDM0MxTyxjQUFjMEcsS0FBS0gsSUFBSW1JLFNBQVcsV0FDOUIsSUFBSXpPLEVBQVdELGNBQWNDLFNBQ3pCc0csRUFBTXZHLGNBQWMwRyxLQUFLSCxJQUM3QmtJLElBQ0FsSSxFQUFJWSxRQUFRd0gsS0FBTyxHQUFHaFAsT0FBTyxHQUFLNEcsRUFBSXNILFdBQVksa0NBQ2xEdEgsRUFBSVksUUFBUUksVUFBWSxVQUN4QmhCLEVBQUlZLFFBQVF5SCxVQUFZLFFBQ3hCckksRUFBSVksUUFBUTBILGFBQWUsU0FDM0IsSUFBSXBFLEVBQUk3SyxFQVFSLEdBUHVCLElBQW5Ca0MsSUFDQTJJLEVBQUksR0FBRzlLLE9BQU9nRyxJQUFrQixLQUFLaEcsT0FBTzhLLElBRWhEdkQsRUFBa0JYLEVBQUlZLFFBQVNzRCxFQUFHbEUsRUFBSXVJLGNBQWdCLEdBQUl2SSxFQUFJd0ksZUFBaUIsR0FBS3hJLEVBQUlzSCxpQkFDbkR0SyxJQUFqQ3ZELGNBQWNnUCxpQkFDZGhQLGNBQWNnUCxlQUFpQi9PLEVBQVMwSixPQUFPMUcsS0FFL0NqRCxjQUFjZ1AsaUJBQW1CL08sRUFBUzBKLE9BQU8xRyxJQUFLLENBQ3RELElBQUlsRSxFQUFJa0IsRUFBU0MsT0FBT0gsUUFBUUUsRUFBUzBKLE9BQU8xRyxLQUFLZ00sTUFDckQvSCxFQUFrQlgsRUFBSVksUUFBU3BJLEVBQUd3SCxFQUFJdUksY0FBZ0IsSUFBS3ZJLEVBQUl3SSxlQUFpQixHQUFTeEksRUFBSXNILFdBQ2pHLENBQ0EsR0FBSTVOLEVBQVNpUCxlQUFpQmpQLEVBQVNpUCxjQUFjQyxLQUFLbFEsT0FBUyxFQUFHLENBRWxFc0gsRUFBSVksUUFBUXdILEtBQU8sR0FBR2hQLE9BQU8sR0FBSzRHLEVBQUlzSCxXQUFZLGtDQUNsRHRILEVBQUlZLFFBQVFJLFVBQVksVUFDeEJoQixFQUFJWSxRQUFReUgsVUFBWSxPQUN4QnJJLEVBQUlZLFFBQVEwSCxhQUFlLFNBQzNCLElBQUlPLEVBQUtuUCxFQUFTaVAsY0FBYy9LLEVBQUlsRSxFQUFTaVAsY0FBYzdLLEdBQ3ZEZ0wsRUFBS3BQLEVBQVNpUCxjQUFjaEwsRUFBSWpFLEVBQVNpUCxjQUFjOUssR0FDM0RnTCxFQUFLblAsRUFBU2lQLGNBQWNDLEtBQUssR0FBR2hMLEVBQUlsRSxFQUFTaVAsY0FBYy9LLEVBQy9Ea0wsRUFBS3BQLEVBQVNpUCxjQUFjQyxLQUFLLEdBQUdqTCxFQUFJakUsRUFBU2lQLGNBQWNoTCxFQUMvRCxJQUFJb0wsRUFBYSxHQUFLL0ksRUFBSXNILFdBQ3RCMEIsRUFBUyxLQUFZaEosRUFBSXlHLE1BQVF6RyxFQUFJc0gsV0FDckMyQixFQUFRcE8sS0FBS3FPLEtBQUtMLEVBQUtDLElBQ3ZCSyxFQUFVSCxFQUFTbk8sS0FBS3VPLElBQUlILElBRWxCLEdBQUtILEVBQUssSUFDcEJLLElBQVksSUFGWkUsRUFBVUwsRUFBU25PLEtBQUt5TyxJQUFJTCxJQUlsQixHQUFLSixFQUFLLElBQ3BCUSxJQUFZLEdBRVpGLEVBQVUsR0FBS0wsRUFBSyxJQUNwQkssSUFBWSxHQUVaRSxFQUFVLEdBQUtSLEVBQUssSUFDcEJRLElBQVksR0FFaEI3TixJQUNBLElBQUlsRCxFQUFJZ0QsRUFBYzVCLEVBQVNpUCxjQUFjak0sS0FBSzRCLElBQzlDekMsRUFBSVAsRUFBYzVCLEVBQVNpUCxjQUFjak0sS0FBSzZCLFFBQzlDWixFQUFJcUMsRUFBSWtILGVBQWV4TixFQUFTaVAsY0FBY2hMLEdBQUt3TCxFQUNuRHZMLEVBQUlvQyxFQUFJbUgsZUFBZXpOLEVBQVNpUCxjQUFjL0ssR0FBS3lMLEVBQ25ERixFQUFVLElBQ1ZuSixFQUFJWSxRQUFReUgsVUFBWSxTQUU1QjFILEVBQWtCWCxFQUFJWSxRQUFTdEksRUFBR3FGLEVBQUdDLEdBQ3JDK0MsRUFBa0JYLEVBQUlZLFFBQVMvRSxFQUFHOEIsRUFBR0MsRUFBSW1MLEVBQzdDLENBY0EsSUFiS3RQLGNBQWM4UCxXQUFXQyxXQUMxQjlQLEVBQVMrUCxXQUFXLEdBQUcvUSxPQUFTLElBQzVCcVEsRUFBYSxHQUFLL0ksRUFBSXNILFdBQzFCdEgsRUFBSVksUUFBUXdILEtBQU8sR0FBR2hQLE9BQU8sR0FBSzRHLEVBQUlzSCxXQUFZLGtDQUNsRHRILEVBQUlZLFFBQVFJLFVBQVksVUFDeEJoQixFQUFJWSxRQUFReUgsVUFBWSxPQUN4QnJJLEVBQUlZLFFBQVEwSCxhQUFlLFNBQ3ZCaFEsRUFBSSxtQkFDdUIsT0FBM0JvQixFQUFTK1AsV0FBVyxLQUNwQm5SLEVBQUksdURBRVJxSSxFQUFrQlgsRUFBSVksUUFBU3RJLEVBQUcsSUFBTXlRLElBRXhDclAsRUFBU29PLGNBQ1RwTyxFQUFTb08sYUFBYTdOLE1BQVFQLEVBQVMwSixPQUFPMUcsTUFDZCxJQUFoQ2hELEVBQVNvTyxhQUFhN04sS0FBYSxDQUVuQytGLEVBQUlZLFFBQVF5SCxVQUFZLE9BQ3hCckksRUFBSVksUUFBUTBILGFBQWUsU0FDM0IsSUFBSW9CLEVBQVUsR0FBSzFKLEVBQUlzSCxXQUVuQjdMLEVBQVNoQyxjQUFjQyxTQUFTQyxPQUFPOEIsT0FDM0MsSUFBSyxJQUFJRSxLQUFLRixFQUFRLENBQ2xCLElBQUlHLEVBQVFILEVBQU9FLEdBQ25CLEdBQUlDLEVBQU0zQixPQUFTUCxFQUFTMEosT0FBTzFHLElBQUssQ0FDaENvTSxFQUFLcFAsRUFBU29PLGFBQWFuSyxFQUFJL0IsRUFBTStCLEVBQ3JDa0wsRUFBS25QLEVBQVNvTyxhQUFhbEssRUFBSWhDLEVBQU1nQyxFQUR6QyxJQUVJRixFQUFXN0MsS0FBSzhPLEtBQUtiLEVBQUtBLEVBQUtELEVBQUtBLEdBQ3BDTSxFQUFVTyxFQUNWTCxFQUFVLEVBR2QsR0FGSTFMLEVBQUlxQyxFQUFJa0gsZUFBZXRMLEVBQU0rQixHQUFLd0wsRUFDbEN2TCxFQUFJb0MsRUFBSW1ILGVBQWV2TCxFQUFNZ0MsR0FBS3lMLEVBQ2xDM0wsRUFDQWhFLEVBQVNDLE9BQU9ILFFBQVFFLEVBQVNvTyxhQUFhN04sTUFBTTRFLEtBQUt3QyxTQUNwREMsT0FDRDFGLEVBQU1nTixNQUFRaE4sRUFBTWdOLEtBQUtsUSxPQUFTLElBQ2xDb1EsRUFBS2xOLEVBQU1nTixLQUFLLEdBQUdqTCxFQUFJakUsRUFBU29PLGFBQWFuSyxFQUM3Q2tMLEVBQUtqTixFQUFNZ04sS0FBSyxHQUFHaEwsRUFBSWxFLEVBQVNvTyxhQUFhbEssR0FDN0NGLEVBQVc3QyxLQUFLOE8sS0FBS2IsRUFBS0EsRUFBS0QsRUFBS0EsSUFFaENuUCxFQUFTQyxPQUFPSCxRQUFRRSxFQUFTb08sYUFBYTdOLE1BQU00RSxLQUMvQ3dDLFNBQVNDLE9BQU8sQ0FDckIsSUFBSXNJLEVBQWFuUSxjQUFjQyxTQUFTQyxPQUFPa1EsWUFDM0NqTyxFQUFNa08sWUFDTkYsR0FBYyxHQUNsQmQsRUFBS2xOLEVBQU0rQixFQUFJL0IsRUFBTWdOLEtBQUssR0FBR2pMLEVBQzdCa0wsRUFBS2pOLEVBQU1nQyxFQUFJaEMsRUFBTWdOLEtBQUssR0FBR2hMLEVBQ3pCcUwsRUFBUXBPLEtBQUtxTyxLQUFLTCxFQUFLQyxHQUEzQixJQUNJaUIsRUFBUUgsRUFBYS9PLEtBQUt1TyxJQUFJSCxHQUM5QmUsRUFBUUosRUFBYS9PLEtBQUt5TyxJQUFJTCxHQUM5QmMsRUFBUSxHQUFLakIsRUFBSyxJQUNsQmlCLElBQVUsR0FFVkMsRUFBUSxHQUFLbkIsRUFBSyxJQUNsQm1CLElBQVUsR0FFVkQsRUFBUSxHQUFLakIsRUFBSyxJQUNsQmlCLElBQVUsR0FFVkMsRUFBUSxHQUFLbkIsRUFBSyxJQUNsQm1CLElBQVUsR0FFZCxJQUFJNU8sRUFBUSxFQUNaLEVBQUcsQ0FDQyxJQUFJNk8sRUFBTTdPLEVBQVEyTyxFQUFRRyxPQUFPdE8sRUFBTStCLEdBQ25Dd00sRUFBTS9PLEVBQVE0TyxFQUFRRSxPQUFPdE8sRUFBTWdDLEdBR3ZDa0wsRUFBS21CLEVBQU12USxFQUFTb08sYUFBYW5LLEVBQ2pDa0wsRUFBS3NCLEVBQU16USxFQUFTb08sYUFBYWxLLEVBQ2pDRixFQUFXN0MsS0FBSzhPLEtBQUtiLEVBQUtBLEVBQUtELEVBQUtBLEdBR3BDek4sR0FBUyxDQUNiLE9BQVNzQyxFQUNMaEUsRUFBU0MsT0FBT0gsUUFBUUUsRUFBU29PLGFBQWE3TixNQUFNNEUsS0FDL0N3QyxTQUFTQyxPQUNkbEcsR0FBU1EsRUFBTUcsU0FBVyxHQUM5QlgsR0FBUyxFQUNULElBQUlnUCxFQUFXLFVBQ1hqSixFQUFjekgsRUFBU29PLGFBQWE3TixLQUFNMkIsS0FDMUN3TyxFQUFXLFdBRWZ6SixFQUFrQlgsRUFBSVksUUFBUyxnQkFBZ0J4SCxPQUFPK0IsRUFBV0MsR0FBUSxNQUFPdUMsRUFBR0MsRUFBR3dNLEVBQzFGLENBR1osQ0FDSixDQUVKLENBQ21DLEdBQS9CMVEsRUFBUzJRLE1BQU16USxNQUFNbEIsU0FDWmdCLEVBQVMyUSxNQUFNelEsTUFBTSxHQUFHSyxLQUN4QlAsRUFBUzJRLE1BQU16USxNQUFNLEdBQUdLLEtBS3pDLEVBQ0E4RyxLQUFLaEgsT0FBUyxTQUFVekIsRUFBR2dTLEdBQ3ZCLElBQUtoUyxFQUNELE1BQU8sUUFFWCxJQUFJQyxFQUNBZ1MsRUFDQUMsRUFDQUMsRUFDQUMsRUFwdEJhclAsRUFBTXNQLEVBQ3ZCalIsRUFDQWtSLEVBQ0FDLEVBQ0FDLEVBdXRCQSxJQU5BdlMsRUFBSSxFQUNKZ1MsRUFBSyxFQUNMQyxFQUFLLEVBQ0xDLEVBQU0sR0FDTkMsRUFBVSxHQUVISCxHQUFNLEdBQUtoUyxFQUFJLE1BQ2xCQSxHQUFRLEVBQ1JnUyxFQUFLalMsRUFBRXlTLFFBQVEsTUFDZlAsRUFBS2xTLEVBQUV5UyxRQUFRLE9BQ0gsSUFBUlIsSUFJSixHQUZBRSxFQUFNblMsRUFBRTBTLE1BQU1ULEVBQUssRUFBR0MsR0FDdEJFLEVBQVUsS0FBS3RSLE9BQU9xUixFQUFLLFdBQ0R6TixJQUF0QnNOLEVBQWFHLEdBQ2JuUyxFQUFJQSxFQUFFZ0IsUUFBUW9SLEVBQVNKLEVBQWFHLFNBRW5DLEdBQUksZ0JBQWdCUSxLQUFLUixHQUFNLENBQ2hDLElBQUlyTixFQUFRcU4sRUFBSXJOLE1BQU0sS0FFbEI4TixFQURPN04sU0FBU0QsRUFBTSxJQUNBM0QsY0FBY0MsU0FBU0MsT0FBTzBCLEtBQ3BEOFAsR0ExdUJLOVAsRUEwdUJhNlAsRUExdUJQUCxHQTB1QnFCLEVBenVCNUNqUixTQUNBa1IsU0FDQUMsU0FDQUMsU0FIQXBSLEVBQVdELGNBQWNDLFNBQ3pCa1IsRUFBZ0IsRUFDaEJDLEVBQUtuUixFQUFTQyxPQUFPeVIsY0FDckJOLEVBQU1wUixFQUFTMlIsa0JBQ2QzUixFQUFTQyxPQUFPMlIsU0FDakJWLEdBQWdCLElBQUlXLE1BQU9DLFVBQVk5UixFQUFTK1IsSUFBSUQsWUFFcERiLEdBQWFqUixFQUFTQyxPQUFPK1IsY0FDN0JkLEVBQWdCLEVBQ2hCQyxFQUFLLEVBQ0xDLEVBQU0sR0FFZ0IsSUFBUHpQLEVBQWMsR0FBSzNCLEVBQVNDLE9BQU9nUyxVQUM3QyxJQUFMZCxFQUFZLEdBQUtuUixFQUFTQyxPQUFPZ1MsVUFDakNmLEVBQ0FFLEdBMnRCUXhTLEVBQUlBLEVBQUVnQixRQUFRb1IsRUFBUzNKLEtBQUs2SyxXQUFXVCxHQUFRLEdBQ25ELE1BQ0ssR0NoMkJWLHVFQUF1RUYsS0RnMkIxQ1IsR0FDcEJuUyxFQUFJQSxFQUFFZ0IsUUFBUW9SLEVBQVMsMkJBQTRCdFIsT0FBT3FSLEVBQUssY0FFOUQsR0FBSSxjQUFjUSxLQUFLUixHQUFNLENBQzlCLElBQUlvQixFQUFVLHNEQUF3RHpTLE9BQU9xUixFQUFLLGtCQUFrQnJSLE9BQU9xUixFQUFLLFFBQ2hIb0IsR0FBVyx5REFBMkR6UyxPQUFPcVIsRUFBSyxnQkFBZ0JyUixPQUFPcVIsRUFBSyxRQUM5R25TLEVBQUlBLEVBQUVnQixRQUFRb1IsRUFBU21CLEVBQzNCLE1BRUl2VCxFQURLbVMsRUFBSXFCLFdBQVcsU0FDaEJ4VCxFQUFFZ0IsUUFBUW9SLEVBQVMscUVBQTRFdFIsT0FBT3FSLEVBQUssY0FHM0duUyxFQUFFZ0IsUUFBUW9SLEVBQVMsSUFBSXRSLE9BQU9xUixFQUFLLE1BRy9DLE9BQU9uUyxDQUNYLEVBQ0EsSUFBSTZILEVBQU8xRyxjQUFjMEcsS0FDekIxRyxjQUFjc1MsVUFBaUIsTUFBSSxXQUNuQ3RTLGNBQWNzUyxVQUEyQixnQkFBSSxlQUM3Q3RTLGNBQWNzUyxVQUFxQixVQUFJLFFBQ3ZDLElBQUlDLEVBQTRCN0wsRUFBSzhMLHFCQU1yQ3hTLGNBQWN3RyxHQUFHaU0sR0FBRyxnQkFMRSxTQUFVQyxFQUFJQyxHQUNoQyxJQUFJQyxFQUFRNVMsY0FBYzRTLE1BQzFCQSxFQUFNQyxjQUFjRCxFQUFNRSxnQkFBZ0I5VSxNQUFRLEtBQU9ILElBQ3pEK1UsRUFBTW5NLFFBQVEsY0FBZSxtQkFDakMsSUFFQUMsRUFBSzhMLHFCQUF1QixXQUN4QixJQUFJTyxFQUFTUixJQUdiLE9BRm1CakwsS0FBSzBMLE9BQU8sWUFBYSxlQUFnQixTQUFTQyxLQUFLLEdBQUksR0FBSSxFQUFHLEdBQ3hFQyxNQUFNSCxHQUNaQSxDQUNYLEVBbURBL1MsY0FBY3dHLEdBQUdpTSxHQUFHLGVBbERILFNBQVVVLEdBQ3ZCek0sRUFBSzBNLGFBQWEsTUFBTSxHQUN4QjFNLEVBQUsyTSxzQkFDTDNNLEVBQUtELFFBQVEsa0JBQ2JDLEVBQUtELFFBQVEsbUJBQ2IsSUFBSTZNLEVBQWU1TSxFQUFLNk0sT0FBTyxTQUMvQmpNLEtBQUtrTSxLQUFLLEdBQUksaURBQ1RDLFFBQVEvVCxHQUNSd1QsTUFBTUksR0FDWCxJQUFJSSxFQUFTcE0sS0FBS3FNLE9BQU8sbUJBQW1CQyxLQUFLLElBQUssSUFDbER4VCxFQUFTa0gsS0FBS3FNLE9BQU8sT0FDekJyTSxLQUFLa00sS0FBSyxrQkFBbUIsU0FBU04sTUFBTVEsR0FPNUNwTSxLQUFLdU0sU0FBUyxHQU5HLENBQ2JDLFFBQVMsZUFDVDlSLE9BQVEsaUJBQ1IrUixRQUFTLGdCQUNUNVQsTUFBTyxTQUVtQixlQUN6QjhTLEtBQUssR0FBSSxFQUFHLEdBQUksR0FDaEJDLE1BQU1RLEdBQ1gsSUFBSTlWLEVBQU8wSixLQUFLa00sS0FBSyxHQUFJLDRCQUE0QkksS0FBSyxLQUFLSSxJQUFJLElBQzlEUCxRQUFRLHNDQUNiN1YsRUFBS3NWLE1BQU05UyxHQUNYc1QsRUFBT1IsTUFBTUksR0FDYmxULEVBQU84UyxNQUFNSSxHQUNiLElBQUlXLEVBQWEsU0FBVXZULEVBQUdzRCxHQUMxQm5ELFFBQVFDLElBQUksaUJBQWtCSixFQUFHc0QsR0FDdkIsWUFBTkEsRUFDQTZDLElBRVcsV0FBTjdDLEVBQ0xxQyxJQUVXLFlBQU5yQyxFQUNMb0MsSUFFVyxVQUFOcEMsR0FDTGxFLElBRUosSUFBSW9VLEVBQU9yVyxJQUFVZ0MsUUFBUSxNQUFPLFFBQ3BDcVUsRUFBT2xVLGNBQWM0UyxNQUFNdUIsaUJBQWlCRCxHQUM1Q3RXLEVBQUs2VixRQUFRUyxFQUNqQixFQUNBRCxFQUFXLEVBQUcsV0FDZGpVLGNBQWN3RyxHQUFHaU0sR0FBRyxjQUFld0IsR0FDbkN2TixFQUFLME4sYUFBZWQsRUFDcEJBLEVBQWFKLE1BQU14TSxFQUFLMk4saUJBQ3hCM04sRUFBSzROLGNBQWNoQixFQUN2QixJQUVBNU0sRUFBSzZOLGFBQWEsV0FBWSxRQUFTLGVBQWVyQixNQUFNeE0sRUFBSzhOLFVBQ2pFLElBQUlDLEVBQWtCbk4sS0FBSzZLLFdBQ3ZCdUMsRUFBYyxDQUFDLFdBQVksTUFBTyxVQUFXLFFBQzdDQyxFQUFnQixNQUNwQnJOLEtBQUs2SyxXQUFhLFNBQVV5QyxFQUFJQyxFQUFhQyxHQUN6QyxHQUFzQixhQUFsQkgsRUFDQSxPQUFPRixFQUFnQkcsRUFBSUMsRUFBYUMsR0FFdkMsR0FBc0IsUUFBbEJILEVBQ0wsT0F2ekJrQmpELEVBdXpCR2tELEVBdnpCSzdNLEVBdXpCRCxHQXR6QjdCaUssRUFBTSxJQUFJRixLQUNWck8sRUFBVSxJQUFJcU8sS0FBS0UsRUFBSStDLFVBQVlyRCxHQUVuQ3NELEdBREE5VixPQUFlcUUsSUFBWHdFLEVBQXVCQSxFQUFTLFFBQzFCekcsRUFBS21DLEVBQVF3UixXQUFZeFIsRUFBUXlSLGNBQzNDelIsRUFBUTBSLFVBQVluRCxFQUFJbUQsV0FDeEJILEVBQU0sR0FBR3JWLE9BQU9ULEdBQUdTLE9BQU84QixFQUFLZ0MsRUFBUTBSLFVBQVcsT0FBT3hWLE9BQU8yQixFQUFLbUMsRUFBUXdSLFdBQVl4UixFQUFReVIsZ0JBQzlGRixFQVBTLElBQVV0RCxFQUFRM0osRUFDOUJpSyxFQUNBdk8sRUFDQXZFLEVBQ0E4VixFQXF6QkssR0FBc0IsU0FBbEJMLEVBQTBCLENBQy9CLElBQ0kvUyxFQUFPZ1QsR0FEMEMsR0FBMUM1VSxjQUFjQyxTQUFTQyxPQUFPZ1MsVUFBaUIsS0FFMUQsTUFBTyxTQUFTdlMsT0FBT3lCLEtBQUtnVSxLQUFLeFQsR0FBUTVCLGNBQWNDLFNBQVNDLE9BQU8wQixLQUMzRSxDQUNLLE1BQXNCLFlBQWxCK1MsR0FFRC9TLEVBQU9nVCxHQUQwQyxHQUExQzVVLGNBQWNDLFNBQVNDLE9BQU9nUyxVQUFpQixLQUVuRCxHQUFHdlMsT0FBT3lCLEtBQUtnVSxLQUFLeFQsR0FBTyxnQkFIakMsQ0FLVCxFQU9BN0QsRUFBYSxLQU5RLFdBQ2pCLElBQUllLEdBQUs0VixFQUFZcEQsUUFBUXFELEdBQWlCLEdBQUtELEVBQVl6VixPQUMvRDBWLEVBQWdCRCxFQUFZNVYsR0FDNUJrQixjQUFjd0csR0FBR0MsUUFBUSxxQkFDekJ6RyxjQUFjd0csR0FBR0MsUUFBUSxjQUM3QixHQUNrQyx5UUFHOUI0TyxPQUFPQyxTQUNQNVcsT0FBTzZXLGVBQWVqTyxLQUFNLGVBQWdCLENBQUVrTyxJQUFLLFdBQWMsT0FBTyxDQUFPLElBQy9FOVcsT0FBTzZXLGVBQWV2VixjQUFjMEcsS0FBS0gsSUFBSyxvQkFBcUIsQ0FDL0RpUCxJQUFLLFdBQWMsT0FBTyxDQUFPLEtBR3pDMU4sR0FBYyxDQUNsQixDQTBCWTJOLEdBQ0E1VSxRQUFRQyxJQUFJLHdCQUtoQmdJLElBQ0FqQyxLQUdBaEcsUUFBUUMsSUFBSSx3Q0FBeUNkLGNBQWNDLFNBRTNFLEVBRUEsR0FEQWxDLEVBQWEsSUFBSzBPLEVBQU0sc0hBQ2UsUUFBakNqTixFQUFLUSxjQUFjQyxnQkFBNkIsSUFBUFQsT0FBZ0IsRUFBU0EsRUFBR1UsU0FBV0YsY0FBYzBHLEtBQUtILElBQ3JHMUYsUUFBUUMsSUFBSSwyREFDWjJMLFFBRUMsQ0FDRDVMLFFBQVFDLElBQUksK0NBQ1osSUFBSTRVLEVBQTBCMVYsY0FBY3dHLEdBQUdtUCxpQkFDL0MzVixjQUFjd0csR0FBR21QLGlCQUFtQixTQUFVQyxHQUMxQ0YsRUFBd0JFLEdBQ0QsOEJBQW5CQSxFQUFTQyxPQUNUaFYsUUFBUUMsSUFBSSxxQ0FDWjJMLEtBRXdCLHdCQUFuQm1KLEVBQVNDLE9BQ2RoVixRQUFRQyxJQUFJLGlDQUNaZCxjQUFjZ1AsZUFBaUJoUCxjQUFjQyxTQUFTMEosT0FBTzFHLElBQzdEd0osTUFFTTNFLEdBQWU5SCxjQUFjMEcsS0FBS0gsTUFDeEMxRixRQUFRQyxJQUFJLG1EQUNaMkwsSUFFUixDQUNKLENBQ0EsSUFBSXFKLE9BQWdCdlMsRUFDaEJ3UyxFQUFPL1YsY0FBY2dXLFdBQ3JCQyxFQUFhLFNBQVVDLEVBQVFDLFFBQ001UyxJQUFqQ3ZELGNBQWNnUCxpQkFDZGhQLGNBQWNnUCxlQUFpQmhQLGNBQWNDLFNBQVMwSixPQUFPMUcsS0FFakUsSUFBSW1ULEdBQVFELGFBQW1DLEVBQVNBLEVBQUt4UyxNQUFNLEtBQUssS0FBT21TLEVBRS9FLEdBREFBLEVBQWdCTSxFQUNHLENBQ2YsSUFBSUMsRUFBUyxDQUNUQyxZQUFhUCxFQUNiUSxZQUFhLE1BQ2JILEtBQU1OLEdBRU5VLEVBQVNDLE9BQU9DLEtBQUssQ0FDckJuTyxLQUFNLE9BQ05vTyxJQUFLLGdDQUNMQyxPQUFPLEVBQ1BULEtBQU1FLEVBQ05RLFNBQVUsU0FFZDdXLGNBQWN3RyxHQUFHc1EsZUFBZSxLQUFNTixFQUFPTyxhQUFhQyxlQUMxRGhYLGNBQWMwRyxLQUFLME0sYUFBYSxNQUFNLEdBQ3RDcFQsY0FBY3dHLEdBQUdDLFFBQVEsZ0JBQWlCLENBQ3RDekcsY0FBY0MsU0FBUzBKLE9BQU8xRyxLQUM5QixJQUVKd0osR0FDSixDQUNKLEVBQ0l3SyxFQUFZLFNBQVVmLEVBQVFDLFFBQ081UyxJQUFqQ3ZELGNBQWNnUCxpQkFDZGhQLGNBQWNnUCxlQUFpQmhQLGNBQWNDLFNBQVMwSixPQUFPMUcsS0FFakUsSUFBSW1ULEdBQVFELGFBQW1DLEVBQVNBLEVBQUt4UyxNQUFNLEtBQUssS0FBT21TLEVBRS9FLEdBREFBLEVBQWdCTSxFQUNHLENBQ2YsSUFBSUMsRUFBUyxDQUNUQyxZQUFhUCxFQUNiUSxZQUFhLE1BQ2JILEtBQU1OLEdBRU5VLEVBQVNDLE9BQU9DLEtBQUssQ0FDckJuTyxLQUFNLE9BQ05vTyxJQUFLLGdDQUNMQyxPQUFPLEVBQ1BULEtBQU1FLEVBQ05RLFNBQVUsU0FFVjVXLEVBQVdELGNBQWNDLFNBQ3pCaVgsRUFBT1YsRUFBT08sYUFBYUMsY0FFL0IsSUFBSyxJQUFJblksS0FEVG9CLEVBQVNDLE9BQU9DLE1BQVExQixFQUFTQSxFQUFTLENBQUMsRUFBR3lZLEVBQUsvVyxPQUFRRixFQUFTQyxPQUFPQyxPQUM3RCtXLEVBQUsvVyxNQUFPLENBQ3RCLElBQUlJLEVBQU8yVyxFQUFLL1csTUFBTXRCLEdBQ1AsTUFBWDBCLEVBQUtrSyxJQUNMeEssRUFBU0MsT0FBT0MsTUFBTXRCLEdBQUtKLEVBQVNBLEVBQVMsQ0FBQyxFQUFHd0IsRUFBU0MsT0FBT0MsTUFBTXRCLElBQUswQixHQUVwRixDQUNBTixFQUFTQyxPQUFPOEIsT0FBU3ZELEVBQVNBLEVBQVMsQ0FBQyxFQUFHeVksRUFBS2xWLFFBQVMvQixFQUFTQyxPQUFPOEIsUUFDN0VoQyxjQUFjd0csR0FBR3NRLGVBQWUsS0FBTTdXLEVBQVNDLFFBQy9DRixjQUFjMEcsS0FBSzBNLGFBQWEsTUFBTSxHQUN0QzNHLEdBQ0osQ0FDSixFQUNBMU8sRUFBYSxJQUFLa1ksRUFBWSwrTEFFOUJsWSxFQUFhLElBQUtrWixFQUFXLDRNQUU3QmpYLGNBQWN3RyxHQUFHaU0sR0FBRyxrQkFBbUJ3RCxHQUN2Q2pXLGNBQWN3RyxHQUFHaU0sR0FBRyxpQkFBa0J3RSxHQWdCdENsWixFQUFhLEtBZkMsV0FDVixJQUFJRyxFQUFPLENBQUMsT0FBT3lCLE9BQU9ELEVBQU8sVUQ3a0M5QmhCLE9BQU95WSxLQUFLclosR0M4a0NGc1osU0FBUSxTQUFVcFosR0FDM0IsSUFBSUMsRUQ3a0NULFNBQTJCRCxHQUM5QixPQUFPRixFQUFRRSxFQUNuQixDQzJrQ3lCcVosQ0FBa0JyWixHQUMvQkUsRUFBS21DLEtBQUssZUFBZVYsT0FBTzNCLEVBQUssVUFDakNDLEVBQU9DLEtBQ1BBLEVBQUttQyxLQUFLcEMsRUFBT0MsTUFHakJBLEVBQUttQyxLQUFLLG9DQUFvQ1YsT0FBTzFCLEVBQU9xWixpQkFBa0IsV0FFdEYsSUFDQXRYLGNBQWNDLFNBQVNzWCxTQUFXclosRUFBSzBDLEtBQUssSUFDNUNaLGNBQWN3RyxHQUFHQyxRQUFRLGNBQWUsT0FDNUMsR0FDMkIsNkJBQzNCLElBQUkrUSxFQUFvQixFQTRDeEJyUCxTQUFTMkIsS0FBSzJOLGlCQUFpQixTQTNDTCxTQUFVL1csR0FDaEMsSUFBSWdYLEVBQVNoWCxFQUFFZ1gsT0FDZixHQUFvQixhQUFoQkEsRUFBT25QLEtBRVAsR0FBWSxNQURGN0gsRUFBRTFDLElBQ0ssQ0FDYixHQUFJd1osR0FBcUIsRUFBRyxDQUV4QixJQURBQSxFQUFvQkUsRUFBTzdQLE1BQU04UCxZQUFZLE1BQVEsSUFDNUIsRUFFckIsWUFEQUgsRUFBb0IsR0FJeEIsR0FEZ0JFLEVBQU83UCxNQUFNeUosUUFBUSxLQUFNa0csSUFBc0IsRUFHN0QsWUFEQUEsRUFBb0IsRUFHNUIsQ0FDQSxJQUFJSSxFQUFRSixFQUNSSyxFQUFhSCxFQUFPN1AsTUFBTXlKLFFBQVEsSUFBS3NHLElBQ3ZCLElBQWhCQyxJQUNBQSxFQUFhSCxFQUFPN1AsTUFBTTVJLFFBQzlCLElBQUk2WSxFQUFhSixFQUFPN1AsTUFBTW5ELFVBQVVrVCxFQUFPQyxHQUMvQ0wsRUFBb0IsRUFDcEIsSUFBSWhXLEVBQUlzVyxFQUFXNVcsTUFBTSxpQkFDekIsR0FBSU0sYUFBNkIsRUFBU0EsRUFBRXZDLE9BQVEsQ0FDaEQsSUFBSXVCLEVBQU9pUSxPQUFPcUgsR0FDZEMsRUFBTUwsRUFBT00sYUFDYkMsRUFBTyxHQUFHdFksT0FBT2EsRUFBTSxPQUFPYixPQUFPSyxjQUFjQyxTQUFTQyxPQUFPSCxRQUFRUyxHQUFNeU8sT0FDckZ5SSxFQUFPN1AsTUFDSDZQLEVBQU83UCxNQUFNbkQsVUFBVSxFQUFHa1QsR0FDdEJLLEVBQ0FQLEVBQU83UCxNQUFNbkQsVUFBVXFULEVBQUtMLEVBQU83UCxNQUFNNUksUUFDakR5WSxFQUFPUSxlQUFpQk4sRUFBUUssRUFBS2haLE9BQ3JDeVksRUFBT00sYUFBZUosRUFBUUssRUFBS2haLE1BQ3ZDLENBQ0osTUFDSyxHQUFJeVksRUFBT1EsZUFBaUIsRUFBRyxDQUM1Qk4sRUFBUUYsRUFBT1EsZUFBaUIsRUFBcEMsSUFDSUMsRUFBS1QsRUFBTzdQLE1BQU1uRCxVQUFVa1QsRUFBT0EsRUFBUSxHQUMvQ0osRUFBMkIsT0FBUFcsRUFBY1QsRUFBT1EsZUFBaUIsQ0FDOUQsQ0FFUixJQUVBclgsUUFBUUMsSUFBSSx3Q0FDaEIsQ0FDQXNYLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXB0dW5lcy1wcmlkZS1hZ2VudC8uL3NyYy92ZXJzaW9uLmpzIiwid2VicGFjazovL25lcHR1bmVzLXByaWRlLWFnZW50Ly4vc3JjL2hvdGtleS50cyIsIndlYnBhY2s6Ly9uZXB0dW5lcy1wcmlkZS1hZ2VudC8uL3NyYy9pbnRlbC50cyIsIndlYnBhY2s6Ly9uZXB0dW5lcy1wcmlkZS1hZ2VudC8uL3NyYy9pbWFnZXV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgdmVyc2lvbl9pbmZvID0ge1xuICAgIGhhc2g6IFwiMjVkMGI1NlwiLFxuICAgIGRhdGU6IFwiMDMgSmFuIDIwMjMgMDY6MjJcIixcbiAgICBzdGF0dXM6IFwiIE0gc3JjL2ludGVsLnRzXCIsXG4gICAgdmVyc2lvbjogXCIyLjAuM1wiLFxuICAgIHBvc3R2ZXJzaW9uOiBcIi4vYmluL3BhY2thZ2VkaXN0XCIsXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldFZlcnNpb24oKSB7XG4gICAgdmFyIGNhdXRpb24gPSB2ZXJzaW9uX2luZm8uc3RhdHVzLmxlbmd0aCA+IDAgPyBcIuKaoFwiIDogXCJcIjtcbiAgICByZXR1cm4gXCJOZXB0dW5lJ3MgUHJpZGUgQWdlbnQgdlwiLmNvbmNhdCh2ZXJzaW9uX2luZm8udmVyc2lvbiwgXCIgKFwiKS5jb25jYXQodmVyc2lvbl9pbmZvLmRhdGUsIFwiIFwiKS5jb25jYXQoY2F1dGlvbikuY29uY2F0KHZlcnNpb25faW5mby5oYXNoLCBcIilcIik7XG59XG4iLCJ2YXIgbGFzdENsaXAgPSBcIkVycm9yXCI7XG5leHBvcnQgZnVuY3Rpb24gc2V0Q2xpcCh0ZXh0KSB7XG4gICAgbGFzdENsaXAgPSB0ZXh0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENsaXAoKSB7XG4gICAgcmV0dXJuIGxhc3RDbGlwO1xufVxudmFyIGNvcHkgPSBmdW5jdGlvbiAocmVwb3J0Rm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXBvcnRGbigpO1xuICAgICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChsYXN0Q2xpcCk7XG4gICAgfTtcbn07XG52YXIgaG90a2V5cyA9IHt9O1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluZUhvdGtleShrZXksIGFjdGlvbiwgaGVscCkge1xuICAgIGlmIChoZWxwKSB7XG4gICAgICAgIGFjdGlvbi5oZWxwID0gaGVscDtcbiAgICB9XG4gICAgaG90a2V5c1trZXldID0gYWN0aW9uO1xuICAgIE1vdXNldHJhcC5iaW5kKGtleSwgY29weShhY3Rpb24pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRIb3RrZXlzKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhob3RrZXlzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRIb3RrZXlDYWxsYmFjayhrZXkpIHtcbiAgICByZXR1cm4gaG90a2V5c1trZXldO1xufVxuIiwiLy8gPT1Vc2VyU2NyaXB0PT1cbi8vIEBuYW1lICAgICAgICBOZXB0dW5lJ3MgUHJpZGUgQWdlbnRcbi8vIEBkZXNjcmlwdGlvbiBIVUQgYW5kIHJlcG9ydGluZyBmb3IgTmVwdHVuZSdzIFByaWRlLlxuLy8gQG1hdGNoICAgICAgIGh0dHBzOi8vbnAuaXJvbmhlbG1ldC5jb20vKlxuLy8gQHZlcnNpb24gICAgIDEuMThcbi8vIEB1cGRhdGVVUkwgICBodHRwczovL2JpdGJ1Y2tldC5vcmcvb3NyaWN0aGVrbmlnaHQvaW9zbnBhZ2VudC9yYXcvSEVBRC9pbnRlbC5qc1xuLy8gPT0vVXNlclNjcmlwdD09XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChnICYmIChnID0gMCwgb3BbMF0gJiYgKF8gPSAwKSksIF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuLyogZ2xvYmFsIENydXgsIE5lcHR1bmVzUHJpZGUsIE1vdXNldHJhcCwgalF1ZXJ5LCAqL1xuaW1wb3J0IHsgZ2V0VmVyc2lvbiB9IGZyb20gXCIuL3ZlcnNpb24uanNcIjtcbmltcG9ydCB7IHNhZmVfaW1hZ2VfdXJsIH0gZnJvbSBcIi4vaW1hZ2V1dGlsc1wiO1xuaW1wb3J0IHsgc2V0Q2xpcCwgZGVmaW5lSG90a2V5LCBnZXRDbGlwLCBnZXRIb3RrZXlzLCBnZXRIb3RrZXlDYWxsYmFjaywgfSBmcm9tIFwiLi9ob3RrZXlcIjtcbmZ1bmN0aW9uIE5lcHR1bmVzUHJpZGVBZ2VudCgpIHtcbiAgICB2YXIgX2E7XG4gICAgdmFyIHRpdGxlID0gZ2V0VmVyc2lvbigpO1xuICAgIHZhciB2ZXJzaW9uID0gdGl0bGUucmVwbGFjZSgvXi4qdi8sIFwidlwiKTtcbiAgICBjb25zb2xlLmxvZyh0aXRsZSk7XG4gICAgaWYgKCFTdHJpbmcucHJvdG90eXBlLmZvcm1hdCkge1xuICAgICAgICBTdHJpbmcucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlcGxhY2UoL3soXFxkKyl9L2csIGZ1bmN0aW9uIChtYXRjaCwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbaW5kZXhdID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLnRydW5jKGFyZ3NbaW5kZXhdICogMTAwMCkgLyAxMDAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZW9mIGFyZ3NbaW5kZXhdICE9IFwidW5kZWZpbmVkXCIgPyBhcmdzW2luZGV4XSA6IG1hdGNoO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHZhciBsaW5rRmxlZXRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdW5pdmVyc2UgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlO1xuICAgICAgICB2YXIgZmxlZXRzID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5nYWxheHkuZmxlZXRzO1xuICAgICAgICBmb3IgKHZhciBmIGluIGZsZWV0cykge1xuICAgICAgICAgICAgdmFyIGZsZWV0ID0gZmxlZXRzW2ZdO1xuICAgICAgICAgICAgdmFyIGZsZWV0TGluayA9IFwiPGEgb25DbGljaz0nQ3J1eC5jcnV4LnRyaWdnZXIoXFxcInNob3dfZmxlZXRfdWlkXFxcIiwgXFxcIlwiLmNvbmNhdChmbGVldC51aWQsIFwiXFxcIiknPlwiKS5jb25jYXQoZmxlZXQubiwgXCI8L2E+XCIpO1xuICAgICAgICAgICAgdW5pdmVyc2UuaHlwZXJsaW5rZWRNZXNzYWdlSW5zZXJ0c1tmbGVldC5uXSA9IGZsZWV0TGluaztcbiAgICAgICAgfVxuICAgIH07XG4gICAgZnVuY3Rpb24gc3RhclJlcG9ydCgpIHtcbiAgICAgICAgdmFyIHBsYXllcnMgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLmdhbGF4eS5wbGF5ZXJzO1xuICAgICAgICB2YXIgc3RhcnMgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLmdhbGF4eS5zdGFycztcbiAgICAgICAgdmFyIG91dHB1dCA9IFtdO1xuICAgICAgICBmb3IgKHZhciBwIGluIHBsYXllcnMpIHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKFwiW1t7MH1dXVwiLmZvcm1hdChwKSk7XG4gICAgICAgICAgICBmb3IgKHZhciBzIGluIHN0YXJzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXIgPSBzdGFyc1tzXTtcbiAgICAgICAgICAgICAgICBpZiAoc3Rhci5wdWlkID09IHAgJiYgc3Rhci5zaGlwc1BlclRpY2sgPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChcIuKAg+KAg1tbezB9XV0gezF9L3syfS97M30gezR9IHNoaXBzXCIuZm9ybWF0KHN0YXIubiwgc3Rhci5lLCBzdGFyLmksIHN0YXIucywgc3Rhci50b3RhbERlZmVuc2VzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNldENsaXAob3V0cHV0LmpvaW4oXCJcXG5cIikpO1xuICAgIH1cbiAgICBkZWZpbmVIb3RrZXkoXCIqXCIsIHN0YXJSZXBvcnQsIFwiR2VuZXJhdGUgYSByZXBvcnQgb24gYWxsIHN0YXJzIGluIHlvdXIgc2Nhbm5pbmcgcmFuZ2UsIGFuZCBjb3B5IGl0IHRvIHRoZSBjbGlwYm9hcmQuXCIgK1xuICAgICAgICBcIjxwPlRoaXMgc2FtZSByZXBvcnQgY2FuIGFsc28gYmUgdmlld2VkIHZpYSB0aGUgbWVudTsgZW50ZXIgdGhlIGFnZW50IGFuZCBjaG9vc2UgaXQgZnJvbSB0aGUgZHJvcGRvd24uXCIpO1xuICAgIHZhciBhbXBtID0gZnVuY3Rpb24gKGgsIG0pIHtcbiAgICAgICAgaWYgKG0gPCAxMClcbiAgICAgICAgICAgIG0gPSBcIjBcIi5jb25jYXQobSk7XG4gICAgICAgIGlmIChoIDwgMTIpIHtcbiAgICAgICAgICAgIGlmIChoID09IDApXG4gICAgICAgICAgICAgICAgaCA9IDEyO1xuICAgICAgICAgICAgcmV0dXJuIFwiezB9OnsxfSBBTVwiLmZvcm1hdChoLCBtKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChoID4gMTIpIHtcbiAgICAgICAgICAgIHJldHVybiBcInswfTp7MX0gUE1cIi5mb3JtYXQoaCAtIDEyLCBtKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXCJ7MH06ezF9IFBNXCIuZm9ybWF0KGgsIG0pO1xuICAgIH07XG4gICAgdmFyIG1zVG9UaWNrID0gZnVuY3Rpb24gKHRpY2ssIHdob2xlVGltZSkge1xuICAgICAgICB2YXIgdW5pdmVyc2UgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlO1xuICAgICAgICB2YXIgbXNfc2luY2VfZGF0YSA9IDA7XG4gICAgICAgIHZhciB0ZiA9IHVuaXZlcnNlLmdhbGF4eS50aWNrX2ZyYWdtZW50O1xuICAgICAgICB2YXIgbHRjID0gdW5pdmVyc2UubG9jVGltZUNvcnJlY3Rpb247XG4gICAgICAgIGlmICghdW5pdmVyc2UuZ2FsYXh5LnBhdXNlZCkge1xuICAgICAgICAgICAgbXNfc2luY2VfZGF0YSA9IG5ldyBEYXRlKCkudmFsdWVPZigpIC0gdW5pdmVyc2Uubm93LnZhbHVlT2YoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAod2hvbGVUaW1lIHx8IHVuaXZlcnNlLmdhbGF4eS50dXJuX2Jhc2VkKSB7XG4gICAgICAgICAgICBtc19zaW5jZV9kYXRhID0gMDtcbiAgICAgICAgICAgIHRmID0gMDtcbiAgICAgICAgICAgIGx0YyA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1zX3JlbWFpbmluZyA9IHRpY2sgKiAxMDAwICogNjAgKiB1bml2ZXJzZS5nYWxheHkudGlja19yYXRlIC1cbiAgICAgICAgICAgIHRmICogMTAwMCAqIDYwICogdW5pdmVyc2UuZ2FsYXh5LnRpY2tfcmF0ZSAtXG4gICAgICAgICAgICBtc19zaW5jZV9kYXRhIC1cbiAgICAgICAgICAgIGx0YztcbiAgICAgICAgcmV0dXJuIG1zX3JlbWFpbmluZztcbiAgICB9O1xuICAgIHZhciBkYXlzID0gW1wiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCJdO1xuICAgIHZhciBtc1RvRXRhU3RyaW5nID0gZnVuY3Rpb24gKG1zcGx1cywgcHJlZml4KSB7XG4gICAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICB2YXIgYXJyaXZhbCA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBtc3BsdXMpO1xuICAgICAgICB2YXIgcCA9IHByZWZpeCAhPT0gdW5kZWZpbmVkID8gcHJlZml4IDogXCJFVEEgXCI7XG4gICAgICAgIHZhciB0dHQgPSBwICsgYW1wbShhcnJpdmFsLmdldEhvdXJzKCksIGFycml2YWwuZ2V0TWludXRlcygpKTtcbiAgICAgICAgaWYgKGFycml2YWwuZ2V0RGF5KCkgIT0gbm93LmdldERheSgpKVxuICAgICAgICAgICAgdHR0ID0gXCJcIi5jb25jYXQocCkuY29uY2F0KGRheXNbYXJyaXZhbC5nZXREYXkoKV0sIFwiIEAgXCIpLmNvbmNhdChhbXBtKGFycml2YWwuZ2V0SG91cnMoKSwgYXJyaXZhbC5nZXRNaW51dGVzKCkpKTtcbiAgICAgICAgcmV0dXJuIHR0dDtcbiAgICB9O1xuICAgIHZhciB0aWNrVG9FdGFTdHJpbmcgPSBmdW5jdGlvbiAodGljaywgcHJlZml4KSB7XG4gICAgICAgIHZhciBtc3BsdXMgPSBtc1RvVGljayh0aWNrKTtcbiAgICAgICAgcmV0dXJuIG1zVG9FdGFTdHJpbmcobXNwbHVzLCBwcmVmaXgpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gdGlja051bWJlcih0aWNrcykge1xuICAgICAgICByZXR1cm4gTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5nYWxheHkudGljayArIHRpY2tzO1xuICAgIH1cbiAgICB2YXIgZmxlZXRPdXRjb21lcyA9IHt9O1xuICAgIHZhciBjb21iYXRIYW5kaWNhcCA9IDA7XG4gICAgdmFyIGNvbWJhdE91dGNvbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciB1bml2ZXJzZSA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2U7XG4gICAgICAgIHZhciBwbGF5ZXJzID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5nYWxheHkucGxheWVycztcbiAgICAgICAgdmFyIGZsZWV0cyA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LmZsZWV0cztcbiAgICAgICAgdmFyIHN0YXJzID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5nYWxheHkuc3RhcnM7XG4gICAgICAgIHZhciBmbGlnaHRzID0gW107XG4gICAgICAgIGZsZWV0T3V0Y29tZXMgPSB7fTtcbiAgICAgICAgZm9yICh2YXIgZiBpbiBmbGVldHMpIHtcbiAgICAgICAgICAgIHZhciBmbGVldCA9IGZsZWV0c1tmXTtcbiAgICAgICAgICAgIGlmIChmbGVldC5vICYmIGZsZWV0Lm8ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHZhciBzdG9wXzEgPSBmbGVldC5vWzBdWzFdO1xuICAgICAgICAgICAgICAgIHZhciB0aWNrcyA9IGZsZWV0LmV0YUZpcnN0O1xuICAgICAgICAgICAgICAgIHZhciBzdGFybmFtZSA9IChfYSA9IHN0YXJzW3N0b3BfMV0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5uO1xuICAgICAgICAgICAgICAgIGlmICghc3Rhcm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZsaWdodHMucHVzaChbXG4gICAgICAgICAgICAgICAgICAgIHRpY2tzLFxuICAgICAgICAgICAgICAgICAgICBcIltbezB9XV0gW1t7MX1dXSB7Mn0g4oaSIFtbezN9XV0gW1tUaWNrICN7NH1dXVwiLmZvcm1hdChmbGVldC5wdWlkLCBmbGVldC5uLCBmbGVldC5zdCwgc3Rhcm5hbWUsIHRpY2tOdW1iZXIodGlja3MpKSxcbiAgICAgICAgICAgICAgICAgICAgZmxlZXQsXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZmxpZ2h0cyA9IGZsaWdodHMuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgcmV0dXJuIGFbMF0gLSBiWzBdO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGFycml2YWxzID0ge307XG4gICAgICAgIHZhciBvdXRwdXQgPSBbXTtcbiAgICAgICAgdmFyIGFycml2YWxUaW1lcyA9IFtdO1xuICAgICAgICB2YXIgc3RhcnN0YXRlID0ge307XG4gICAgICAgIGZvciAodmFyIGkgaW4gZmxpZ2h0cykge1xuICAgICAgICAgICAgdmFyIGZsZWV0ID0gZmxpZ2h0c1tpXVsyXTtcbiAgICAgICAgICAgIGlmIChmbGVldC5vcmJpdGluZykge1xuICAgICAgICAgICAgICAgIHZhciBvcmJpdCA9IGZsZWV0Lm9yYml0aW5nLnVpZDtcbiAgICAgICAgICAgICAgICBpZiAoIXN0YXJzdGF0ZVtvcmJpdF0pIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnN0YXRlW29yYml0XSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RfdXBkYXRlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoaXBzOiBzdGFyc1tvcmJpdF0udG90YWxEZWZlbnNlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHB1aWQ6IHN0YXJzW29yYml0XS5wdWlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgYzogc3RhcnNbb3JiaXRdLmMsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFRoaXMgZmxlZXQgaXMgZGVwYXJ0aW5nIHRoaXMgdGljazsgcmVtb3ZlIGl0IGZyb20gdGhlIG9yaWdpbiBzdGFyJ3MgdG90YWxEZWZlbnNlc1xuICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtvcmJpdF0uc2hpcHMgLT0gZmxlZXQuc3Q7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYXJyaXZhbFRpbWVzLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAgICAgICAgIGFycml2YWxUaW1lc1thcnJpdmFsVGltZXMubGVuZ3RoIC0gMV0gIT09IGZsaWdodHNbaV1bMF0pIHtcbiAgICAgICAgICAgICAgICBhcnJpdmFsVGltZXMucHVzaChmbGlnaHRzW2ldWzBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBhcnJpdmFsS2V5ID0gW2ZsaWdodHNbaV1bMF0sIGZsZWV0Lm9bMF1bMV1dLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBpZiAoYXJyaXZhbHNbYXJyaXZhbEtleV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGFycml2YWxzW2Fycml2YWxLZXldLnB1c2goZmxlZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYXJyaXZhbHNbYXJyaXZhbEtleV0gPSBbZmxlZXRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGsgaW4gYXJyaXZhbHMpIHtcbiAgICAgICAgICAgIHZhciBhcnJpdmFsID0gYXJyaXZhbHNba107XG4gICAgICAgICAgICB2YXIga2EgPSBrLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgICAgIHZhciB0aWNrID0gcGFyc2VJbnQoa2FbMF0pO1xuICAgICAgICAgICAgdmFyIHN0YXJJZCA9IGthWzFdO1xuICAgICAgICAgICAgaWYgKCFzdGFyc3RhdGVbc3RhcklkXSkge1xuICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtzdGFySWRdID0ge1xuICAgICAgICAgICAgICAgICAgICBsYXN0X3VwZGF0ZWQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHNoaXBzOiBzdGFyc1tzdGFySWRdLnRvdGFsRGVmZW5zZXMsXG4gICAgICAgICAgICAgICAgICAgIHB1aWQ6IHN0YXJzW3N0YXJJZF0ucHVpZCxcbiAgICAgICAgICAgICAgICAgICAgYzogc3RhcnNbc3RhcklkXS5jLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RhcnN0YXRlW3N0YXJJZF0ucHVpZCA9PSAtMSkge1xuICAgICAgICAgICAgICAgIC8vIGFzc2lnbiBvd25lcnNoaXAgb2YgdGhlIHN0YXIgdG8gdGhlIHBsYXllciB3aG9zZSBmbGVldCBoYXMgdHJhdmVsZWQgdGhlIGxlYXN0IGRpc3RhbmNlXG4gICAgICAgICAgICAgICAgdmFyIG1pbkRpc3RhbmNlID0gMTAwMDA7XG4gICAgICAgICAgICAgICAgdmFyIG93bmVyID0gLTE7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBhcnJpdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmbGVldCA9IGFycml2YWxbaV07XG4gICAgICAgICAgICAgICAgICAgIHZhciBkID0gdW5pdmVyc2UuZGlzdGFuY2Uoc3RhcnNbc3RhcklkXS54LCBzdGFyc1tzdGFySWRdLnksIGZsZWV0Lmx4LCBmbGVldC5seSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkIDwgbWluRGlzdGFuY2UgfHwgb3duZXIgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG93bmVyID0gZmxlZXQucHVpZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbkRpc3RhbmNlID0gZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdGFyc3RhdGVbc3RhcklkXS5wdWlkID0gb3duZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvdXRwdXQucHVzaChcIltbVGljayAjezB9XV06IFtbezF9XV0gW1t7Mn1dXSB7M30gc2hpcHNcIi5mb3JtYXQodGlja051bWJlcih0aWNrKSwgc3RhcnN0YXRlW3N0YXJJZF0ucHVpZCwgc3RhcnNbc3RhcklkXS5uLCBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcykpO1xuICAgICAgICAgICAgdmFyIHRpY2tEZWx0YSA9IHRpY2sgLSBzdGFyc3RhdGVbc3RhcklkXS5sYXN0X3VwZGF0ZWQgLSAxO1xuICAgICAgICAgICAgaWYgKHRpY2tEZWx0YSA+IDApIHtcbiAgICAgICAgICAgICAgICB2YXIgb2xkU2hpcHMgPSBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcztcbiAgICAgICAgICAgICAgICBzdGFyc3RhdGVbc3RhcklkXS5sYXN0X3VwZGF0ZWQgPSB0aWNrIC0gMTtcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnNbc3RhcklkXS5zaGlwc1BlclRpY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9sZGMgPSBzdGFyc3RhdGVbc3RhcklkXS5jO1xuICAgICAgICAgICAgICAgICAgICBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcyArPVxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnNbc3RhcklkXS5zaGlwc1BlclRpY2sgKiB0aWNrRGVsdGEgKyBvbGRjO1xuICAgICAgICAgICAgICAgICAgICBzdGFyc3RhdGVbc3RhcklkXS5jID1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtzdGFySWRdLnNoaXBzIC0gTWF0aC50cnVuYyhzdGFyc3RhdGVbc3RhcklkXS5zaGlwcyk7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtzdGFySWRdLnNoaXBzIC09IHN0YXJzdGF0ZVtzdGFySWRdLmM7XG4gICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCDezB9K3szfSArIHsyfS9oID0gezF9K3s0fVwiLmZvcm1hdChvbGRTaGlwcywgc3RhcnN0YXRlW3N0YXJJZF0uc2hpcHMsIHN0YXJzW3N0YXJJZF0uc2hpcHNQZXJUaWNrLCBvbGRjLCBzdGFyc3RhdGVbc3RhcklkXS5jKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBhcnJpdmFsKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZsZWV0ID0gYXJyaXZhbFtpXTtcbiAgICAgICAgICAgICAgICBpZiAoZmxlZXQucHVpZCA9PSBzdGFyc3RhdGVbc3RhcklkXS5wdWlkIHx8XG4gICAgICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtzdGFySWRdLnB1aWQgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9sZFNoaXBzID0gc3RhcnN0YXRlW3N0YXJJZF0uc2hpcHM7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFyc3RhdGVbc3RhcklkXS5wdWlkID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcyA9IGZsZWV0LnN0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnN0YXRlW3N0YXJJZF0uc2hpcHMgKz0gZmxlZXQuc3Q7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhbmRpbmdTdHJpbmcgPSBcIuKAg+KAg3swfSArIHsyfSBvbiBbW3szfV1dID0gezF9XCIuZm9ybWF0KG9sZFNoaXBzLCBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcywgZmxlZXQuc3QsIGZsZWV0Lm4pO1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChsYW5kaW5nU3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgbGFuZGluZ1N0cmluZyA9IGxhbmRpbmdTdHJpbmcuc3Vic3RyaW5nKDIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gYXJyaXZhbCkge1xuICAgICAgICAgICAgICAgIHZhciBmbGVldCA9IGFycml2YWxbaV07XG4gICAgICAgICAgICAgICAgaWYgKGZsZWV0LnB1aWQgPT0gc3RhcnN0YXRlW3N0YXJJZF0ucHVpZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb3V0Y29tZVN0cmluZyA9IFwiezB9IHNoaXBzIG9uIHsxfVwiLmZvcm1hdChNYXRoLmZsb29yKHN0YXJzdGF0ZVtzdGFySWRdLnNoaXBzKSwgc3RhcnNbc3RhcklkXS5uKTtcbiAgICAgICAgICAgICAgICAgICAgZmxlZXRPdXRjb21lc1tmbGVldC51aWRdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXRhOiBcIltbVGljayAjXCIuY29uY2F0KHRpY2tOdW1iZXIoZmxlZXQuZXRhRmlyc3QpLCBcIl1dXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0Y29tZTogb3V0Y29tZVN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgYXd0ID0gMDtcbiAgICAgICAgICAgIHZhciBvZmZlbnNlID0gMDtcbiAgICAgICAgICAgIHZhciBjb250cmlidXRpb24gPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gYXJyaXZhbCkge1xuICAgICAgICAgICAgICAgIHZhciBmbGVldCA9IGFycml2YWxbaV07XG4gICAgICAgICAgICAgICAgaWYgKGZsZWV0LnB1aWQgIT0gc3RhcnN0YXRlW3N0YXJJZF0ucHVpZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb2xkYSA9IG9mZmVuc2U7XG4gICAgICAgICAgICAgICAgICAgIG9mZmVuc2UgKz0gZmxlZXQuc3Q7XG4gICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCDW1t7NH1dXSEgezB9ICsgezJ9IG9uIFtbezN9XV0gPSB7MX1cIi5mb3JtYXQob2xkYSwgb2ZmZW5zZSwgZmxlZXQuc3QsIGZsZWV0Lm4sIGZsZWV0LnB1aWQpKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJpYnV0aW9uW1tmbGVldC5wdWlkLCBmbGVldC51aWRdLnRvU3RyaW5nKCldID0gZmxlZXQuc3Q7XG4gICAgICAgICAgICAgICAgICAgIHZhciB3dCA9IHBsYXllcnNbZmxlZXQucHVpZF0udGVjaC53ZWFwb25zLmxldmVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAod3QgPiBhd3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF3dCA9IHd0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGF0dGFja2Vyc0FnZ3JlZ2F0ZSA9IG9mZmVuc2U7XG4gICAgICAgICAgICB3aGlsZSAob2ZmZW5zZSA+IDApIHtcbiAgICAgICAgICAgICAgICB2YXIgZHd0ID0gcGxheWVyc1tzdGFyc3RhdGVbc3RhcklkXS5wdWlkXS50ZWNoLndlYXBvbnMubGV2ZWw7XG4gICAgICAgICAgICAgICAgdmFyIGRlZmVuc2UgPSBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcztcbiAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChcIuKAg+KAg0NvbWJhdCEgW1t7MH1dXSBkZWZlbmRpbmdcIi5mb3JtYXQoc3RhcnN0YXRlW3N0YXJJZF0ucHVpZCkpO1xuICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCD4oCD4oCDRGVmZW5kZXJzIHswfSBzaGlwcywgV1MgezF9XCIuZm9ybWF0KGRlZmVuc2UsIGR3dCkpO1xuICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCD4oCD4oCDQXR0YWNrZXJzIHswfSBzaGlwcywgV1MgezF9XCIuZm9ybWF0KG9mZmVuc2UsIGF3dCkpO1xuICAgICAgICAgICAgICAgIGR3dCArPSAxO1xuICAgICAgICAgICAgICAgIGlmIChzdGFyc3RhdGVbc3RhcklkXS5wdWlkICE9PSB1bml2ZXJzZS5nYWxheHkucGxheWVyX3VpZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29tYmF0SGFuZGljYXAgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkd3QgKz0gY29tYmF0SGFuZGljYXA7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChcIuKAg+KAg+KAg+KAg0RlZmVuZGVycyBXU3swfSA9IHsxfVwiLmZvcm1hdChoYW5kaWNhcFN0cmluZyhcIlwiKSwgZHd0KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd3QgLT0gY29tYmF0SGFuZGljYXA7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChcIuKAg+KAg+KAg+KAg0F0dGFja2VycyBXU3swfSA9IHsxfVwiLmZvcm1hdChoYW5kaWNhcFN0cmluZyhcIlwiKSwgYXd0KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21iYXRIYW5kaWNhcCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF3dCArPSBjb21iYXRIYW5kaWNhcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCD4oCD4oCDQXR0YWNrZXJzIFdTezB9ID0gezF9XCIuZm9ybWF0KGhhbmRpY2FwU3RyaW5nKFwiXCIpLCBhd3QpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGR3dCAtPSBjb21iYXRIYW5kaWNhcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCD4oCD4oCDRGVmZW5kZXJzIFdTezB9ID0gezF9XCIuZm9ybWF0KGhhbmRpY2FwU3RyaW5nKFwiXCIpLCBkd3QpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodW5pdmVyc2UuZ2FsYXh5LnBsYXllcl91aWQgPT09IHN0YXJzdGF0ZVtzdGFySWRdLnB1aWQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdHJ1bmNhdGUgZGVmZW5zZSBpZiB3ZSdyZSBkZWZlbmRpbmcgdG8gZ2l2ZSB0aGUgbW9zdFxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zZXJ2YXRpdmUgZXN0aW1hdGVcbiAgICAgICAgICAgICAgICAgICAgZGVmZW5zZSA9IE1hdGgudHJ1bmMoZGVmZW5zZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHdoaWxlIChkZWZlbnNlID4gMCAmJiBvZmZlbnNlID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBvZmZlbnNlIC09IGR3dDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9mZmVuc2UgPD0gMClcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBkZWZlbnNlIC09IGF3dDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIG5ld0FnZ3JlZ2F0ZSA9IDA7XG4gICAgICAgICAgICAgICAgdmFyIHBsYXllckNvbnRyaWJ1dGlvbiA9IHt9O1xuICAgICAgICAgICAgICAgIHZhciBiaWdnZXN0UGxheWVyID0gLTE7XG4gICAgICAgICAgICAgICAgdmFyIGJpZ2dlc3RQbGF5ZXJJZCA9IHN0YXJzdGF0ZVtzdGFySWRdLnB1aWQ7XG4gICAgICAgICAgICAgICAgaWYgKG9mZmVuc2UgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCDQXR0YWNrZXJzIHdpbiB3aXRoIHswfSBzaGlwcyByZW1haW5pbmdcIi5mb3JtYXQob2ZmZW5zZSkpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrXzEgaW4gY29udHJpYnV0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIga2FfMSA9IGtfMS5zcGxpdChcIixcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmxlZXQgPSBmbGVldHNba2FfMVsxXV07XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGxheWVySWQgPSBwYXJzZUludChrYV8xWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyaWJ1dGlvbltrXzFdID0gKG9mZmVuc2UgKiBjb250cmlidXRpb25ba18xXSkgLyBhdHRhY2tlcnNBZ2dyZWdhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdBZ2dyZWdhdGUgKz0gY29udHJpYnV0aW9uW2tfMV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGxheWVyQ29udHJpYnV0aW9uW3BsYXllcklkXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNvbnRyaWJ1dGlvbltwbGF5ZXJJZF0gKz0gY29udHJpYnV0aW9uW2tfMV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXJDb250cmlidXRpb25bcGxheWVySWRdID0gY29udHJpYnV0aW9uW2tfMV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGxheWVyQ29udHJpYnV0aW9uW3BsYXllcklkXSA+IGJpZ2dlc3RQbGF5ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaWdnZXN0UGxheWVyID0gcGxheWVyQ29udHJpYnV0aW9uW3BsYXllcklkXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaWdnZXN0UGxheWVySWQgPSBwbGF5ZXJJZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwi4oCD4oCD4oCD4oCDW1t7MH1dXSBoYXMgezF9IG9uIFtbezJ9XV1cIi5mb3JtYXQoZmxlZXQucHVpZCwgY29udHJpYnV0aW9uW2tfMV0sIGZsZWV0Lm4pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvdXRjb21lU3RyaW5nID0gXCJXaW5zISB7MH0gbGFuZC5cIi5mb3JtYXQoY29udHJpYnV0aW9uW2tfMV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxlZXRPdXRjb21lc1tmbGVldC51aWRdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV0YTogXCJbW1RpY2sgI1wiLmNvbmNhdCh0aWNrTnVtYmVyKGZsZWV0LmV0YUZpcnN0KSwgXCJdXVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRjb21lOiBvdXRjb21lU3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvZmZlbnNlID0gbmV3QWdncmVnYXRlIC0gcGxheWVyQ29udHJpYnV0aW9uW2JpZ2dlc3RQbGF5ZXJJZF07XG4gICAgICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtzdGFySWRdLnB1aWQgPSBiaWdnZXN0UGxheWVySWQ7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJzdGF0ZVtzdGFySWRdLnNoaXBzID0gcGxheWVyQ29udHJpYnV0aW9uW2JpZ2dlc3RQbGF5ZXJJZF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzdGFyc3RhdGVbc3RhcklkXS5zaGlwcyA9IGRlZmVuc2U7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgaW4gYXJyaXZhbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZsZWV0ID0gYXJyaXZhbFtpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmbGVldC5wdWlkID09IHN0YXJzdGF0ZVtzdGFySWRdLnB1aWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgb3V0Y29tZVN0cmluZyA9IFwiezB9IHNoaXBzIG9uIHsxfVwiLmZvcm1hdChNYXRoLmZsb29yKHN0YXJzdGF0ZVtzdGFySWRdLnNoaXBzKSwgc3RhcnNbc3RhcklkXS5uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGVldE91dGNvbWVzW2ZsZWV0LnVpZF0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV0YTogXCJbW1RpY2sgI1wiLmNvbmNhdCh0aWNrTnVtYmVyKGZsZWV0LmV0YUZpcnN0KSwgXCJdXVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0Y29tZTogb3V0Y29tZVN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtfMiBpbiBjb250cmlidXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrYV8yID0ga18yLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmbGVldCA9IGZsZWV0c1trYV8yWzFdXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvdXRjb21lU3RyaW5nID0gXCJMb3NlcyEgezB9IGxpdmUuXCIuZm9ybWF0KGRlZmVuc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxlZXRPdXRjb21lc1tmbGVldC51aWRdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV0YTogXCJbW1RpY2sgI1wiLmNvbmNhdCh0aWNrTnVtYmVyKGZsZWV0LmV0YUZpcnN0KSwgXCJdXVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRjb21lOiBvdXRjb21lU3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhdHRhY2tlcnNBZ2dyZWdhdGUgPSBvZmZlbnNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3V0cHV0LnB1c2goXCLigIPigINbW3swfV1dIFtbezF9XV0gezJ9IHNoaXBzXCIuZm9ybWF0KHN0YXJzdGF0ZVtzdGFySWRdLnB1aWQsIHN0YXJzW3N0YXJJZF0ubiwgc3RhcnN0YXRlW3N0YXJJZF0uc2hpcHMpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH07XG4gICAgZnVuY3Rpb24gaW5jQ29tYmF0SGFuZGljYXAoKSB7XG4gICAgICAgIGNvbWJhdEhhbmRpY2FwICs9IDE7XG4gICAgICAgIE5lcHR1bmVzUHJpZGUubnAudHJpZ2dlcihcIm1hcF9yZWJ1aWxkXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkZWNDb21iYXRIYW5kaWNhcCgpIHtcbiAgICAgICAgY29tYmF0SGFuZGljYXAgLT0gMTtcbiAgICAgICAgTmVwdHVuZXNQcmlkZS5ucC50cmlnZ2VyKFwibWFwX3JlYnVpbGRcIik7XG4gICAgfVxuICAgIGRlZmluZUhvdGtleShcIi5cIiwgaW5jQ29tYmF0SGFuZGljYXAsIFwiQ2hhbmdlIGNvbWJhdCBjYWxjdWxhdGlvbiB0byBjcmVkaXQgeW91ciBlbmVtaWVzIHdpdGggKzEgd2VhcG9ucy4gVXNlZnVsIFwiICtcbiAgICAgICAgXCJpZiB5b3Ugc3VzcGVjdCB0aGV5IHdpbGwgaGF2ZSBhY2hpZXZlZCB0aGUgbmV4dCBsZXZlbCBvZiB0ZWNoIGJlZm9yZSBhIGJhdHRsZSB5b3UgYXJlIGludmVzdGlnYXRpbmcuXCIgK1xuICAgICAgICBcIjxwPkluIHRoZSBsb3dlciBsZWZ0IG9mIHRoZSBIVUQsIGFuIGluZGljYXRvciB3aWxsIGFwcGVhciByZW1pbmRpbmcgeW91IG9mIHRoZSB3ZWFwb25zIGFkanVzdG1lbnQuIElmIHRoZSBcIiArXG4gICAgICAgIFwiaW5kaWNhdG9yIGFscmVhZHkgc2hvd3MgYW4gYWR2YW50YWdlIGZvciBkZWZlbmRlcnMsIHRoaXMgaG90a2V5IHdpbGwgcmVkdWNlIHRoYXQgYWR2YW50YWdlIGZpcnN0IGJlZm9yZSBjcmVkaXRpbmcgXCIgK1xuICAgICAgICBcIndlYXBvbnMgdG8geW91ciBvcHBvbmVudC5cIik7XG4gICAgZGVmaW5lSG90a2V5KFwiLFwiLCBkZWNDb21iYXRIYW5kaWNhcCwgXCJDaGFuZ2UgY29tYmF0IGNhbGN1bGF0aW9uIHRvIGNyZWRpdCB5b3Vyc2VsZiB3aXRoICsxIHdlYXBvbnMuIFVzZWZ1bCBcIiArXG4gICAgICAgIFwid2hlbiB5b3Ugd2lsbCBoYXZlIGFjaGlldmVkIHRoZSBuZXh0IGxldmVsIG9mIHRlY2ggYmVmb3JlIGEgYmF0dGxlIHlvdSBhcmUgaW52ZXN0aWdhdGluZy5cIiArXG4gICAgICAgIFwiPHA+SW4gdGhlIGxvd2VyIGxlZnQgb2YgdGhlIEhVRCwgYW4gaW5kaWNhdG9yIHdpbGwgYXBwZWFyIHJlbWluZGluZyB5b3Ugb2YgdGhlIHdlYXBvbnMgYWRqdXN0bWVudC4gV2hlbiBcIiArXG4gICAgICAgIFwiaW5kaWNhdG9yIGFscmVhZHkgc2hvd3MgYW4gYWR2YW50YWdlIGZvciBhdHRhY2tlcnMsIHRoaXMgaG90a2V5IHdpbGwgcmVkdWNlIHRoYXQgYWR2YW50YWdlIGZpcnN0IGJlZm9yZSBjcmVkaXRpbmcgXCIgK1xuICAgICAgICBcIndlYXBvbnMgdG8geW91LlwiKTtcbiAgICBmdW5jdGlvbiBsb25nRmxlZXRSZXBvcnQoKSB7XG4gICAgICAgIHNldENsaXAoY29tYmF0T3V0Y29tZXMoKS5qb2luKFwiXFxuXCIpKTtcbiAgICB9XG4gICAgZGVmaW5lSG90a2V5KFwiJlwiLCBsb25nRmxlZXRSZXBvcnQsIFwiR2VuZXJhdGUgYSBkZXRhaWxlZCBmbGVldCByZXBvcnQgb24gYWxsIGNhcnJpZXJzIGluIHlvdXIgc2Nhbm5pbmcgcmFuZ2UsIGFuZCBjb3B5IGl0IHRvIHRoZSBjbGlwYm9hcmQuXCIgK1xuICAgICAgICBcIjxwPlRoaXMgc2FtZSByZXBvcnQgY2FuIGFsc28gYmUgdmlld2VkIHZpYSB0aGUgbWVudTsgZW50ZXIgdGhlIGFnZW50IGFuZCBjaG9vc2UgaXQgZnJvbSB0aGUgZHJvcGRvd24uXCIpO1xuICAgIGZ1bmN0aW9uIGJyaWVmRmxlZXRSZXBvcnQoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIGZsZWV0cyA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LmZsZWV0cztcbiAgICAgICAgdmFyIHN0YXJzID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5nYWxheHkuc3RhcnM7XG4gICAgICAgIHZhciBmbGlnaHRzID0gW107XG4gICAgICAgIGZvciAodmFyIGYgaW4gZmxlZXRzKSB7XG4gICAgICAgICAgICB2YXIgZmxlZXQgPSBmbGVldHNbZl07XG4gICAgICAgICAgICBpZiAoZmxlZXQubyAmJiBmbGVldC5vLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB2YXIgc3RvcF8yID0gZmxlZXQub1swXVsxXTtcbiAgICAgICAgICAgICAgICB2YXIgdGlja3MgPSBmbGVldC5ldGFGaXJzdDtcbiAgICAgICAgICAgICAgICB2YXIgc3Rhcm5hbWUgPSAoX2EgPSBzdGFyc1tzdG9wXzJdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubjtcbiAgICAgICAgICAgICAgICBpZiAoIXN0YXJuYW1lKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBmbGlnaHRzLnB1c2goW1xuICAgICAgICAgICAgICAgICAgICB0aWNrcyxcbiAgICAgICAgICAgICAgICAgICAgXCJbW3swfV1dIFtbezF9XV0gezJ9IOKGkiBbW3szfV1dIHs0fVwiLmZvcm1hdChmbGVldC5wdWlkLCBmbGVldC5uLCBmbGVldC5zdCwgc3RhcnNbc3RvcF8yXS5uLCBcIltbVGljayAjXCIuY29uY2F0KHRpY2tOdW1iZXIodGlja3MpLCBcIl1dXCIpKSxcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmbGlnaHRzID0gZmxpZ2h0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYVswXSAtIGJbMF07XG4gICAgICAgIH0pO1xuICAgICAgICBzZXRDbGlwKGZsaWdodHMubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4WzFdOyB9KS5qb2luKFwiXFxuXCIpKTtcbiAgICB9XG4gICAgZGVmaW5lSG90a2V5KFwiXlwiLCBicmllZkZsZWV0UmVwb3J0LCBcIkdlbmVyYXRlIGEgc3VtbWFyeSBmbGVldCByZXBvcnQgb24gYWxsIGNhcnJpZXJzIGluIHlvdXIgc2Nhbm5pbmcgcmFuZ2UsIGFuZCBjb3B5IGl0IHRvIHRoZSBjbGlwYm9hcmQuXCIgK1xuICAgICAgICBcIjxwPlRoaXMgc2FtZSByZXBvcnQgY2FuIGFsc28gYmUgdmlld2VkIHZpYSB0aGUgbWVudTsgZW50ZXIgdGhlIGFnZW50IGFuZCBjaG9vc2UgaXQgZnJvbSB0aGUgZHJvcGRvd24uXCIpO1xuICAgIGZ1bmN0aW9uIHNjcmVlbnNob3QoKSB7XG4gICAgICAgIHZhciBtYXAgPSBOZXB0dW5lc1ByaWRlLm5wdWkubWFwO1xuICAgICAgICBzZXRDbGlwKG1hcC5jYW52YXNbMF0udG9EYXRhVVJMKFwiaW1hZ2Uvd2VicFwiLCAwLjA1KSk7XG4gICAgfVxuICAgIGRlZmluZUhvdGtleShcIiNcIiwgc2NyZWVuc2hvdCwgXCJDcmVhdGUgYSBkYXRhOiBVUkwgb2YgdGhlIGN1cnJlbnQgbWFwLiBQYXN0ZSBpdCBpbnRvIGEgYnJvd3NlciB3aW5kb3cgdG8gdmlldy4gVGhpcyBpcyBsaWtlbHkgdG8gYmUgcmVtb3ZlZC5cIik7XG4gICAgdmFyIGhvbWVQbGFuZXRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcCA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LnBsYXllcnM7XG4gICAgICAgIHZhciBvdXRwdXQgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaSBpbiBwKSB7XG4gICAgICAgICAgICB2YXIgaG9tZSA9IHBbaV0uaG9tZTtcbiAgICAgICAgICAgIGlmIChob21lKSB7XG4gICAgICAgICAgICAgICAgb3V0cHV0LnB1c2goXCJQbGF5ZXIgI3swfSBpcyBbW3swfV1dIGhvbWUgezJ9IFtbezF9XV1cIi5mb3JtYXQoaSwgaG9tZS5uLCBpID09IGhvbWUucHVpZCA/IFwiaXNcIiA6IFwid2FzXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKFwiUGxheWVyICN7MH0gaXMgW1t7MH1dXSBob21lIHVua25vd25cIi5mb3JtYXQoaSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNldENsaXAob3V0cHV0LmpvaW4oXCJcXG5cIikpO1xuICAgIH07XG4gICAgZGVmaW5lSG90a2V5KFwiIVwiLCBob21lUGxhbmV0cywgXCJHZW5lcmF0ZSBhIHBsYXllciBzdW1tYXJ5IHJlcG9ydCBhbmQgY29weSBpdCB0byB0aGUgY2xpcGJvYXJkLlwiICtcbiAgICAgICAgXCI8cD5UaGlzIHNhbWUgcmVwb3J0IGNhbiBhbHNvIGJlIHZpZXdlZCB2aWEgdGhlIG1lbnU7IGVudGVyIHRoZSBhZ2VudCBhbmQgY2hvb3NlIGl0IGZyb20gdGhlIGRyb3Bkb3duLiBcIiArXG4gICAgICAgIFwiSXQgaXMgbW9zdCB1c2VmdWwgZm9yIGRpc2NvdmVyaW5nIHBsYXllciBudW1iZXJzIHNvIHRoYXQgeW91IGNhbiB3cml0ZSBbWyNdXSB0byByZWZlcmVuY2UgYSBwbGF5ZXIgaW4gbWFpbC5cIik7XG4gICAgdmFyIHBsYXllclNoZWV0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcCA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LnBsYXllcnM7XG4gICAgICAgIHZhciBvdXRwdXQgPSBbXTtcbiAgICAgICAgdmFyIGZpZWxkcyA9IFtcbiAgICAgICAgICAgIFwiYWxpYXNcIixcbiAgICAgICAgICAgIFwidG90YWxfc3RhcnNcIixcbiAgICAgICAgICAgIFwic2hpcHNQZXJUaWNrXCIsXG4gICAgICAgICAgICBcInRvdGFsX3N0cmVuZ3RoXCIsXG4gICAgICAgICAgICBcInRvdGFsX2Vjb25vbXlcIixcbiAgICAgICAgICAgIFwidG90YWxfZmxlZXRzXCIsXG4gICAgICAgICAgICBcInRvdGFsX2luZHVzdHJ5XCIsXG4gICAgICAgICAgICBcInRvdGFsX3NjaWVuY2VcIixcbiAgICAgICAgXTtcbiAgICAgICAgb3V0cHV0LnB1c2goZmllbGRzLmpvaW4oXCIsXCIpKTtcbiAgICAgICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgdmFyIHJlY29yZCA9IGZpZWxkcy5tYXAoZnVuY3Rpb24gKGYpIHsgcmV0dXJuIHBbaV1bZl07IH0pO1xuICAgICAgICAgICAgb3V0cHV0LnB1c2gocmVjb3JkLmpvaW4oXCIsXCIpKTtcbiAgICAgICAgfTtcbiAgICAgICAgZm9yICh2YXIgaSBpbiBwKSB7XG4gICAgICAgICAgICBfbG9vcF8xKGkpO1xuICAgICAgICB9XG4gICAgICAgIHNldENsaXAob3V0cHV0LmpvaW4oXCJcXG5cIikpO1xuICAgIH07XG4gICAgZGVmaW5lSG90a2V5KFwiJFwiLCBwbGF5ZXJTaGVldCwgXCJHZW5lcmF0ZSBhIHBsYXllciBzdW1tYXJ5IG1lYW4gdG8gYmUgbWFkZSBpbnRvIGEgc3ByZWFkc2hlZXQuXCIgK1xuICAgICAgICBcIjxwPlRoZSBjbGlwYm9hcmQgc2hvdWxkIGJlIHBhc3RlZCBpbnRvIGEgQ1NWIGFuZCB0aGVuIGltcG9ydGVkLlwiKTtcbiAgICB2YXIgZHJhd092ZXJsYXlTdHJpbmcgPSBmdW5jdGlvbiAoY29udGV4dCwgcywgeCwgeSwgZmdDb2xvcikge1xuICAgICAgICB2YXIgc3RyID0gQ3J1eC5mb3JtYXQocywge30pO1xuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IFwiIzAwMDAwMFwiO1xuICAgICAgICBmb3IgKHZhciBzbWVhciA9IDE7IHNtZWFyIDwgNDsgKytzbWVhcikge1xuICAgICAgICAgICAgY29udGV4dC5maWxsVGV4dChzdHIsIHggKyBzbWVhciwgeSArIHNtZWFyKTtcbiAgICAgICAgICAgIGNvbnRleHQuZmlsbFRleHQoc3RyLCB4IC0gc21lYXIsIHkgKyBzbWVhcik7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxUZXh0KHN0ciwgeCAtIHNtZWFyLCB5IC0gc21lYXIpO1xuICAgICAgICAgICAgY29udGV4dC5maWxsVGV4dChzdHIsIHggKyBzbWVhciwgeSAtIHNtZWFyKTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IGZnQ29sb3IgfHwgXCIjMDBmZjAwXCI7XG4gICAgICAgIGNvbnRleHQuZmlsbFRleHQoc3RyLCB4LCB5KTtcbiAgICB9O1xuICAgIHZhciBhbnlTdGFyQ2FuU2VlID0gZnVuY3Rpb24gKG93bmVyLCBmbGVldCkge1xuICAgICAgICB2YXIgc3RhcnMgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLmdhbGF4eS5zdGFycztcbiAgICAgICAgdmFyIHVuaXZlcnNlID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZTtcbiAgICAgICAgdmFyIHNjYW5SYW5nZSA9IHVuaXZlcnNlLmdhbGF4eS5wbGF5ZXJzW293bmVyXS50ZWNoLnNjYW5uaW5nLnZhbHVlO1xuICAgICAgICBmb3IgKHZhciBzIGluIHN0YXJzKSB7XG4gICAgICAgICAgICB2YXIgc3RhciA9IHN0YXJzW3NdO1xuICAgICAgICAgICAgaWYgKHN0YXIucHVpZCA9PSBvd25lcikge1xuICAgICAgICAgICAgICAgIHZhciBkaXN0YW5jZSA9IHVuaXZlcnNlLmRpc3RhbmNlKHN0YXIueCwgc3Rhci55LCBmbGVldC54LCBmbGVldC55KTtcbiAgICAgICAgICAgICAgICBpZiAoZGlzdGFuY2UgPD0gc2NhblJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICB2YXIgaG9va3NMb2FkZWQgPSBmYWxzZTtcbiAgICB2YXIgaGFuZGljYXBTdHJpbmcgPSBmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICAgIHZhciBwID0gcHJlZml4ICE9PSB1bmRlZmluZWQgPyBwcmVmaXggOiBjb21iYXRIYW5kaWNhcCA+IDAgPyBcIkVuZW15IFdTXCIgOiBcIk15IFdTXCI7XG4gICAgICAgIHJldHVybiBwICsgKGNvbWJhdEhhbmRpY2FwID4gMCA/IFwiK1wiIDogXCJcIikgKyBjb21iYXRIYW5kaWNhcDtcbiAgICB9O1xuICAgIHZhciB0ZXJyaXRvcnlPbiA9IHRydWU7XG4gICAgZnVuY3Rpb24gY3NzcnVsZXMoKSB7XG4gICAgICAgIHZhciBydWxlcyA9IHt9O1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciBjc3NSdWxlcyA9IGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldLmNzc1J1bGVzO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY3NzUnVsZXMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNzc1J1bGVzW2pdLnR5cGUgPT09IENTU1J1bGUuU1RZTEVfUlVMRSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0eWxlID0gY3NzUnVsZXNbal07XG4gICAgICAgICAgICAgICAgICAgICAgICBydWxlc1tzdHlsZS5zZWxlY3RvclRleHRdID0gc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcnVsZXM7XG4gICAgfVxuICAgIHZhciBjc3MgPSBjc3NydWxlcygpO1xuICAgIGZ1bmN0aW9uIHJlY29sb3JQbGF5ZXJzKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbWFwLCBvd25lcnNoaXBTcHJpdGVzLCBzcHJpdGVDb250ZXh0LCBwbGF5ZXJzLCBfYSwgX2IsIF9jLCBfaSwgcGssIHBsYXllciwgY29sb3IsIHBsYXllclNwcml0ZSwgcGxheWVyQ29udGV4dCwgdWlkLCBjb2wsIHJvdywgeCwgeSwgd2hpdGVQbGF5ZXIsIHBrLCBwbGF5ZXIsIHVpZCwgY29sLCByb3csIHgsIHk7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9mKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfZi5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXAgPSBOZXB0dW5lc1ByaWRlLm5wdWkubWFwO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3duZXJzaGlwU3ByaXRlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBvd25lcnNoaXBTcHJpdGVzLndpZHRoID0gb3duZXJzaGlwU3ByaXRlcy5oZWlnaHQgPSA2NCAqIDk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcHJpdGVDb250ZXh0ID0gb3duZXJzaGlwU3ByaXRlcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcHJpdGVDb250ZXh0LmRyYXdJbWFnZShtYXAuc3RhclNyYywgMCwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXJzID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5nYWxheHkucGxheWVycztcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hID0gcGxheWVycztcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKF9jIGluIF9hKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9iLnB1c2goX2MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2kgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2YubGFiZWwgPSAxO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShfaSA8IF9iLmxlbmd0aCkpIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MgPSBfYltfaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShfYyBpbiBfYSkpIHJldHVybiBbMyAvKmJyZWFrKi8sIDNdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGsgPSBfYztcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllciA9IHBsYXllcnNbcGtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3IgPSBwbGF5ZXIuY29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBwbGF5ZXIgdW5kZXJiYXIgaW4gcGxheWVyIGxpc3RcbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc1tcIi5iZ3BjX1wiLmNvbmNhdChwbGF5ZXIudWlkKV0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gY29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXJTcHJpdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyU3ByaXRlLndpZHRoID0gcGxheWVyU3ByaXRlLmhlaWdodCA9IDY0ICogOTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNvbnRleHQgPSBwbGF5ZXJTcHJpdGUuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ29udGV4dC5kcmF3SW1hZ2UobWFwLnN0YXJTcmMsIDAsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSBcInNvdXJjZS1pblwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ29udGV4dC5maWxsU3R5bGUgPSBjb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVpZCA9IHBsYXllci51aWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2wgPSBNYXRoLmZsb29yKHVpZCAvIDgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93ID0gTWF0aC5mbG9vcih1aWQgJSA4KSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICB4ID0gY29sICogNjQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB5ID0gcm93ICogNjQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXJDb250ZXh0LmZpbGxSZWN0KHgsIHksIDY0LCA2NCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGl0ZVBsYXllciA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpdGVQbGF5ZXIuc3JjID0gcGxheWVyU3ByaXRlLnRvRGF0YVVSTCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgd2hpdGVQbGF5ZXIuZGVjb2RlKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICBfZi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcHJpdGVDb250ZXh0LmNsZWFyUmVjdCh4LCB5LCA2NCwgNjQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3ByaXRlQ29udGV4dC5kcmF3SW1hZ2Uod2hpdGVQbGF5ZXIsIDAsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2YubGFiZWwgPSAzO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBfaSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgMV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcC5zdGFyU3JjLnNyYyA9IG93bmVyc2hpcFNwcml0ZXMudG9EYXRhVVJMKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHBrIGluIHBsYXllcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXIgPSBwbGF5ZXJzW3BrXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aWQgPSBwbGF5ZXIudWlkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbCA9IE1hdGguZmxvb3IodWlkIC8gOCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93ID0gTWF0aC5mbG9vcih1aWQgJSA4KSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeCA9IGNvbCAqIDY0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHkgPSByb3cgKiA2NDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBwbGF5ZXIgb3ZlcmxheSBvbiBhdmF0YXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NbXCIucGNpXzQ4X1wiLmNvbmNhdChwbGF5ZXIudWlkKV0uc3R5bGUuYmFja2dyb3VuZCA9IFwidXJsKFxcXCJcIi5jb25jYXQobWFwLnN0YXJTcmMuc3JjLCBcIlxcXCIpIC1cIikuY29uY2F0KHggKyA4LCBcInB4IC1cIikuY29uY2F0KHkgKyA4LCBcInB4XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZWNyZWF0aW5nIHN0YXIgYW5kIGZsZWV0IHNwcml0ZXNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBOZXB0dW5lc1ByaWRlLm5wLnRyaWdnZXIoXCJtYXBfcmVidWlsZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHZhciBsb2FkSG9va3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtYXAgPSBOZXB0dW5lc1ByaWRlLm5wdWkubWFwO1xuICAgICAgICB2YXIgc3VwZXJEcmF3U2Nhbm5pbmcgPSBtYXAuZHJhd1NjYW5uaW5nUmFuZ2U7XG4gICAgICAgIGZ1bmN0aW9uIGRyYXdEaXNjKHgsIHksIHNjYWxlLCByLCBjb2xvcikge1xuICAgICAgICAgICAgdmFyIGNvbnRleHQgPSBtYXAuY29udGV4dDtcbiAgICAgICAgICAgIGNvbnRleHQuc2F2ZSgpO1xuICAgICAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBjb2xvcjtcbiAgICAgICAgICAgIGNvbnRleHQudHJhbnNsYXRlKHgsIHkpO1xuICAgICAgICAgICAgY29udGV4dC5zY2FsZShzY2FsZSwgc2NhbGUpO1xuICAgICAgICAgICAgY29udGV4dC5tb3ZlVG8oMCwgMCk7XG4gICAgICAgICAgICBjb250ZXh0LmFyYygwLCAwLCByLCAwLCBNYXRoLlBJICogMik7XG4gICAgICAgICAgICBjb250ZXh0LnJlc3RvcmUoKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkcmF3U3RhclRlcnJpdG9yeShzdGFyLCBzY2FubmluZykge1xuICAgICAgICAgICAgdmFyIHggPSBtYXAud29ybGRUb1NjcmVlblgoc3Rhci54KTtcbiAgICAgICAgICAgIHZhciB5ID0gbWFwLndvcmxkVG9TY3JlZW5ZKHN0YXIueSk7XG4gICAgICAgICAgICB2YXIgc0ggPSBjb21iYXRIYW5kaWNhcDtcbiAgICAgICAgICAgIHZhciBseVRvTWFwID0gc3Rhci5wbGF5ZXIudGVjaC5zY2FubmluZy52YWx1ZSAvIChzdGFyLnBsYXllci50ZWNoLnNjYW5uaW5nLmxldmVsICsgMik7XG4gICAgICAgICAgICB2YXIgc2NhblJhbmdlID0gKHN0YXIucGxheWVyLnRlY2guc2Nhbm5pbmcubGV2ZWwgKyAyICsgc0gpICogbHlUb01hcDtcbiAgICAgICAgICAgIHZhciBzY2FsZSA9IChzY2FuUmFuZ2UgKiBtYXAuc2NhbGUgKiBtYXAucGl4ZWxSYXRpbykgLyAyNTA7XG4gICAgICAgICAgICB2YXIgciA9IChtYXAuc2Nhbm5pbmdSYW5nZVNwcml0ZS53aWR0aCAqIDAuOSkgLyAyO1xuICAgICAgICAgICAgdmFyIHBIID0gY29tYmF0SGFuZGljYXA7XG4gICAgICAgICAgICB2YXIgbHlyVG9NYXAgPSBzdGFyLnBsYXllci50ZWNoLnByb3B1bHNpb24udmFsdWUgL1xuICAgICAgICAgICAgICAgIChzdGFyLnBsYXllci50ZWNoLnByb3B1bHNpb24ubGV2ZWwgKyAzKTtcbiAgICAgICAgICAgIHZhciBmbGVldFJhbmdlID0gKHN0YXIucGxheWVyLnRlY2gucHJvcHVsc2lvbi5sZXZlbCArIDMgKyBwSCkgKiBseXJUb01hcDtcbiAgICAgICAgICAgIHZhciBmc2NhbGUgPSAoZmxlZXRSYW5nZSAqIG1hcC5zY2FsZSAqIG1hcC5waXhlbFJhdGlvKSAvIDI1MDtcbiAgICAgICAgICAgIHZhciBmciA9IChtYXAuZmxlZXRSYW5nZVNwcml0ZS53aWR0aCAqIDAuOSkgLyAyO1xuICAgICAgICAgICAgdmFyIGNvbG9yID0gXCJcIi5jb25jYXQoc3Rhci5wbGF5ZXIuY29sb3IsIFwiMzVcIik7XG4gICAgICAgICAgICBpZiAoc2Nhbm5pbmcpIHtcbiAgICAgICAgICAgICAgICBkcmF3RGlzYyh4LCB5LCBzY2FsZSwgciwgY29sb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZHJhd0Rpc2MoeCwgeSwgZnNjYWxlLCBmciwgY29sb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG1hcC5kcmF3U2Nhbm5pbmdSYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBzdXBlckRyYXdTY2FubmluZygpO1xuICAgICAgICAgICAgdmFyIHVuaXZlcnNlID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZTtcbiAgICAgICAgICAgIGlmICgoKF9hID0gdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGxheWVyKSAmJiB0ZXJyaXRvcnlPbikge1xuICAgICAgICAgICAgICAgIHZhciBjb250ZXh0ID0gbWFwLmNvbnRleHQ7XG4gICAgICAgICAgICAgICAgdmFyIHAgPSB1bml2ZXJzZS5zZWxlY3RlZFN0YXIucGxheWVyLnVpZDtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzY2FubmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FubmluZyA9ICFzY2FubmluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gdW5pdmVyc2UuZ2FsYXh5LnN0YXJzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXIgPSB1bml2ZXJzZS5nYWxheHkuc3RhcnNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKChfYiA9IHN0YXIucGxheWVyKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudWlkKSA9PSBwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYXdTdGFyVGVycml0b3J5KHN0YXIsIHNjYW5uaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29sb3IgPSBcIlwiLmNvbmNhdCh1bml2ZXJzZS5nYWxheHkucGxheWVyc1twXS5jb2xvciwgXCIzNVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gY29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGwoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKHNjYW5uaW5nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHZhciBzdXBlckRyYXdUZXh0ID0gTmVwdHVuZXNQcmlkZS5ucHVpLm1hcC5kcmF3VGV4dDtcbiAgICAgICAgTmVwdHVuZXNQcmlkZS5ucHVpLm1hcC5kcmF3VGV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB1bml2ZXJzZSA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2U7XG4gICAgICAgICAgICB2YXIgbWFwID0gTmVwdHVuZXNQcmlkZS5ucHVpLm1hcDtcbiAgICAgICAgICAgIHN1cGVyRHJhd1RleHQoKTtcbiAgICAgICAgICAgIG1hcC5jb250ZXh0LmZvbnQgPSBcIlwiLmNvbmNhdCgxNCAqIG1hcC5waXhlbFJhdGlvLCBcInB4IE9wZW5TYW5zUmVndWxhciwgc2Fucy1zZXJpZlwiKTtcbiAgICAgICAgICAgIG1hcC5jb250ZXh0LmZpbGxTdHlsZSA9IFwiI0ZGMDAwMFwiO1xuICAgICAgICAgICAgbWFwLmNvbnRleHQudGV4dEFsaWduID0gXCJyaWdodFwiO1xuICAgICAgICAgICAgbWFwLmNvbnRleHQudGV4dEJhc2VsaW5lID0gXCJtaWRkbGVcIjtcbiAgICAgICAgICAgIHZhciB2ID0gdmVyc2lvbjtcbiAgICAgICAgICAgIGlmIChjb21iYXRIYW5kaWNhcCAhPT0gMCkge1xuICAgICAgICAgICAgICAgIHYgPSBcIlwiLmNvbmNhdChoYW5kaWNhcFN0cmluZygpLCBcIiBcIikuY29uY2F0KHYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZHJhd092ZXJsYXlTdHJpbmcobWFwLmNvbnRleHQsIHYsIG1hcC52aWV3cG9ydFdpZHRoIC0gMTAsIG1hcC52aWV3cG9ydEhlaWdodCAtIDE2ICogbWFwLnBpeGVsUmF0aW8pO1xuICAgICAgICAgICAgaWYgKE5lcHR1bmVzUHJpZGUub3JpZ2luYWxQbGF5ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIE5lcHR1bmVzUHJpZGUub3JpZ2luYWxQbGF5ZXIgPSB1bml2ZXJzZS5wbGF5ZXIudWlkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKE5lcHR1bmVzUHJpZGUub3JpZ2luYWxQbGF5ZXIgIT09IHVuaXZlcnNlLnBsYXllci51aWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbiA9IHVuaXZlcnNlLmdhbGF4eS5wbGF5ZXJzW3VuaXZlcnNlLnBsYXllci51aWRdLmFsaWFzO1xuICAgICAgICAgICAgICAgIGRyYXdPdmVybGF5U3RyaW5nKG1hcC5jb250ZXh0LCBuLCBtYXAudmlld3BvcnRXaWR0aCAtIDEwMCwgbWFwLnZpZXdwb3J0SGVpZ2h0IC0gMiAqIDE2ICogbWFwLnBpeGVsUmF0aW8pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHVuaXZlcnNlLnNlbGVjdGVkRmxlZXQgJiYgdW5pdmVyc2Uuc2VsZWN0ZWRGbGVldC5wYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiU2VsZWN0ZWQgZmxlZXRcIiwgdW5pdmVyc2Uuc2VsZWN0ZWRGbGVldCk7XG4gICAgICAgICAgICAgICAgbWFwLmNvbnRleHQuZm9udCA9IFwiXCIuY29uY2F0KDE0ICogbWFwLnBpeGVsUmF0aW8sIFwicHggT3BlblNhbnNSZWd1bGFyLCBzYW5zLXNlcmlmXCIpO1xuICAgICAgICAgICAgICAgIG1hcC5jb250ZXh0LmZpbGxTdHlsZSA9IFwiI0ZGMDAwMFwiO1xuICAgICAgICAgICAgICAgIG1hcC5jb250ZXh0LnRleHRBbGlnbiA9IFwibGVmdFwiO1xuICAgICAgICAgICAgICAgIG1hcC5jb250ZXh0LnRleHRCYXNlbGluZSA9IFwibWlkZGxlXCI7XG4gICAgICAgICAgICAgICAgdmFyIGR5ID0gdW5pdmVyc2Uuc2VsZWN0ZWRGbGVldC55IC0gdW5pdmVyc2Uuc2VsZWN0ZWRGbGVldC5seTtcbiAgICAgICAgICAgICAgICB2YXIgZHggPSB1bml2ZXJzZS5zZWxlY3RlZEZsZWV0LnggLSB1bml2ZXJzZS5zZWxlY3RlZEZsZWV0Lmx4O1xuICAgICAgICAgICAgICAgIGR5ID0gdW5pdmVyc2Uuc2VsZWN0ZWRGbGVldC5wYXRoWzBdLnkgLSB1bml2ZXJzZS5zZWxlY3RlZEZsZWV0Lnk7XG4gICAgICAgICAgICAgICAgZHggPSB1bml2ZXJzZS5zZWxlY3RlZEZsZWV0LnBhdGhbMF0ueCAtIHVuaXZlcnNlLnNlbGVjdGVkRmxlZXQueDtcbiAgICAgICAgICAgICAgICB2YXIgbGluZUhlaWdodCA9IDE2ICogbWFwLnBpeGVsUmF0aW87XG4gICAgICAgICAgICAgICAgdmFyIHJhZGl1cyA9IDIgKiAwLjAyOCAqIG1hcC5zY2FsZSAqIG1hcC5waXhlbFJhdGlvO1xuICAgICAgICAgICAgICAgIHZhciBhbmdsZSA9IE1hdGguYXRhbihkeSAvIGR4KTtcbiAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0eCA9IHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKTtcbiAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0eSA9IHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKTtcbiAgICAgICAgICAgICAgICBpZiAob2Zmc2V0eCA+IDAgJiYgZHggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldHggKj0gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChvZmZzZXR5ID4gMCAmJiBkeSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0eSAqPSAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9mZnNldHggPCAwICYmIGR4IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBvZmZzZXR4ICo9IC0xO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAob2Zmc2V0eSA8IDAgJiYgZHkgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldHkgKj0gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbWJhdE91dGNvbWVzKCk7XG4gICAgICAgICAgICAgICAgdmFyIHMgPSBmbGVldE91dGNvbWVzW3VuaXZlcnNlLnNlbGVjdGVkRmxlZXQudWlkXS5ldGE7XG4gICAgICAgICAgICAgICAgdmFyIG8gPSBmbGVldE91dGNvbWVzW3VuaXZlcnNlLnNlbGVjdGVkRmxlZXQudWlkXS5vdXRjb21lO1xuICAgICAgICAgICAgICAgIHZhciB4ID0gbWFwLndvcmxkVG9TY3JlZW5YKHVuaXZlcnNlLnNlbGVjdGVkRmxlZXQueCkgKyBvZmZzZXR4O1xuICAgICAgICAgICAgICAgIHZhciB5ID0gbWFwLndvcmxkVG9TY3JlZW5ZKHVuaXZlcnNlLnNlbGVjdGVkRmxlZXQueSkgKyBvZmZzZXR5O1xuICAgICAgICAgICAgICAgIGlmIChvZmZzZXR4IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBtYXAuY29udGV4dC50ZXh0QWxpZ24gPSBcInJpZ2h0XCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRyYXdPdmVybGF5U3RyaW5nKG1hcC5jb250ZXh0LCBzLCB4LCB5KTtcbiAgICAgICAgICAgICAgICBkcmF3T3ZlcmxheVN0cmluZyhtYXAuY29udGV4dCwgbywgeCwgeSArIGxpbmVIZWlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFOZXB0dW5lc1ByaWRlLmdhbWVDb25maWcudHVybkJhc2VkICYmXG4gICAgICAgICAgICAgICAgdW5pdmVyc2UudGltZVRvVGljaygxKS5sZW5ndGggPCAzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxpbmVIZWlnaHQgPSAxNiAqIG1hcC5waXhlbFJhdGlvO1xuICAgICAgICAgICAgICAgIG1hcC5jb250ZXh0LmZvbnQgPSBcIlwiLmNvbmNhdCgxNCAqIG1hcC5waXhlbFJhdGlvLCBcInB4IE9wZW5TYW5zUmVndWxhciwgc2Fucy1zZXJpZlwiKTtcbiAgICAgICAgICAgICAgICBtYXAuY29udGV4dC5maWxsU3R5bGUgPSBcIiNGRjAwMDBcIjtcbiAgICAgICAgICAgICAgICBtYXAuY29udGV4dC50ZXh0QWxpZ24gPSBcImxlZnRcIjtcbiAgICAgICAgICAgICAgICBtYXAuY29udGV4dC50ZXh0QmFzZWxpbmUgPSBcIm1pZGRsZVwiO1xuICAgICAgICAgICAgICAgIHZhciBzID0gXCJUaWNrIDwgMTBzIGF3YXkhXCI7XG4gICAgICAgICAgICAgICAgaWYgKHVuaXZlcnNlLnRpbWVUb1RpY2soMSkgPT09IFwiMHNcIikge1xuICAgICAgICAgICAgICAgICAgICBzID0gXCJUaWNrIHBhc3NlZC4gQ2xpY2sgcHJvZHVjdGlvbiBjb3VudGRvd24gdG8gcmVmcmVzaC5cIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZHJhd092ZXJsYXlTdHJpbmcobWFwLmNvbnRleHQsIHMsIDEwMDAsIGxpbmVIZWlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHVuaXZlcnNlLnNlbGVjdGVkU3RhciAmJlxuICAgICAgICAgICAgICAgIHVuaXZlcnNlLnNlbGVjdGVkU3Rhci5wdWlkICE9IHVuaXZlcnNlLnBsYXllci51aWQgJiZcbiAgICAgICAgICAgICAgICB1bml2ZXJzZS5zZWxlY3RlZFN0YXIucHVpZCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAvLyBlbmVteSBzdGFyIHNlbGVjdGVkOyBzaG93IEhVRCBmb3Igc2Nhbm5pbmcgdmlzaWJpbGl0eVxuICAgICAgICAgICAgICAgIG1hcC5jb250ZXh0LnRleHRBbGlnbiA9IFwibGVmdFwiO1xuICAgICAgICAgICAgICAgIG1hcC5jb250ZXh0LnRleHRCYXNlbGluZSA9IFwibWlkZGxlXCI7XG4gICAgICAgICAgICAgICAgdmFyIHhPZmZzZXQgPSAyNiAqIG1hcC5waXhlbFJhdGlvO1xuICAgICAgICAgICAgICAgIC8vbWFwLmNvbnRleHQudHJhbnNsYXRlKHhPZmZzZXQsIDApO1xuICAgICAgICAgICAgICAgIHZhciBmbGVldHMgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLmdhbGF4eS5mbGVldHM7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgZiBpbiBmbGVldHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZsZWV0ID0gZmxlZXRzW2ZdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmxlZXQucHVpZCA9PT0gdW5pdmVyc2UucGxheWVyLnVpZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGR4ID0gdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLnggLSBmbGVldC54O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGR5ID0gdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLnkgLSBmbGVldC55O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvZmZzZXR4ID0geE9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvZmZzZXR5ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB4ID0gbWFwLndvcmxkVG9TY3JlZW5YKGZsZWV0LngpICsgb2Zmc2V0eDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB5ID0gbWFwLndvcmxkVG9TY3JlZW5ZKGZsZWV0LnkpICsgb2Zmc2V0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5pdmVyc2UuZ2FsYXh5LnBsYXllcnNbdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLnB1aWRdLnRlY2guc2Nhbm5pbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZsZWV0LnBhdGggJiYgZmxlZXQucGF0aC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR4ID0gZmxlZXQucGF0aFswXS54IC0gdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLng7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR5ID0gZmxlZXQucGF0aFswXS55IC0gdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLnk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RhbmNlID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVuaXZlcnNlLmdhbGF4eS5wbGF5ZXJzW3VuaXZlcnNlLnNlbGVjdGVkU3Rhci5wdWlkXS50ZWNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNjYW5uaW5nLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RlcFJhZGl1cyA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LmZsZWV0X3NwZWVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZsZWV0LndhcnBTcGVlZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwUmFkaXVzICo9IDM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkeCA9IGZsZWV0LnggLSBmbGVldC5wYXRoWzBdLng7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkeSA9IGZsZWV0LnkgLSBmbGVldC5wYXRoWzBdLnk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYW5nbGUgPSBNYXRoLmF0YW4oZHkgLyBkeCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RlcHggPSBzdGVwUmFkaXVzICogTWF0aC5jb3MoYW5nbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0ZXB5ID0gc3RlcFJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGVweCA+IDAgJiYgZHggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcHggKj0gLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RlcHkgPiAwICYmIGR5ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXB5ICo9IC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0ZXB4IDwgMCAmJiBkeCA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVweCAqPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGVweSA8IDAgJiYgZHkgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcHkgKj0gLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGlja3MgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB4XzEgPSB0aWNrcyAqIHN0ZXB4ICsgTnVtYmVyKGZsZWV0LngpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB5XzEgPSB0aWNrcyAqIHN0ZXB5ICsgTnVtYmVyKGZsZWV0LnkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbGV0IHN4ID0gbWFwLndvcmxkVG9TY3JlZW5YKHgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbGV0IHN5ID0gbWFwLndvcmxkVG9TY3JlZW5ZKHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR4ID0geF8xIC0gdW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLng7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHkgPSB5XzEgLSB1bml2ZXJzZS5zZWxlY3RlZFN0YXIueTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZSA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhkaXN0YW5jZSwgeCwgeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9kcmF3T3ZlcmxheVN0cmluZyhtYXAuY29udGV4dCwgXCJvXCIsIHN4LCBzeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlja3MgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKGRpc3RhbmNlID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bml2ZXJzZS5nYWxheHkucGxheWVyc1t1bml2ZXJzZS5zZWxlY3RlZFN0YXIucHVpZF0udGVjaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2Nhbm5pbmcudmFsdWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrcyA8PSBmbGVldC5ldGFGaXJzdCArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlja3MgLT0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2aXNDb2xvciA9IFwiIzAwZmYwMFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFueVN0YXJDYW5TZWUodW5pdmVyc2Uuc2VsZWN0ZWRTdGFyLnB1aWQsIGZsZWV0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc0NvbG9yID0gXCIjODg4ODg4XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmF3T3ZlcmxheVN0cmluZyhtYXAuY29udGV4dCwgXCJTY2FuIFtbVGljayAjXCIuY29uY2F0KHRpY2tOdW1iZXIodGlja3MpLCBcIl1dXCIpLCB4LCB5LCB2aXNDb2xvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy9tYXAuY29udGV4dC50cmFuc2xhdGUoLXhPZmZzZXQsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHVuaXZlcnNlLnJ1bGVyLnN0YXJzLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgICAgICAgICAgdmFyIHAxID0gdW5pdmVyc2UucnVsZXIuc3RhcnNbMF0ucHVpZDtcbiAgICAgICAgICAgICAgICB2YXIgcDIgPSB1bml2ZXJzZS5ydWxlci5zdGFyc1sxXS5wdWlkO1xuICAgICAgICAgICAgICAgIGlmIChwMSAhPT0gcDIgJiYgcDEgIT09IC0xICYmIHAyICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwidHdvIHN0YXIgcnVsZXJcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBDcnV4LmZvcm1hdCA9IGZ1bmN0aW9uIChzLCB0ZW1wbGF0ZURhdGEpIHtcbiAgICAgICAgICAgIGlmICghcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBcImVycm9yXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgICAgIHZhciBmcDtcbiAgICAgICAgICAgIHZhciBzcDtcbiAgICAgICAgICAgIHZhciBzdWI7XG4gICAgICAgICAgICB2YXIgcGF0dGVybjtcbiAgICAgICAgICAgIGkgPSAwO1xuICAgICAgICAgICAgZnAgPSAwO1xuICAgICAgICAgICAgc3AgPSAwO1xuICAgICAgICAgICAgc3ViID0gXCJcIjtcbiAgICAgICAgICAgIHBhdHRlcm4gPSBcIlwiO1xuICAgICAgICAgICAgLy8gbG9vayBmb3Igc3RhbmRhcmQgcGF0dGVybnNcbiAgICAgICAgICAgIHdoaWxlIChmcCA+PSAwICYmIGkgPCAxMDAwKSB7XG4gICAgICAgICAgICAgICAgaSA9IGkgKyAxO1xuICAgICAgICAgICAgICAgIGZwID0gcy5pbmRleE9mKFwiW1tcIik7XG4gICAgICAgICAgICAgICAgc3AgPSBzLmluZGV4T2YoXCJdXVwiKTtcbiAgICAgICAgICAgICAgICBpZiAoZnAgPT09IC0xKVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBzdWIgPSBzLnNsaWNlKGZwICsgMiwgc3ApO1xuICAgICAgICAgICAgICAgIHBhdHRlcm4gPSBcIltbXCIuY29uY2F0KHN1YiwgXCJdXVwiKTtcbiAgICAgICAgICAgICAgICBpZiAodGVtcGxhdGVEYXRhW3N1Yl0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBzID0gcy5yZXBsYWNlKHBhdHRlcm4sIHRlbXBsYXRlRGF0YVtzdWJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoL15UaWNrICNcXGRcXGQqJC8udGVzdChzdWIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzcGxpdCA9IHN1Yi5zcGxpdChcIiNcIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0aWNrID0gcGFyc2VJbnQoc3BsaXRbMV0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVsYXRpdmVUaWNrID0gdGljayAtIE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LnRpY2s7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtc3BsdXMgPSBtc1RvVGljayhyZWxhdGl2ZVRpY2ssIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgcyA9IHMucmVwbGFjZShwYXR0ZXJuLCBDcnV4LmZvcm1hdFRpbWUobXNwbHVzLCB0cnVlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNhZmVfaW1hZ2VfdXJsKHN1YikpIHtcbiAgICAgICAgICAgICAgICAgICAgcyA9IHMucmVwbGFjZShwYXR0ZXJuLCBcIjxpbWcgd2lkdGg9XFxcIjEwMCVcXFwiIHNyYz0nXCIuY29uY2F0KHN1YiwgXCInIC8+XCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoL15hcGk6XFx3ezZ9JC8udGVzdChzdWIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhcGlMaW5rID0gXCI8YSBvbkNsaWNrPSdDcnV4LmNydXgudHJpZ2dlcihcXFwic3dpdGNoX3VzZXJfYXBpXFxcIiwgXFxcIlwiLmNvbmNhdChzdWIsIFwiXFxcIiknPiBWaWV3IGFzIFwiKS5jb25jYXQoc3ViLCBcIjwvYT5cIik7XG4gICAgICAgICAgICAgICAgICAgIGFwaUxpbmsgKz0gXCIgb3IgPGEgb25DbGljaz0nQ3J1eC5jcnV4LnRyaWdnZXIoXFxcIm1lcmdlX3VzZXJfYXBpXFxcIiwgXFxcIlwiLmNvbmNhdChzdWIsIFwiXFxcIiknPiBNZXJnZSBcIikuY29uY2F0KHN1YiwgXCI8L2E+XCIpO1xuICAgICAgICAgICAgICAgICAgICBzID0gcy5yZXBsYWNlKHBhdHRlcm4sIGFwaUxpbmspO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzdWIuc3RhcnRzV2l0aChcImRhdGE6XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHMgPSBzLnJlcGxhY2UocGF0dGVybiwgXCI8ZGl2IHdpZHRoPVxcXCIxMDAlXFxcIiBjbGFzcz1cXFwic2NyZWVuc2hvdFxcXCI+PGltZyBjbGFzcz1cXFwic2NyZWVuc2hvdFxcXCIgc3JjPVxcXCJcIi5jb25jYXQoc3ViLCBcIlxcXCIvPjwvZGl2PlwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzID0gcy5yZXBsYWNlKHBhdHRlcm4sIFwiKFwiLmNvbmNhdChzdWIsIFwiKVwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHM7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBucHVpID0gTmVwdHVuZXNQcmlkZS5ucHVpO1xuICAgICAgICBOZXB0dW5lc1ByaWRlLnRlbXBsYXRlc1tcIm5fcF9hXCJdID0gXCJOUCBBZ2VudFwiO1xuICAgICAgICBOZXB0dW5lc1ByaWRlLnRlbXBsYXRlc1tcIm5wYV9yZXBvcnRfdHlwZVwiXSA9IFwiUmVwb3J0IFR5cGU6XCI7XG4gICAgICAgIE5lcHR1bmVzUHJpZGUudGVtcGxhdGVzW1wibnBhX3Bhc3RlXCJdID0gXCJJbnRlbFwiO1xuICAgICAgICB2YXIgc3VwZXJOZXdNZXNzYWdlQ29tbWVudEJveCA9IG5wdWkuTmV3TWVzc2FnZUNvbW1lbnRCb3g7XG4gICAgICAgIHZhciByZXBvcnRQYXN0ZUhvb2sgPSBmdW5jdGlvbiAoX2UsIF9kKSB7XG4gICAgICAgICAgICB2YXIgaW5ib3ggPSBOZXB0dW5lc1ByaWRlLmluYm94O1xuICAgICAgICAgICAgaW5ib3guY29tbWVudERyYWZ0c1tpbmJveC5zZWxlY3RlZE1lc3NhZ2Uua2V5XSArPSBcIlxcblwiICsgZ2V0Q2xpcCgpO1xuICAgICAgICAgICAgaW5ib3gudHJpZ2dlcihcInNob3dfc2NyZWVuXCIsIFwiZGlwbG9tYWN5X2RldGFpbFwiKTtcbiAgICAgICAgfTtcbiAgICAgICAgTmVwdHVuZXNQcmlkZS5ucC5vbihcInBhc3RlX3JlcG9ydFwiLCByZXBvcnRQYXN0ZUhvb2spO1xuICAgICAgICBucHVpLk5ld01lc3NhZ2VDb21tZW50Qm94ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHdpZGdldCA9IHN1cGVyTmV3TWVzc2FnZUNvbW1lbnRCb3goKTtcbiAgICAgICAgICAgIHZhciByZXBvcnRCdXR0b24gPSBDcnV4LkJ1dHRvbihcIm5wYV9wYXN0ZVwiLCBcInBhc3RlX3JlcG9ydFwiLCBcImludGVsXCIpLmdyaWQoMTAsIDEyLCA0LCAzKTtcbiAgICAgICAgICAgIHJlcG9ydEJ1dHRvbi5yb29zdCh3aWRnZXQpO1xuICAgICAgICAgICAgcmV0dXJuIHdpZGdldDtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIG5wYVJlcG9ydHMgPSBmdW5jdGlvbiAoX3NjcmVlbkNvbmZpZykge1xuICAgICAgICAgICAgbnB1aS5vbkhpZGVTY3JlZW4obnVsbCwgdHJ1ZSk7XG4gICAgICAgICAgICBucHVpLm9uSGlkZVNlbGVjdGlvbk1lbnUoKTtcbiAgICAgICAgICAgIG5wdWkudHJpZ2dlcihcImhpZGVfc2lkZV9tZW51XCIpO1xuICAgICAgICAgICAgbnB1aS50cmlnZ2VyKFwicmVzZXRfZWRpdF9tb2RlXCIpO1xuICAgICAgICAgICAgdmFyIHJlcG9ydFNjcmVlbiA9IG5wdWkuU2NyZWVuKFwibl9wX2FcIik7XG4gICAgICAgICAgICBDcnV4LlRleHQoXCJcIiwgXCJyZWwgcGFkMTIgdHh0X2NlbnRlciBjb2xfYmxhY2sgIHNlY3Rpb25fdGl0bGVcIilcbiAgICAgICAgICAgICAgICAucmF3SFRNTCh0aXRsZSlcbiAgICAgICAgICAgICAgICAucm9vc3QocmVwb3J0U2NyZWVuKTtcbiAgICAgICAgICAgIHZhciByZXBvcnQgPSBDcnV4LldpZGdldChcInJlbCAgY29sX2FjY2VudFwiKS5zaXplKDQ4MCwgNDgpO1xuICAgICAgICAgICAgdmFyIG91dHB1dCA9IENydXguV2lkZ2V0KFwicmVsXCIpO1xuICAgICAgICAgICAgQ3J1eC5UZXh0KFwibnBhX3JlcG9ydF90eXBlXCIsIFwicGFkMTJcIikucm9vc3QocmVwb3J0KTtcbiAgICAgICAgICAgIHZhciBzZWxlY3Rpb25zID0ge1xuICAgICAgICAgICAgICAgIHBsYW5ldHM6IFwiSG9tZSBQbGFuZXRzXCIsXG4gICAgICAgICAgICAgICAgZmxlZXRzOiBcIkZsZWV0cyAoc2hvcnQpXCIsXG4gICAgICAgICAgICAgICAgY29tYmF0czogXCJGbGVldHMgKGxvbmcpXCIsXG4gICAgICAgICAgICAgICAgc3RhcnM6IFwiU3RhcnNcIixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBDcnV4LkRyb3BEb3duKFwiXCIsIHNlbGVjdGlvbnMsIFwiZXhlY19yZXBvcnRcIilcbiAgICAgICAgICAgICAgICAuZ3JpZCgxNSwgMCwgMTUsIDMpXG4gICAgICAgICAgICAgICAgLnJvb3N0KHJlcG9ydCk7XG4gICAgICAgICAgICB2YXIgdGV4dCA9IENydXguVGV4dChcIlwiLCBcInBhZDEyIHJlbCB0eHRfc2VsZWN0YWJsZVwiKS5zaXplKDQzMikucG9zKDQ4KVxuICAgICAgICAgICAgICAgIC5yYXdIVE1MKFwiQ2hvb3NlIGEgcmVwb3J0IGZyb20gdGhlIGRyb3Bkb3duLlwiKTtcbiAgICAgICAgICAgIHRleHQucm9vc3Qob3V0cHV0KTtcbiAgICAgICAgICAgIHJlcG9ydC5yb29zdChyZXBvcnRTY3JlZW4pO1xuICAgICAgICAgICAgb3V0cHV0LnJvb3N0KHJlcG9ydFNjcmVlbik7XG4gICAgICAgICAgICB2YXIgcmVwb3J0SG9vayA9IGZ1bmN0aW9uIChlLCBkKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFeGVjdXRlIHJlcG9ydFwiLCBlLCBkKTtcbiAgICAgICAgICAgICAgICBpZiAoZCA9PT0gXCJwbGFuZXRzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaG9tZVBsYW5ldHMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZCA9PT0gXCJmbGVldHNcIikge1xuICAgICAgICAgICAgICAgICAgICBicmllZkZsZWV0UmVwb3J0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGQgPT09IFwiY29tYmF0c1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvbmdGbGVldFJlcG9ydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChkID09PSBcInN0YXJzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhclJlcG9ydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgaHRtbCA9IGdldENsaXAoKS5yZXBsYWNlKC9cXG4vZywgXCI8YnI+XCIpO1xuICAgICAgICAgICAgICAgIGh0bWwgPSBOZXB0dW5lc1ByaWRlLmluYm94Lmh5cGVybGlua01lc3NhZ2UoaHRtbCk7XG4gICAgICAgICAgICAgICAgdGV4dC5yYXdIVE1MKGh0bWwpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlcG9ydEhvb2soMCwgXCJwbGFuZXRzXCIpO1xuICAgICAgICAgICAgTmVwdHVuZXNQcmlkZS5ucC5vbihcImV4ZWNfcmVwb3J0XCIsIHJlcG9ydEhvb2spO1xuICAgICAgICAgICAgbnB1aS5hY3RpdmVTY3JlZW4gPSByZXBvcnRTY3JlZW47XG4gICAgICAgICAgICByZXBvcnRTY3JlZW4ucm9vc3QobnB1aS5zY3JlZW5Db250YWluZXIpO1xuICAgICAgICAgICAgbnB1aS5sYXlvdXRFbGVtZW50KHJlcG9ydFNjcmVlbik7XG4gICAgICAgIH07XG4gICAgICAgIE5lcHR1bmVzUHJpZGUubnAub24oXCJ0cmlnZ2VyX25wYVwiLCBucGFSZXBvcnRzKTtcbiAgICAgICAgbnB1aS5TaWRlTWVudUl0ZW0oXCJpY29uLWV5ZVwiLCBcIm5fcF9hXCIsIFwidHJpZ2dlcl9ucGFcIikucm9vc3QobnB1aS5zaWRlTWVudSk7XG4gICAgICAgIHZhciBzdXBlckZvcm1hdFRpbWUgPSBDcnV4LmZvcm1hdFRpbWU7XG4gICAgICAgIHZhciB0aW1lT3B0aW9ucyA9IFtcInJlbGF0aXZlXCIsIFwiZXRhXCIsIFwidGlja3JlbFwiLCBcInRpY2tcIl07XG4gICAgICAgIHZhciByZWxhdGl2ZVRpbWVzID0gXCJldGFcIjtcbiAgICAgICAgQ3J1eC5mb3JtYXRUaW1lID0gZnVuY3Rpb24gKG1zLCBzaG93TWludXRlcywgc2hvd1NlY29uZHMpIHtcbiAgICAgICAgICAgIGlmIChyZWxhdGl2ZVRpbWVzID09PSBcInJlbGF0aXZlXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3VwZXJGb3JtYXRUaW1lKG1zLCBzaG93TWludXRlcywgc2hvd1NlY29uZHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVsYXRpdmVUaW1lcyA9PT0gXCJldGFcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBtc1RvRXRhU3RyaW5nKG1zLCBcIlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJlbGF0aXZlVGltZXMgPT09IFwidGlja1wiKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJhdGUgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLmdhbGF4eS50aWNrX3JhdGUgKiA2MCAqIDEwMDA7XG4gICAgICAgICAgICAgICAgdmFyIHRpY2sgPSBtcyAvIHJhdGU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiVGljayAjXCIuY29uY2F0KE1hdGguY2VpbCh0aWNrKSArIE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LnRpY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVsYXRpdmVUaW1lcyA9PT0gXCJ0aWNrcmVsXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmF0ZSA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LnRpY2tfcmF0ZSAqIDYwICogMTAwMDtcbiAgICAgICAgICAgICAgICB2YXIgdGljayA9IG1zIC8gcmF0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQoTWF0aC5jZWlsKHRpY2spLCBcIiB0aWNrc1wiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHRvZ2dsZVJlbGF0aXZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGkgPSAodGltZU9wdGlvbnMuaW5kZXhPZihyZWxhdGl2ZVRpbWVzKSArIDEpICUgdGltZU9wdGlvbnMubGVuZ3RoO1xuICAgICAgICAgICAgcmVsYXRpdmVUaW1lcyA9IHRpbWVPcHRpb25zW2ldO1xuICAgICAgICAgICAgTmVwdHVuZXNQcmlkZS5ucC50cmlnZ2VyKFwicmVmcmVzaF9pbnRlcmZhY2VcIik7XG4gICAgICAgICAgICBOZXB0dW5lc1ByaWRlLm5wLnRyaWdnZXIoXCJtYXBfcmVidWlsZFwiKTtcbiAgICAgICAgfTtcbiAgICAgICAgZGVmaW5lSG90a2V5KFwiJVwiLCB0b2dnbGVSZWxhdGl2ZSwgXCJDaGFuZ2UgdGhlIGRpc3BsYXkgb2YgRVRBcyBmcm9tIHJlbGF0aXZlIHRpbWVzIHRvIGFic29sdXRlIGNsb2NrIHRpbWVzLiBNYWtlcyBwcmVkaWN0aW5nIFwiICtcbiAgICAgICAgICAgIFwiaW1wb3J0YW50IHRpbWVzIG9mIGRheSB0byBzaWduIGluIGFuZCBjaGVjayBtdWNoIGVhc2llciBlc3BlY2lhbGx5IGZvciBtdWx0aS1sZWcgZmxlZXQgbW92ZW1lbnRzLiBTb21ldGltZXMgeW91IFwiICtcbiAgICAgICAgICAgIFwid2lsbCBuZWVkIHRvIHJlZnJlc2ggdGhlIGRpc3BsYXkgdG8gc2VlIHRoZSBkaWZmZXJlbnQgdGltZXMuXCIpO1xuICAgICAgICBpZiAod2luZG93LmNocm9tZSkge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENydXgsIFwidG91Y2hFbmFibGVkXCIsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmYWxzZTsgfSB9KTtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOZXB0dW5lc1ByaWRlLm5wdWkubWFwLCBcImlnbm9yZU1vdXNlRXZlbnRzXCIsIHtcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhbHNlOyB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaG9va3NMb2FkZWQgPSB0cnVlO1xuICAgIH07XG4gICAgdmFyIHRvZ2dsZVRlcnJpdG9yeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGVycml0b3J5T24gPSAhdGVycml0b3J5T247XG4gICAgICAgIE5lcHR1bmVzUHJpZGUubnAudHJpZ2dlcihcIm1hcF9yZWJ1aWxkXCIpO1xuICAgIH07XG4gICAgZGVmaW5lSG90a2V5KFwiKVwiLCB0b2dnbGVUZXJyaXRvcnksIFwiVG9nZ2xlIHRoZSB0ZXJyaXRvcnkgZGlzcGxheS4gUmFuZ2UgYW5kIHNjYW5uaW5nIGZvciBhbGwgc3RhcnMgb2YgdGhlIHNlbGVjdGVkIGVtcGlyZSBhcmUgc2hvd24uXCIpO1xuICAgIHZhciB0b2dnbGVXaGl0ZVBsYXllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBsYXllciA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UucGxheWVyO1xuICAgICAgICBpZiAoTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5wbGF5ZXIub3JpZ0NvbG9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHBsYXllci5vcmlnQ29sb3IgPSBwbGF5ZXIuY29sb3I7XG4gICAgICAgICAgICBwbGF5ZXIuY29sb3IgPSBcIiNmZmZmZmZcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciB0bXAgPSBwbGF5ZXIub3JpZ0NvbG9yO1xuICAgICAgICAgICAgcGxheWVyLm9yaWdDb2xvciA9IHBsYXllci5jb2xvcjtcbiAgICAgICAgICAgIHBsYXllci5jb2xvciA9IHRtcDtcbiAgICAgICAgfVxuICAgICAgICByZWNvbG9yUGxheWVycygpO1xuICAgIH07XG4gICAgZGVmaW5lSG90a2V5KFwid1wiLCB0b2dnbGVXaGl0ZVBsYXllciwgXCJUb2dnbGUgYmV0d2VlbiBteSBjb2xvciBhbmQgd2hpdGUgb24gdGhlIG1hcCBkaXNwbGF5LlwiKTtcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoKChfYSA9IE5lcHR1bmVzUHJpZGUudW5pdmVyc2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5nYWxheHkpICYmIE5lcHR1bmVzUHJpZGUubnB1aS5tYXApIHtcbiAgICAgICAgICAgIGxpbmtGbGVldHMoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRmxlZXQgbGlua2luZyBjb21wbGV0ZS5cIik7XG4gICAgICAgICAgICBpZiAoIWhvb2tzTG9hZGVkKSB7XG4gICAgICAgICAgICAgICAgbG9hZEhvb2tzKCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJIVUQgc2V0dXAgY29tcGxldGUuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJIVUQgc2V0dXAgYWxyZWFkeSBkb25lOyBza2lwcGluZy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZWNvbG9yUGxheWVycygpO1xuICAgICAgICAgICAgaG9tZVBsYW5ldHMoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR2FtZSBub3QgZnVsbHkgaW5pdGlhbGl6ZWQgeWV0OyB3YWl0LlwiLCBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZGVmaW5lSG90a2V5KFwiQFwiLCBpbml0LCBcIlJlaW5pdGlhbGl6ZSBOZXB0dW5lJ3MgUHJpZGUgQWdlbnQuIFVzZSB0aGUgQCBob3RrZXkgaWYgdGhlIHZlcnNpb24gaXMgbm90IGJlaW5nIHNob3duIG9uIHRoZSBtYXAgYWZ0ZXIgZHJhZ2dpbmcuXCIpO1xuICAgIGlmICgoKF9hID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmdhbGF4eSkgJiYgTmVwdHVuZXNQcmlkZS5ucHVpLm1hcCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlVuaXZlcnNlIGFscmVhZHkgbG9hZGVkLiBIeXBlcmxpbmsgZmxlZXRzICYgbG9hZCBob29rcy5cIik7XG4gICAgICAgIGluaXQoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiVW5pdmVyc2Ugbm90IGxvYWRlZC4gSG9vayBvblNlcnZlclJlc3BvbnNlLlwiKTtcbiAgICAgICAgdmFyIHN1cGVyT25TZXJ2ZXJSZXNwb25zZV8xID0gTmVwdHVuZXNQcmlkZS5ucC5vblNlcnZlclJlc3BvbnNlO1xuICAgICAgICBOZXB0dW5lc1ByaWRlLm5wLm9uU2VydmVyUmVzcG9uc2UgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHN1cGVyT25TZXJ2ZXJSZXNwb25zZV8xKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5ldmVudCA9PT0gXCJvcmRlcjpwbGF5ZXJfYWNoaWV2ZW1lbnRzXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkluaXRpYWwgbG9hZCBjb21wbGV0ZS4gUmVpbnN0YWxsLlwiKTtcbiAgICAgICAgICAgICAgICBpbml0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXNwb25zZS5ldmVudCA9PT0gXCJvcmRlcjpmdWxsX3VuaXZlcnNlXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlVuaXZlcnNlIHJlY2VpdmVkLiBSZWluc3RhbGwuXCIpO1xuICAgICAgICAgICAgICAgIE5lcHR1bmVzUHJpZGUub3JpZ2luYWxQbGF5ZXIgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLnBsYXllci51aWQ7XG4gICAgICAgICAgICAgICAgaW5pdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoIWhvb2tzTG9hZGVkICYmIE5lcHR1bmVzUHJpZGUubnB1aS5tYXApIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkhvb2tzIG5lZWQgbG9hZGluZyBhbmQgbWFwIGlzIHJlYWR5LiBSZWluc3RhbGwuXCIpO1xuICAgICAgICAgICAgICAgIGluaXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgdmFyIG90aGVyVXNlckNvZGUgPSB1bmRlZmluZWQ7XG4gICAgdmFyIGdhbWUgPSBOZXB0dW5lc1ByaWRlLmdhbWVOdW1iZXI7XG4gICAgdmFyIHN3aXRjaFVzZXIgPSBmdW5jdGlvbiAoX2V2ZW50LCBkYXRhKSB7XG4gICAgICAgIGlmIChOZXB0dW5lc1ByaWRlLm9yaWdpbmFsUGxheWVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIE5lcHR1bmVzUHJpZGUub3JpZ2luYWxQbGF5ZXIgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLnBsYXllci51aWQ7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNvZGUgPSAoZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhLnNwbGl0KFwiOlwiKVsxXSkgfHwgb3RoZXJVc2VyQ29kZTtcbiAgICAgICAgb3RoZXJVc2VyQ29kZSA9IGNvZGU7XG4gICAgICAgIGlmIChvdGhlclVzZXJDb2RlKSB7XG4gICAgICAgICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICAgICAgICAgIGdhbWVfbnVtYmVyOiBnYW1lLFxuICAgICAgICAgICAgICAgIGFwaV92ZXJzaW9uOiBcIjAuMVwiLFxuICAgICAgICAgICAgICAgIGNvZGU6IG90aGVyVXNlckNvZGUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIGVnZ2VycyA9IGpRdWVyeS5hamF4KHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9ucC5pcm9uaGVsbWV0LmNvbS9hcGlcIixcbiAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGF0YTogcGFyYW1zLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgTmVwdHVuZXNQcmlkZS5ucC5vbkZ1bGxVbml2ZXJzZShudWxsLCBlZ2dlcnMucmVzcG9uc2VKU09OLnNjYW5uaW5nX2RhdGEpO1xuICAgICAgICAgICAgTmVwdHVuZXNQcmlkZS5ucHVpLm9uSGlkZVNjcmVlbihudWxsLCB0cnVlKTtcbiAgICAgICAgICAgIE5lcHR1bmVzUHJpZGUubnAudHJpZ2dlcihcInNlbGVjdF9wbGF5ZXJcIiwgW1xuICAgICAgICAgICAgICAgIE5lcHR1bmVzUHJpZGUudW5pdmVyc2UucGxheWVyLnVpZCxcbiAgICAgICAgICAgICAgICB0cnVlLFxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICBpbml0KCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBtZXJnZVVzZXIgPSBmdW5jdGlvbiAoX2V2ZW50LCBkYXRhKSB7XG4gICAgICAgIGlmIChOZXB0dW5lc1ByaWRlLm9yaWdpbmFsUGxheWVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIE5lcHR1bmVzUHJpZGUub3JpZ2luYWxQbGF5ZXIgPSBOZXB0dW5lc1ByaWRlLnVuaXZlcnNlLnBsYXllci51aWQ7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNvZGUgPSAoZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhLnNwbGl0KFwiOlwiKVsxXSkgfHwgb3RoZXJVc2VyQ29kZTtcbiAgICAgICAgb3RoZXJVc2VyQ29kZSA9IGNvZGU7XG4gICAgICAgIGlmIChvdGhlclVzZXJDb2RlKSB7XG4gICAgICAgICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICAgICAgICAgIGdhbWVfbnVtYmVyOiBnYW1lLFxuICAgICAgICAgICAgICAgIGFwaV92ZXJzaW9uOiBcIjAuMVwiLFxuICAgICAgICAgICAgICAgIGNvZGU6IG90aGVyVXNlckNvZGUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIGVnZ2VycyA9IGpRdWVyeS5hamF4KHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9ucC5pcm9uaGVsbWV0LmNvbS9hcGlcIixcbiAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGF0YTogcGFyYW1zLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIHVuaXZlcnNlID0gTmVwdHVuZXNQcmlkZS51bml2ZXJzZTtcbiAgICAgICAgICAgIHZhciBzY2FuID0gZWdnZXJzLnJlc3BvbnNlSlNPTi5zY2FubmluZ19kYXRhO1xuICAgICAgICAgICAgdW5pdmVyc2UuZ2FsYXh5LnN0YXJzID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHNjYW4uc3RhcnMpLCB1bml2ZXJzZS5nYWxheHkuc3RhcnMpO1xuICAgICAgICAgICAgZm9yICh2YXIgcyBpbiBzY2FuLnN0YXJzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXIgPSBzY2FuLnN0YXJzW3NdO1xuICAgICAgICAgICAgICAgIGlmIChzdGFyLnYgIT09IFwiMFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHVuaXZlcnNlLmdhbGF4eS5zdGFyc1tzXSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCB1bml2ZXJzZS5nYWxheHkuc3RhcnNbc10pLCBzdGFyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1bml2ZXJzZS5nYWxheHkuZmxlZXRzID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHNjYW4uZmxlZXRzKSwgdW5pdmVyc2UuZ2FsYXh5LmZsZWV0cyk7XG4gICAgICAgICAgICBOZXB0dW5lc1ByaWRlLm5wLm9uRnVsbFVuaXZlcnNlKG51bGwsIHVuaXZlcnNlLmdhbGF4eSk7XG4gICAgICAgICAgICBOZXB0dW5lc1ByaWRlLm5wdWkub25IaWRlU2NyZWVuKG51bGwsIHRydWUpO1xuICAgICAgICAgICAgaW5pdCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBkZWZpbmVIb3RrZXkoXCI+XCIsIHN3aXRjaFVzZXIsIFwiU3dpdGNoIHZpZXdzIHRvIHRoZSBsYXN0IHVzZXIgd2hvc2UgQVBJIGtleSB3YXMgdXNlZCB0byBsb2FkIGRhdGEuIFRoZSBIVUQgc2hvd3MgdGhlIGN1cnJlbnQgdXNlciB3aGVuIFwiICtcbiAgICAgICAgXCJpdCBpcyBub3QgeW91ciBvd24gYWxpYXMgdG8gaGVscCByZW1pbmQgeW91IHRoYXQgeW91IGFyZW4ndCBpbiBjb250cm9sIG9mIHRoaXMgdXNlci5cIik7XG4gICAgZGVmaW5lSG90a2V5KFwifFwiLCBtZXJnZVVzZXIsIFwiTWVyZ2UgdGhlIGxhdGVzdCBkYXRhIGZyb20gdGhlIGxhc3QgdXNlciB3aG9zZSBBUEkga2V5IHdhcyB1c2VkIHRvIGxvYWQgZGF0YS4gVGhpcyBpcyB1c2VmdWwgYWZ0ZXIgYSB0aWNrIFwiICtcbiAgICAgICAgXCJwYXNzZXMgYW5kIHlvdSd2ZSByZWxvYWRlZCwgYnV0IHlvdSBzdGlsbCB3YW50IHRoZSBtZXJnZWQgc2NhbiBkYXRhIGZyb20gdHdvIHBsYXllcnMgb25zY3JlZW4uXCIpO1xuICAgIE5lcHR1bmVzUHJpZGUubnAub24oXCJzd2l0Y2hfdXNlcl9hcGlcIiwgc3dpdGNoVXNlcik7XG4gICAgTmVwdHVuZXNQcmlkZS5ucC5vbihcIm1lcmdlX3VzZXJfYXBpXCIsIG1lcmdlVXNlcik7XG4gICAgdmFyIG5wYUhlbHAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBoZWxwID0gW1wiPEgxPlwiLmNvbmNhdCh0aXRsZSwgXCI8L0gxPlwiKV07XG4gICAgICAgIGdldEhvdGtleXMoKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBnZXRIb3RrZXlDYWxsYmFjayhrZXkpO1xuICAgICAgICAgICAgaGVscC5wdXNoKFwiPGgyPkhvdGtleTogXCIuY29uY2F0KGtleSwgXCI8L2gyPlwiKSk7XG4gICAgICAgICAgICBpZiAoYWN0aW9uLmhlbHApIHtcbiAgICAgICAgICAgICAgICBoZWxwLnB1c2goYWN0aW9uLmhlbHApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaGVscC5wdXNoKFwiPHA+Tm8gZG9jdW1lbnRhdGlvbiB5ZXQuPHA+PGNvZGU+XCIuY29uY2F0KGFjdGlvbi50b0xvY2FsZVN0cmluZygpLCBcIjwvY29kZT5cIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgTmVwdHVuZXNQcmlkZS51bml2ZXJzZS5oZWxwSFRNTCA9IGhlbHAuam9pbihcIlwiKTtcbiAgICAgICAgTmVwdHVuZXNQcmlkZS5ucC50cmlnZ2VyKFwic2hvd19zY3JlZW5cIiwgXCJoZWxwXCIpO1xuICAgIH07XG4gICAgZGVmaW5lSG90a2V5KFwiP1wiLCBucGFIZWxwLCBcIkRpc3BsYXkgdGhpcyBoZWxwIHNjcmVlbi5cIik7XG4gICAgdmFyIGF1dG9jb21wbGV0ZUNhcmV0ID0gMDtcbiAgICB2YXIgYXV0b2NvbXBsZXRlVHJpZ2dlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgaWYgKHRhcmdldC50eXBlID09PSBcInRleHRhcmVhXCIpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBlLmtleTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwiXVwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKGF1dG9jb21wbGV0ZUNhcmV0IDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlQ2FyZXQgPSB0YXJnZXQudmFsdWUubGFzdEluZGV4T2YoXCJbW1wiKSArIDI7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhdXRvY29tcGxldGVDYXJldCA8PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvY29tcGxldGVDYXJldCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbXBsZXRlZCA9IHRhcmdldC52YWx1ZS5pbmRleE9mKFwiXV1cIiwgYXV0b2NvbXBsZXRlQ2FyZXQpID4gLTE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21wbGV0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZUNhcmV0ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBhdXRvY29tcGxldGVDYXJldDtcbiAgICAgICAgICAgICAgICB2YXIgZW5kQnJhY2tldCA9IHRhcmdldC52YWx1ZS5pbmRleE9mKFwiXVwiLCBzdGFydCk7XG4gICAgICAgICAgICAgICAgaWYgKGVuZEJyYWNrZXQgPT09IC0xKVxuICAgICAgICAgICAgICAgICAgICBlbmRCcmFja2V0ID0gdGFyZ2V0LnZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB2YXIgYXV0b1N0cmluZyA9IHRhcmdldC52YWx1ZS5zdWJzdHJpbmcoc3RhcnQsIGVuZEJyYWNrZXQpO1xuICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZUNhcmV0ID0gMDtcbiAgICAgICAgICAgICAgICB2YXIgbSA9IGF1dG9TdHJpbmcubWF0Y2goL15bMC05XVswLTldKiQvKTtcbiAgICAgICAgICAgICAgICBpZiAobSA9PT0gbnVsbCB8fCBtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHVpZCA9IE51bWJlcihhdXRvU3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVuZCA9IHRhcmdldC5zZWxlY3Rpb25FbmQ7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhdXRvID0gXCJcIi5jb25jYXQocHVpZCwgXCJdXSBcIikuY29uY2F0KE5lcHR1bmVzUHJpZGUudW5pdmVyc2UuZ2FsYXh5LnBsYXllcnNbcHVpZF0uYWxpYXMpO1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQudmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnZhbHVlLnN1YnN0cmluZygwLCBzdGFydCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG8gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC52YWx1ZS5zdWJzdHJpbmcoZW5kLCB0YXJnZXQudmFsdWUubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnNlbGVjdGlvblN0YXJ0ID0gc3RhcnQgKyBhdXRvLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnNlbGVjdGlvbkVuZCA9IHN0YXJ0ICsgYXV0by5sZW5ndGg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGFyZ2V0LnNlbGVjdGlvblN0YXJ0ID4gMSkge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHRhcmdldC5zZWxlY3Rpb25TdGFydCAtIDI7XG4gICAgICAgICAgICAgICAgdmFyIHNzID0gdGFyZ2V0LnZhbHVlLnN1YnN0cmluZyhzdGFydCwgc3RhcnQgKyAyKTtcbiAgICAgICAgICAgICAgICBhdXRvY29tcGxldGVDYXJldCA9IHNzID09PSBcIltbXCIgPyB0YXJnZXQuc2VsZWN0aW9uU3RhcnQgOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCBhdXRvY29tcGxldGVUcmlnZ2VyKTtcbiAgICBjb25zb2xlLmxvZyhcIk5lcHR1bmUncyBQcmlkZSBBZ2VudCBpbmplY3Rpb24gZmluaS5cIik7XG59XG5OZXB0dW5lc1ByaWRlQWdlbnQoKTtcbiIsImV4cG9ydCBmdW5jdGlvbiBzYWZlX2ltYWdlX3VybCh1KSB7XG4gICAgcmV0dXJuIC9eaHR0cHM6JiN4MkY7JiN4MkY7KGlcXC5pYmJcXC5jb3xpXFwuaW1ndXJcXC5jb20pJiN4MkY7Wy0jO1xcLlxcd117MywyMDB9JC8udGVzdCh1KTtcbn1cbiJdLCJuYW1lcyI6WyJsYXN0Q2xpcCIsInNldENsaXAiLCJ0ZXh0IiwiZ2V0Q2xpcCIsImhvdGtleXMiLCJkZWZpbmVIb3RrZXkiLCJrZXkiLCJhY3Rpb24iLCJoZWxwIiwicmVwb3J0Rm4iLCJNb3VzZXRyYXAiLCJiaW5kIiwibmF2aWdhdG9yIiwiY2xpcGJvYXJkIiwid3JpdGVUZXh0IiwiX19hc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwidGhpcyIsIl9hIiwiY2F1dGlvbiIsInRpdGxlIiwiY29uY2F0IiwidmVyc2lvbiIsInJlcGxhY2UiLCJzdGFyUmVwb3J0IiwicGxheWVycyIsIk5lcHR1bmVzUHJpZGUiLCJ1bml2ZXJzZSIsImdhbGF4eSIsInN0YXJzIiwib3V0cHV0IiwicHVzaCIsImZvcm1hdCIsInN0YXIiLCJwdWlkIiwic2hpcHNQZXJUaWNrIiwiZSIsInRvdGFsRGVmZW5zZXMiLCJqb2luIiwiY29uc29sZSIsImxvZyIsIlN0cmluZyIsImFyZ3MiLCJfaSIsIm1hdGNoIiwiaW5kZXgiLCJNYXRoIiwidHJ1bmMiLCJhbXBtIiwiaCIsIm0iLCJkYXlzIiwidGlja051bWJlciIsInRpY2tzIiwidGljayIsImZsZWV0T3V0Y29tZXMiLCJjb21iYXRIYW5kaWNhcCIsImNvbWJhdE91dGNvbWVzIiwiZmxlZXRzIiwiZmxpZ2h0cyIsImYiLCJmbGVldCIsIm8iLCJzdG9wXzEiLCJldGFGaXJzdCIsInN0YXJuYW1lIiwic3QiLCJzb3J0IiwiYSIsImIiLCJhcnJpdmFscyIsImFycml2YWxUaW1lcyIsInN0YXJzdGF0ZSIsIm9yYml0aW5nIiwib3JiaXQiLCJ1aWQiLCJsYXN0X3VwZGF0ZWQiLCJzaGlwcyIsImMiLCJhcnJpdmFsS2V5IiwidG9TdHJpbmciLCJ1bmRlZmluZWQiLCJrIiwiYXJyaXZhbCIsImthIiwic3BsaXQiLCJwYXJzZUludCIsInN0YXJJZCIsIm1pbkRpc3RhbmNlIiwib3duZXIiLCJkIiwiZGlzdGFuY2UiLCJ4IiwieSIsImx4IiwibHkiLCJ0aWNrRGVsdGEiLCJvbGRTaGlwcyIsIm9sZGMiLCJsYW5kaW5nU3RyaW5nIiwic3Vic3RyaW5nIiwib3V0Y29tZVN0cmluZyIsImZsb29yIiwiZXRhIiwib3V0Y29tZSIsImF3dCIsIm9mZmVuc2UiLCJjb250cmlidXRpb24iLCJvbGRhIiwid3QiLCJ0ZWNoIiwid2VhcG9ucyIsImxldmVsIiwiYXR0YWNrZXJzQWdncmVnYXRlIiwiZHd0IiwiZGVmZW5zZSIsInBsYXllcl91aWQiLCJoYW5kaWNhcFN0cmluZyIsIm5ld0FnZ3JlZ2F0ZSIsInBsYXllckNvbnRyaWJ1dGlvbiIsImJpZ2dlc3RQbGF5ZXIiLCJiaWdnZXN0UGxheWVySWQiLCJrXzEiLCJrYV8xIiwicGxheWVySWQiLCJrXzIiLCJsb25nRmxlZXRSZXBvcnQiLCJicmllZkZsZWV0UmVwb3J0Iiwic3RvcF8yIiwibWFwIiwibnAiLCJ0cmlnZ2VyIiwibnB1aSIsImNhbnZhcyIsInRvRGF0YVVSTCIsImhvbWVQbGFuZXRzIiwiaG9tZSIsImZpZWxkcyIsIl9sb29wXzEiLCJyZWNvcmQiLCJkcmF3T3ZlcmxheVN0cmluZyIsImNvbnRleHQiLCJmZ0NvbG9yIiwic3RyIiwiQ3J1eCIsImZpbGxTdHlsZSIsInNtZWFyIiwiZmlsbFRleHQiLCJhbnlTdGFyQ2FuU2VlIiwic2NhblJhbmdlIiwic2Nhbm5pbmciLCJ2YWx1ZSIsImhvb2tzTG9hZGVkIiwicHJlZml4IiwidGVycml0b3J5T24iLCJjc3MiLCJydWxlcyIsImRvY3VtZW50Iiwic3R5bGVTaGVldHMiLCJjc3NSdWxlcyIsImoiLCJ0eXBlIiwiQ1NTUnVsZSIsIlNUWUxFX1JVTEUiLCJzdHlsZSIsInNlbGVjdG9yVGV4dCIsImVyciIsImNzc3J1bGVzIiwicmVjb2xvclBsYXllcnMiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsImdlbmVyYXRvciIsIm93bmVyc2hpcFNwcml0ZXMiLCJzcHJpdGVDb250ZXh0IiwiX2IiLCJfYyIsImNvbG9yIiwicGxheWVyU3ByaXRlIiwicGxheWVyQ29udGV4dCIsIndoaXRlUGxheWVyIiwicGsiLCJwbGF5ZXIiLCJjb2wiLCJyb3ciLCJib2R5IiwiZyIsIl8iLCJsYWJlbCIsInNlbnQiLCJ0cnlzIiwib3BzIiwibmV4dCIsInZlcmIiLCJTeW1ib2wiLCJpdGVyYXRvciIsInYiLCJvcCIsIlR5cGVFcnJvciIsImRvbmUiLCJwb3AiLCJzdGVwIiwiX19nZW5lcmF0b3IiLCJfZiIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsImdldENvbnRleHQiLCJkcmF3SW1hZ2UiLCJzdGFyU3JjIiwiYmFja2dyb3VuZENvbG9yIiwiZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uIiwiZmlsbFJlY3QiLCJJbWFnZSIsInNyYyIsImRlY29kZSIsImNsZWFyUmVjdCIsImJhY2tncm91bmQiLCJQIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsInJlc3VsdCIsInRoZW4iLCJvcmlnQ29sb3IiLCJ0bXAiLCJpbml0IiwiZmxlZXRMaW5rIiwiaHlwZXJsaW5rZWRNZXNzYWdlSW5zZXJ0cyIsImxpbmtGbGVldHMiLCJzdXBlckRyYXdTY2FubmluZyIsImRyYXdTY2FubmluZ1JhbmdlIiwiZHJhd0Rpc2MiLCJzY2FsZSIsInIiLCJzYXZlIiwidHJhbnNsYXRlIiwibW92ZVRvIiwiYXJjIiwiUEkiLCJyZXN0b3JlIiwiZHJhd1N0YXJUZXJyaXRvcnkiLCJ3b3JsZFRvU2NyZWVuWCIsIndvcmxkVG9TY3JlZW5ZIiwic0giLCJseVRvTWFwIiwicGl4ZWxSYXRpbyIsInNjYW5uaW5nUmFuZ2VTcHJpdGUiLCJwSCIsImx5clRvTWFwIiwicHJvcHVsc2lvbiIsImZzY2FsZSIsImZyIiwiZmxlZXRSYW5nZVNwcml0ZSIsInNlbGVjdGVkU3RhciIsImJlZ2luUGF0aCIsImZpbGwiLCJjbG9zZVBhdGgiLCJzdXBlckRyYXdUZXh0IiwiZHJhd1RleHQiLCJmb250IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwidmlld3BvcnRXaWR0aCIsInZpZXdwb3J0SGVpZ2h0Iiwib3JpZ2luYWxQbGF5ZXIiLCJhbGlhcyIsInNlbGVjdGVkRmxlZXQiLCJwYXRoIiwiZHkiLCJkeCIsImxpbmVIZWlnaHQiLCJyYWRpdXMiLCJhbmdsZSIsImF0YW4iLCJvZmZzZXR4IiwiY29zIiwib2Zmc2V0eSIsInNpbiIsImdhbWVDb25maWciLCJ0dXJuQmFzZWQiLCJ0aW1lVG9UaWNrIiwieE9mZnNldCIsInNxcnQiLCJzdGVwUmFkaXVzIiwiZmxlZXRfc3BlZWQiLCJ3YXJwU3BlZWQiLCJzdGVweCIsInN0ZXB5IiwieF8xIiwiTnVtYmVyIiwieV8xIiwidmlzQ29sb3IiLCJydWxlciIsInRlbXBsYXRlRGF0YSIsImZwIiwic3AiLCJzdWIiLCJwYXR0ZXJuIiwid2hvbGVUaW1lIiwibXNfc2luY2VfZGF0YSIsInRmIiwibHRjIiwiaW5kZXhPZiIsInNsaWNlIiwidGVzdCIsInJlbGF0aXZlVGljayIsIm1zcGx1cyIsInRpY2tfZnJhZ21lbnQiLCJsb2NUaW1lQ29ycmVjdGlvbiIsInBhdXNlZCIsIkRhdGUiLCJ2YWx1ZU9mIiwibm93IiwidHVybl9iYXNlZCIsInRpY2tfcmF0ZSIsImZvcm1hdFRpbWUiLCJhcGlMaW5rIiwic3RhcnRzV2l0aCIsInRlbXBsYXRlcyIsInN1cGVyTmV3TWVzc2FnZUNvbW1lbnRCb3giLCJOZXdNZXNzYWdlQ29tbWVudEJveCIsIm9uIiwiX2UiLCJfZCIsImluYm94IiwiY29tbWVudERyYWZ0cyIsInNlbGVjdGVkTWVzc2FnZSIsIndpZGdldCIsIkJ1dHRvbiIsImdyaWQiLCJyb29zdCIsIl9zY3JlZW5Db25maWciLCJvbkhpZGVTY3JlZW4iLCJvbkhpZGVTZWxlY3Rpb25NZW51IiwicmVwb3J0U2NyZWVuIiwiU2NyZWVuIiwiVGV4dCIsInJhd0hUTUwiLCJyZXBvcnQiLCJXaWRnZXQiLCJzaXplIiwiRHJvcERvd24iLCJwbGFuZXRzIiwiY29tYmF0cyIsInBvcyIsInJlcG9ydEhvb2siLCJodG1sIiwiaHlwZXJsaW5rTWVzc2FnZSIsImFjdGl2ZVNjcmVlbiIsInNjcmVlbkNvbnRhaW5lciIsImxheW91dEVsZW1lbnQiLCJTaWRlTWVudUl0ZW0iLCJzaWRlTWVudSIsInN1cGVyRm9ybWF0VGltZSIsInRpbWVPcHRpb25zIiwicmVsYXRpdmVUaW1lcyIsIm1zIiwic2hvd01pbnV0ZXMiLCJzaG93U2Vjb25kcyIsImdldFRpbWUiLCJ0dHQiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXREYXkiLCJjZWlsIiwid2luZG93IiwiY2hyb21lIiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJsb2FkSG9va3MiLCJzdXBlck9uU2VydmVyUmVzcG9uc2VfMSIsIm9uU2VydmVyUmVzcG9uc2UiLCJyZXNwb25zZSIsImV2ZW50Iiwib3RoZXJVc2VyQ29kZSIsImdhbWUiLCJnYW1lTnVtYmVyIiwic3dpdGNoVXNlciIsIl9ldmVudCIsImRhdGEiLCJjb2RlIiwicGFyYW1zIiwiZ2FtZV9udW1iZXIiLCJhcGlfdmVyc2lvbiIsImVnZ2VycyIsImpRdWVyeSIsImFqYXgiLCJ1cmwiLCJhc3luYyIsImRhdGFUeXBlIiwib25GdWxsVW5pdmVyc2UiLCJyZXNwb25zZUpTT04iLCJzY2FubmluZ19kYXRhIiwibWVyZ2VVc2VyIiwic2NhbiIsImtleXMiLCJmb3JFYWNoIiwiZ2V0SG90a2V5Q2FsbGJhY2siLCJ0b0xvY2FsZVN0cmluZyIsImhlbHBIVE1MIiwiYXV0b2NvbXBsZXRlQ2FyZXQiLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwibGFzdEluZGV4T2YiLCJzdGFydCIsImVuZEJyYWNrZXQiLCJhdXRvU3RyaW5nIiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYXV0byIsInNlbGVjdGlvblN0YXJ0Iiwic3MiLCJOZXB0dW5lc1ByaWRlQWdlbnQiXSwic291cmNlUm9vdCI6IiJ9';

loadNPA();
